{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"var Ap = AccountsCommon.prototype;\nvar defaultRateLimiterRuleId;\n// Removes default rate limiting rule\nAp.removeDefaultRateLimit = function () {\n  var resp = DDPRateLimiter.removeRule(defaultRateLimiterRuleId);\n  defaultRateLimiterRuleId = null;\n  return resp;\n};\n\n// Add a default rule of limiting logins, creating new users and password reset\n// to 5 times every 10 seconds per connection.\nAp.addDefaultRateLimit = function () {\n  if (!defaultRateLimiterRuleId) {\n    defaultRateLimiterRuleId = DDPRateLimiter.addRule({\n      userId: null,\n      clientAddress: null,\n      type: 'method',\n      name: function (name) {\n        return _.contains(['login', 'createUser', 'resetPassword', 'forgotPassword'], name);\n      },\n      connectionId: function (connectionId) {\n        return true;\n      }\n    }, 5, 10000);\n  }\n};\n\nAp.addDefaultRateLimit();","ast":null,"map":{"version":3,"sources":["/accounts_rate_limit.js"],"names":[],"mappings":"AAAA,IAAI,EAAE,GAAG,cAAc,CAAC,SAAS,CAAC;AAClC,IAAI,wBAAwB,CAAC;;AAE7B,EAAE,CAAC,sBAAsB,GAAG,YAAY;AACtC,MAAM,IAAI,GAAG,cAAc,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;AACjE,0BAAwB,GAAG,IAAI,CAAC;AAChC,SAAO,IAAI,CAAC;CACb,CAAA;;;;AAID,EAAE,CAAC,mBAAmB,GAAG,YAAY;AACnC,MAAI,CAAC,wBAAwB,EAAE;AAC7B,4BAAwB,GAAG,cAAc,CAAC,OAAO,CAAC;AAChD,YAAM,EAAE,IAAI;AACZ,mBAAa,EAAE,IAAI;AACnB,UAAI,EAAE,QAAQ;AACd,UAAI,EAAE,UAAU,IAAI,EAAE;AACpB,eAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,YAAY,EAAE,eAAe,EACvD,gBAAgB,CAAC,EAAE,IAAI,CAAC,CAAC;OAC5B;AACD,kBAAY,EAAE,UAAU,YAAY,EAAE;AACpC,eAAO,IAAI,CAAC;OACb;KACF,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;GACd;CACF,CAAA;;AAED,EAAE,CAAC,mBAAmB,EAAE,CAAC","file":"/accounts_rate_limit.js.map","sourcesContent":["var Ap = AccountsCommon.prototype;\nvar defaultRateLimiterRuleId;\n// Removes default rate limiting rule\nAp.removeDefaultRateLimit = function () {\n  const resp = DDPRateLimiter.removeRule(defaultRateLimiterRuleId);\n  defaultRateLimiterRuleId = null;\n  return resp;\n}\n\n// Add a default rule of limiting logins, creating new users and password reset\n// to 5 times every 10 seconds per connection.\nAp.addDefaultRateLimit = function () {\n  if (!defaultRateLimiterRuleId) {\n    defaultRateLimiterRuleId = DDPRateLimiter.addRule({\n      userId: null,\n      clientAddress: null,\n      type: 'method',\n      name: function (name) {\n        return _.contains(['login', 'createUser', 'resetPassword',\n          'forgotPassword'], name);\n      },\n      connectionId: function (connectionId) {\n        return true;\n      }\n    }, 5, 10000);\n  }\n}\n\nAp.addDefaultRateLimit();"]},"hash":"cf24ddb460f7252a76daa0bcffbe40d58420c769"}
