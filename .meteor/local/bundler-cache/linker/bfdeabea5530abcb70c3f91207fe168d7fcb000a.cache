[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar EJSON = Package.ejson.EJSON;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar InjectData;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// packages/meteorhacks_inject-data/packages/meteorhacks_inject-data.js         //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\n(function () {                                                                  // 1\n                                                                                // 2\n////////////////////////////////////////////////////////////////////////////    // 3\n//                                                                        //    // 4\n// packages/meteorhacks:inject-data/lib/namespace.js                      //    // 5\n//                                                                        //    // 6\n////////////////////////////////////////////////////////////////////////////    // 7\n                                                                          //    // 8\nInjectData = {};                                                          // 1  // 9\n////////////////////////////////////////////////////////////////////////////    // 10\n                                                                                // 11\n}).call(this);                                                                  // 12\n                                                                                // 13\n                                                                                // 14\n                                                                                // 15\n                                                                                // 16\n                                                                                // 17\n                                                                                // 18\n(function () {                                                                  // 19\n                                                                                // 20\n////////////////////////////////////////////////////////////////////////////    // 21\n//                                                                        //    // 22\n// packages/meteorhacks:inject-data/lib/utils.js                          //    // 23\n//                                                                        //    // 24\n////////////////////////////////////////////////////////////////////////////    // 25\n                                                                          //    // 26\nInjectData._encode = function(ejson) {                                    // 1  // 27\n  var ejsonString = EJSON.stringify(ejson);                               // 2  // 28\n  return encodeURIComponent(ejsonString);                                 // 3  // 29\n};                                                                        // 4  // 30\n                                                                          // 5  // 31\nInjectData._decode = function(encodedEjson) {                             // 6  // 32\n  var decodedEjsonString = decodeURIComponent(encodedEjson);              // 7  // 33\n  if(!decodedEjsonString) return null;                                    // 8  // 34\n                                                                          // 9  // 35\n  return EJSON.parse(decodedEjsonString);                                 // 10\n};                                                                        // 11\n                                                                          // 12\n////////////////////////////////////////////////////////////////////////////    // 39\n                                                                                // 40\n}).call(this);                                                                  // 41\n                                                                                // 42\n                                                                                // 43\n                                                                                // 44\n                                                                                // 45\n                                                                                // 46\n                                                                                // 47\n(function () {                                                                  // 48\n                                                                                // 49\n////////////////////////////////////////////////////////////////////////////    // 50\n//                                                                        //    // 51\n// packages/meteorhacks:inject-data/lib/server.js                         //    // 52\n//                                                                        //    // 53\n////////////////////////////////////////////////////////////////////////////    // 54\n                                                                          //    // 55\nvar http = Npm.require('http');                                           // 1  // 56\n                                                                          // 2  // 57\nvar templateText = Assets.getText('lib/inject.html');                     // 3  // 58\nvar injectDataTemplate = _.template(templateText);                        // 4  // 59\n                                                                          // 5  // 60\n// custome API                                                            // 6  // 61\nhttp.OutgoingMessage.prototype.pushData = function pushData(key, value) { // 7  // 62\n  if(!this._injectPayload) {                                              // 8  // 63\n    this._injectPayload = {};                                             // 9  // 64\n  }                                                                       // 10\n                                                                          // 11\n  this._injectPayload[key] = value;                                       // 12\n};                                                                        // 13\n                                                                          // 14\nhttp.OutgoingMessage.prototype.getData = function getData(key) {          // 15\n  if(this._injectPayload) {                                               // 16\n    return _.clone(this._injectPayload[key]);                             // 17\n  } else {                                                                // 18\n    return null;                                                          // 19\n  }                                                                       // 20\n};                                                                        // 21\n                                                                          // 22\n// overrides                                                              // 23\nvar originalWrite = http.OutgoingMessage.prototype.write;                 // 24\nhttp.OutgoingMessage.prototype.write = function(chunk, encoding) {        // 25\n  var condition =                                                         // 26\n    this._injectPayload && !this._injected &&                             // 27\n    encoding === undefined &&                                             // 28\n    /<!DOCTYPE html>/.test(chunk);                                        // 29\n                                                                          // 30\n  if(condition) {                                                         // 31\n    // if cors headers included if may cause some security holes          // 32\n    // so we simply turn off injecting if we detect an cors header        // 33\n    // read more: http://goo.gl/eGwb4e                                    // 34\n    if(this._headers['access-control-allow-origin']) {                    // 35\n      var warnMessage =                                                   // 36\n        'warn: injecting data turned off due to CORS headers. ' +         // 37\n        'read more: http://goo.gl/eGwb4e';                                // 38\n                                                                          // 39\n      console.warn(warnMessage);                                          // 40\n      originalWrite.call(this, chunk, encoding);                          // 41\n      return;                                                             // 42\n    }                                                                     // 43\n                                                                          // 44\n    // inject data                                                        // 45\n    var data = InjectData._encode(this._injectPayload);                   // 46\n    var injectHtml = injectDataTemplate({data: data});                    // 47\n                                                                          // 48\n    // if this is a buffer, convert it to string                          // 49\n    chunk = chunk.toString();                                             // 50\n    chunk = chunk.replace('<script', injectHtml + '<script');             // 51\n                                                                          // 52\n    this._injected = true;                                                // 53\n  }                                                                       // 54\n                                                                          // 55\n  originalWrite.call(this, chunk, encoding);                              // 56\n};                                                                        // 57\n////////////////////////////////////////////////////////////////////////////    // 113\n                                                                                // 114\n}).call(this);                                                                  // 115\n                                                                                // 116\n//////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['meteorhacks:inject-data'] = {\n  InjectData: InjectData\n};\n\n})();\n","servePath":"/packages/meteorhacks_inject-data.js","sourceMap":{"version":3,"sources":["/packages/meteorhacks_inject-data/packages/meteorhacks_inject-data.js"],"names":[],"mappingssF","file":"/packages/meteorhacks_inject-data.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/meteorhacks:inject-data/lib/namespace.js                      //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nInjectData = {};                                                          // 1\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/meteorhacks:inject-data/lib/utils.js                          //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nInjectData._encode = function(ejson) {                                    // 1\n  var ejsonString = EJSON.stringify(ejson);                               // 2\n  return encodeURIComponent(ejsonString);                                 // 3\n};                                                                        // 4\n                                                                          // 5\nInjectData._decode = function(encodedEjson) {                             // 6\n  var decodedEjsonString = decodeURIComponent(encodedEjson);              // 7\n  if(!decodedEjsonString) return null;                                    // 8\n                                                                          // 9\n  return EJSON.parse(decodedEjsonString);                                 // 10\n};                                                                        // 11\n                                                                          // 12\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n////////////////////////////////////////////////////////////////////////////\n//                                                                        //\n// packages/meteorhacks:inject-data/lib/server.js                         //\n//                                                                        //\n////////////////////////////////////////////////////////////////////////////\n                                                                          //\nvar http = Npm.require('http');                                           // 1\n                                                                          // 2\nvar templateText = Assets.getText('lib/inject.html');                     // 3\nvar injectDataTemplate = _.template(templateText);                        // 4\n                                                                          // 5\n// custome API                                                            // 6\nhttp.OutgoingMessage.prototype.pushData = function pushData(key, value) { // 7\n  if(!this._injectPayload) {                                              // 8\n    this._injectPayload = {};                                             // 9\n  }                                                                       // 10\n                                                                          // 11\n  this._injectPayload[key] = value;                                       // 12\n};                                                                        // 13\n                                                                          // 14\nhttp.OutgoingMessage.prototype.getData = function getData(key) {          // 15\n  if(this._injectPayload) {                                               // 16\n    return _.clone(this._injectPayload[key]);                             // 17\n  } else {                                                                // 18\n    return null;                                                          // 19\n  }                                                                       // 20\n};                                                                        // 21\n                                                                          // 22\n// overrides                                                              // 23\nvar originalWrite = http.OutgoingMessage.prototype.write;                 // 24\nhttp.OutgoingMessage.prototype.write = function(chunk, encoding) {        // 25\n  var condition =                                                         // 26\n    this._injectPayload && !this._injected &&                             // 27\n    encoding === undefined &&                                             // 28\n    /<!DOCTYPE html>/.test(chunk);                                        // 29\n                                                                          // 30\n  if(condition) {                                                         // 31\n    // if cors headers included if may cause some security holes          // 32\n    // so we simply turn off injecting if we detect an cors header        // 33\n    // read more: http://goo.gl/eGwb4e                                    // 34\n    if(this._headers['access-control-allow-origin']) {                    // 35\n      var warnMessage =                                                   // 36\n        'warn: injecting data turned off due to CORS headers. ' +         // 37\n        'read more: http://goo.gl/eGwb4e';                                // 38\n                                                                          // 39\n      console.warn(warnMessage);                                          // 40\n      originalWrite.call(this, chunk, encoding);                          // 41\n      return;                                                             // 42\n    }                                                                     // 43\n                                                                          // 44\n    // inject data                                                        // 45\n    var data = InjectData._encode(this._injectPayload);                   // 46\n    var injectHtml = injectDataTemplate({data: data});                    // 47\n                                                                          // 48\n    // if this is a buffer, convert it to string                          // 49\n    chunk = chunk.toString();                                             // 50\n    chunk = chunk.replace('<script', injectHtml + '<script');             // 51\n                                                                          // 52\n    this._injected = true;                                                // 53\n  }                                                                       // 54\n                                                                          // 55\n  originalWrite.call(this, chunk, encoding);                              // 56\n};                                                                        // 57\n////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]