[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar _ = Package.underscore._;\nvar BrowserPolicy = Package['browser-policy-common'].BrowserPolicy;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// packages/browser-policy-framing/browser-policy-framing.js                    //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\n// By adding this package, you get a default policy where only web pages on the\n// same origin as your app can frame your app.                                  // 2\n//                                                                              // 3\n// For controlling which origins can frame this app,                            // 4\n// BrowserPolicy.framing.disallow()                                             // 5\n// BrowserPolicy.framing.restrictToOrigin(origin)                               // 6\n// BrowserPolicy.framing.allowByAnyOrigin()                                     // 7\n                                                                                // 8\nvar defaultXFrameOptions = \"SAMEORIGIN\";                                        // 9\nvar xFrameOptions = defaultXFrameOptions;                                       // 10\n                                                                                // 11\nBrowserPolicy.framing = {};                                                     // 12\n                                                                                // 13\n_.extend(BrowserPolicy.framing, {                                               // 14\n  // Exported for tests and browser-policy-common.                              // 15\n  _constructXFrameOptions: function () {                                        // 16\n    return xFrameOptions;                                                       // 17\n  },                                                                            // 18\n  _reset: function () {                                                         // 19\n    xFrameOptions = defaultXFrameOptions;                                       // 20\n  },                                                                            // 21\n                                                                                // 22\n  disallow: function () {                                                       // 23\n    xFrameOptions = \"DENY\";                                                     // 24\n  },                                                                            // 25\n  // ALLOW-FROM not supported in Chrome or Safari.                              // 26\n  restrictToOrigin: function (origin) {                                         // 27\n    // Trying to specify two allow-from throws to prevent users from            // 28\n    // accidentally overwriting an allow-from origin when they think they are   // 29\n    // adding multiple origins.                                                 // 30\n    if (xFrameOptions && xFrameOptions.indexOf(\"ALLOW-FROM\") === 0)             // 31\n      throw new Error(\"You can only specify one origin that is allowed to\" +    // 32\n                      \" frame this app.\");                                      // 33\n    xFrameOptions = \"ALLOW-FROM \" + origin;                                     // 34\n  },                                                                            // 35\n  allowAll: function () {                                                       // 36\n    xFrameOptions = null;                                                       // 37\n  }                                                                             // 38\n});                                                                             // 39\n                                                                                // 40\n//////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['browser-policy-framing'] = {};\n\n})();\n","servePath":"/packages/browser-policy-framing.js","sourceMap":{"version":3,"sources":["/packages/browser-policy-framing/browser-policy-framing.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qF","file":"/packages/browser-policy-framing.js","sourcesContent":["// By adding this package, you get a default policy where only web pages on the\n// same origin as your app can frame your app.\n//\n// For controlling which origins can frame this app,\n// BrowserPolicy.framing.disallow()\n// BrowserPolicy.framing.restrictToOrigin(origin)\n// BrowserPolicy.framing.allowByAnyOrigin()\n\nvar defaultXFrameOptions = \"SAMEORIGIN\";\nvar xFrameOptions = defaultXFrameOptions;\n\nBrowserPolicy.framing = {};\n\n_.extend(BrowserPolicy.framing, {\n  // Exported for tests and browser-policy-common.\n  _constructXFrameOptions: function () {\n    return xFrameOptions;\n  },\n  _reset: function () {\n    xFrameOptions = defaultXFrameOptions;\n  },\n\n  disallow: function () {\n    xFrameOptions = \"DENY\";\n  },\n  // ALLOW-FROM not supported in Chrome or Safari.\n  restrictToOrigin: function (origin) {\n    // Trying to specify two allow-from throws to prevent users from\n    // accidentally overwriting an allow-from origin when they think they are\n    // adding multiple origins.\n    if (xFrameOptions && xFrameOptions.indexOf(\"ALLOW-FROM\") === 0)\n      throw new Error(\"You can only specify one origin that is allowed to\" +\n                      \" frame this app.\");\n    xFrameOptions = \"ALLOW-FROM \" + origin;\n  },\n  allowAll: function () {\n    xFrameOptions = null;\n  }\n});\n"]}}]