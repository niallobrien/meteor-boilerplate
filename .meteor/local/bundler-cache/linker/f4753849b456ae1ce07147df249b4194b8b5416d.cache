[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nLog = Package.logging.Log;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nSpacebars = Package.spacebars.Spacebars;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nFastRender = Package['meteorhacks:fast-render'].FastRender;\nCollectionHooks = Package['matb33:collection-hooks'].CollectionHooks;\nRoles = Package['alanning:roles'].Roles;\nUserStatus = Package['mizzao:user-status'].UserStatus;\nSecurity = Package['ongoworks:security'].Security;\nFake = Package['anti:fake'].Fake;\nSubsManager = Package['meteorhacks:subs-manager'].SubsManager;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nAccounts = Package['accounts-base'].Accounts;\nAccountsServer = Package['accounts-base'].AccountsServer;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccountsTemplates = Package['useraccounts:core'].AccountsTemplates;\nBrowserPolicy = Package['browser-policy-common'].BrowserPolicy;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nT9n = Package['softwarerero:accounts-t9n'].T9n;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){T9n.setLanguage('en');\n}).call(this);\n","servePath":"/lib/config/accounts-t9n.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/config/accounts-t9n.js"],"names":[],"mappings":"yBAAA,S","file":"/lib/config/accounts-t9n.js","sourcesContent":["T9n.setLanguage('en');"]}},{"type":"js","data":"(function(){// Set up login services\nMeteor.startup(function() {\n  // Add Facebook configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"facebook\" },\n    { $set: {\n        appId: \"XXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add GitHub configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"github\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add Google configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"google\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        client_email: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add Linkedin configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"linkedin\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n});\n}).call(this);\n","servePath":"/lib/config/accounts.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/config/accounts.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/lib/config/accounts.js","sourcesContent":["// Set up login services\nMeteor.startup(function() {\n  // Add Facebook configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"facebook\" },\n    { $set: {\n        appId: \"XXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add GitHub configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"github\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add Google configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"google\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        client_email: \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n\n  // Add Linkedin configuration entry\n  /*\n  ServiceConfiguration.configurations.update(\n    { service: \"linkedin\" },\n    { $set: {\n        clientId: \"XXXXXXXXXXXXXX\",\n        secret: \"XXXXXXXXXXXXXXXX\"\n      }\n    },\n    { upsert: true }\n  );\n  */\n});"]}},{"type":"js","data":"(function(){// Options\nAccountsTemplates.configure({\n  defaultLayout: 'masterLayout',\n  defaultLayoutRegions: {\n    nav: 'nav',\n    footer: 'footer',\n  },\n  defaultContentRegion: 'main',\n  showForgotPasswordLink: true,\n  overrideLoginErrors: true,\n  enablePasswordChange: true,\n\n  // sendVerificationEmail: true,\n  // enforceEmailVerification: true,\n  //confirmPassword: true,\n  //continuousValidation: false,\n  //displayFormLabels: true,\n  //forbidClientAccountCreation: true,\n  //formValidationFeedback: true,\n  //homeRoutePath: '/',\n  //showAddRemoveServices: false,\n  //showPlaceholders: true,\n\n  negativeValidation: true,\n  positiveValidation: true,\n  negativeFeedback: false,\n  positiveFeedback: true,\n\n  // Privacy Policy and Terms of Use\n  //privacyUrl: 'privacy',\n  //termsUrl: 'terms-of-use',\n});\n}).call(this);\n","servePath":"/lib/config/at-config.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/config/at-config.js"],"names":[],"mappings":"sBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/lib/config/at-config.js","sourcesContent":["// Options\nAccountsTemplates.configure({\n  defaultLayout: 'masterLayout',\n  defaultLayoutRegions: {\n    nav: 'nav',\n    footer: 'footer',\n  },\n  defaultContentRegion: 'main',\n  showForgotPasswordLink: true,\n  overrideLoginErrors: true,\n  enablePasswordChange: true,\n\n  // sendVerificationEmail: true,\n  // enforceEmailVerification: true,\n  //confirmPassword: true,\n  //continuousValidation: false,\n  //displayFormLabels: true,\n  //forbidClientAccountCreation: true,\n  //formValidationFeedback: true,\n  //homeRoutePath: '/',\n  //showAddRemoveServices: false,\n  //showPlaceholders: true,\n\n  negativeValidation: true,\n  positiveValidation: true,\n  negativeFeedback: false,\n  positiveFeedback: true,\n\n  // Privacy Policy and Terms of Use\n  //privacyUrl: 'privacy',\n  //termsUrl: 'terms-of-use',\n});"]}},{"type":"js","data":"(function(){if (Meteor.isServer) {\n  Meteor.startup(function() {\n    BrowserPolicy.framing.disallow()\n    BrowserPolicy.content.disallowInlineScripts()\n    BrowserPolicy.content.disallowEval()\n    BrowserPolicy.content.allowInlineStyles()\n    BrowserPolicy.content.allowFontDataUrl()\n\n    var trusted = [\n      'fonts.googleapis.com',\n      'fonts.gstatic.com',\n      '*.google-analytics.com'\n    ]\n\n    _.each(trusted, function(origin) {\n      origin = \"https://\" + origin\n      BrowserPolicy.content.allowOriginForAll(origin)\n    })\n\n  })\n}\n}).call(this);\n","servePath":"/lib/config/browser-policy.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/config/browser-policy.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C","file":"/lib/config/browser-policy.js","sourcesContent":["if (Meteor.isServer) {\n  Meteor.startup(function() {\n    BrowserPolicy.framing.disallow()\n    BrowserPolicy.content.disallowInlineScripts()\n    BrowserPolicy.content.disallowEval()\n    BrowserPolicy.content.allowInlineStyles()\n    BrowserPolicy.content.allowFontDataUrl()\n\n    var trusted = [\n      'fonts.googleapis.com',\n      'fonts.gstatic.com',\n      '*.google-analytics.com'\n    ]\n\n    _.each(trusted, function(origin) {\n      origin = \"https://\" + origin\n      BrowserPolicy.content.allowOriginForAll(origin)\n    })\n\n  })\n}"]}},{"type":"js","data":"(function(){/*\nAccounts.emailTemplates.siteName = \"MySite\";\nAccounts.emailTemplates.from = \"MySite <support@mysite.com>\";\nAccounts.emailTemplates.resetPassword.subject = function (user) {\n    return \"Message for \" + user.profile.displayName;\n};\nAccounts.emailTemplates.resetPassword.text = function (user, url) {\n    var signature = \"MySite Bot\";\n    //var president = President.findOne();\n    //if (president)\n    //    president = Meteor.users.findOne(president.presidentId);\n    //    signature = president.profile.displayName + \", the MySite President.\";\n    return \"Dear \" + user.profile.displayName + \",\\n\\n\" +\n        \"Click the following link to set your new password:\\n\" +\n        url + \"\\n\\n\" +\n        \"Please never forget it again!!!\\n\\n\\n\" +\n        \"Cheers,\\n\" +\n        signature;\n};\n*/\n}).call(this);\n","servePath":"/lib/config/email.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/config/email.js"],"names":[],"mappings":"cAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E","file":"/lib/config/email.js","sourcesContent":["/*\nAccounts.emailTemplates.siteName = \"MySite\";\nAccounts.emailTemplates.from = \"MySite <support@mysite.com>\";\nAccounts.emailTemplates.resetPassword.subject = function (user) {\n    return \"Message for \" + user.profile.displayName;\n};\nAccounts.emailTemplates.resetPassword.text = function (user, url) {\n    var signature = \"MySite Bot\";\n    //var president = President.findOne();\n    //if (president)\n    //    president = Meteor.users.findOne(president.presidentId);\n    //    signature = president.profile.displayName + \", the MySite President.\";\n    return \"Dear \" + user.profile.displayName + \",\\n\\n\" +\n        \"Click the following link to set your new password:\\n\" +\n        url + \"\\n\\n\" +\n        \"Please never forget it again!!!\\n\\n\\n\" +\n        \"Cheers,\\n\" +\n        signature;\n};\n*/"]}},{"type":"js","data":"(function(){'use strict'\n// Router & Layout helper(s)\nMeteor.app = {\n  layout: function(source) {\n    var layoutObj = {\n      nav: 'nav',\n      footer: 'footer',\n      main: 'main'\n    }\n\n      if (typeof source === 'undefined' || null) {\n      return layoutObj\n    }\n\n    for (var property in source) {\n      if ( source.hasOwnProperty(property) ) {\n        var sourceProperty = source[ property ]\n        layoutObj[ property ] = sourceProperty\n      }\n    }\n    return layoutObj\n  }\n}\n\n}).call(this);\n","servePath":"/lib/router/router-helpers.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/router/router-helpers.js"],"names":[],"mappings":"wBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/router/router-helpers.js","sourcesContent":["'use strict'\n// Router & Layout helper(s)\nMeteor.app = {\n  layout: function(source) {\n    var layoutObj = {\n      nav: 'nav',\n      footer: 'footer',\n      main: 'main'\n    }\n\n      if (typeof source === 'undefined' || null) {\n      return layoutObj\n    }\n\n    for (var property in source) {\n      if ( source.hasOwnProperty(property) ) {\n        var sourceProperty = source[ property ]\n        layoutObj[ property ] = sourceProperty\n      }\n    }\n    return layoutObj\n  }\n}\n"]}},{"type":"js","data":"(function(){'use strict'\n\nFlowRouter.route('/', {\n  name: \"main\",\n  //action: function(params, queryParams) {\n  action: function() {\n    BlazeLayout.render( 'masterLayout', Meteor.app.layout())\n  }\n})\n\nFlowRouter.route('/private', {\n  name: \"private\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function() {\n    BlazeLayout.render('masterLayout', Meteor.app.layout({main: \"private\"}))\n  }\n})\n\nFlowRouter.notFound = {\n  action: function() {\n    BlazeLayout.render('masterLayout', Meteor.app.layout({\n      main: 'pageNotFound',\n      nav: 'pageNotFound'\n    })\n    )\n  }\n}\n\n//Routes\nAccountsTemplates.configureRoute('changePwd')\nAccountsTemplates.configureRoute('forgotPwd')\nAccountsTemplates.configureRoute('resetPwd')\nAccountsTemplates.configureRoute('signIn')\nAccountsTemplates.configureRoute('signUp')\nAccountsTemplates.configureRoute('verifyEmail')\n\n}).call(this);\n","servePath":"/lib/router/router.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/lib/router/router.js"],"names":[],"mappings":"wBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/router/router.js","sourcesContent":["'use strict'\n\nFlowRouter.route('/', {\n  name: \"main\",\n  //action: function(params, queryParams) {\n  action: function() {\n    BlazeLayout.render( 'masterLayout', Meteor.app.layout())\n  }\n})\n\nFlowRouter.route('/private', {\n  name: \"private\",\n  triggersEnter: [AccountsTemplates.ensureSignedIn],\n  action: function() {\n    BlazeLayout.render('masterLayout', Meteor.app.layout({main: \"private\"}))\n  }\n})\n\nFlowRouter.notFound = {\n  action: function() {\n    BlazeLayout.render('masterLayout', Meteor.app.layout({\n      main: 'pageNotFound',\n      nav: 'pageNotFound'\n    })\n    )\n  }\n}\n\n//Routes\nAccountsTemplates.configureRoute('changePwd')\nAccountsTemplates.configureRoute('forgotPwd')\nAccountsTemplates.configureRoute('resetPwd')\nAccountsTemplates.configureRoute('signIn')\nAccountsTemplates.configureRoute('signUp')\nAccountsTemplates.configureRoute('verifyEmail')\n"]}},{"type":"js","data":"(function(){}).call(this);\n","servePath":"/server/indexes.js","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","file":"/server/indexes.js"}},{"type":"js","data":"(function(){}).call(this);\n","servePath":"/server/publications.js","sourceMap":{"version":3,"sources":[],"names":[],"mappings":"","file":"/server/publications.js"}}]