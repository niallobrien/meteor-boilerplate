[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar _ = Package.underscore._;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar EJSON = Package.ejson.EJSON;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar EditableJSON, EditableJSONInternal;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/babrahams_editable-json/packages/babrahams_editable-json.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function () {                                                                                                         // 1\n                                                                                                                       // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/babrahams:editable-json/editable-json-common.js                                                         //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nMeteor.methods({                                                                                                    // 1\n                                                                                                                    // 2\n  update: function (collectionName, _id, action) {                                                                  // 3\n                                                                                                                    // 4\n    var Collection = Mongo.Collection.get(collectionName),                                                          // 5\n        updated = 0;                                                                                                // 6\n                                                                                                                    // 7\n    try {                                                                                                           // 8\n                                                                                                                    // 9\n      if (!!Package['aldeed:simple-schema'] && !!Package['aldeed:collection2'] && _.isFunction(Collection.simpleSchema) && Collection._c2) {\n                                                                                                                    // 11\n        updated = Collection.update(_id, action, {                                                                  // 12\n          filter: false,                                                                                            // 13\n          autoConvert: false,                                                                                       // 14\n          removeEmptyStrings: false,                                                                                // 15\n          validate: false                                                                                           // 16\n        });                                                                                                         // 17\n                                                                                                                    // 18\n      }                                                                                                             // 19\n                                                                                                                    // 20\n      else {                                                                                                        // 21\n                                                                                                                    // 22\n        updated = Collection.update(_id, action);                                                                   // 23\n                                                                                                                    // 24\n      }                                                                                                             // 25\n                                                                                                                    // 26\n    }                                                                                                               // 27\n                                                                                                                    // 28\n    catch (err) {                                                                                                   // 29\n      throw new Meteor.Error(err);                                                                                  // 30\n    }                                                                                                               // 31\n                                                                                                                    // 32\n    return updated;                                                                                                 // 33\n                                                                                                                    // 34\n  }                                                                                                                 // 35\n                                                                                                                    // 36\n});                                                                                                                 // 37\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 47\n}).call(this);                                                                                                         // 48\n                                                                                                                       // 49\n                                                                                                                       // 50\n                                                                                                                       // 51\n                                                                                                                       // 52\n                                                                                                                       // 53\n                                                                                                                       // 54\n(function () {                                                                                                         // 55\n                                                                                                                       // 56\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/babrahams:editable-json/template.editable-json.js                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.__checkName(\"editableJSON\");                                                                               // 2\nTemplate[\"editableJSON\"] = new Template(\"Template.editableJSON\", (function() {                                      // 3\n  var view = this;                                                                                                  // 4\n  return Spacebars.With(function() {                                                                                // 5\n    return Spacebars.call(view.lookup(\"json\"));                                                                     // 6\n  }, function() {                                                                                                   // 7\n    return HTML.DIV({                                                                                               // 8\n      \"class\": \"editable-JSON\"                                                                                      // 9\n    }, Spacebars.include(view.lookupTemplate(\"editable_JSON_object\")));                                             // 10\n  });                                                                                                               // 11\n}));                                                                                                                // 12\n                                                                                                                    // 13\nTemplate.__checkName(\"editable_JSON\");                                                                              // 14\nTemplate[\"editable_JSON\"] = new Template(\"Template.editable_JSON\", (function() {                                    // 15\n  var view = this;                                                                                                  // 16\n  return Blaze.Each(function() {                                                                                    // 17\n    return Spacebars.call(view.lookup(\"fields\"));                                                                   // 18\n  }, function() {                                                                                                   // 19\n    return [ Spacebars.With(function() {                                                                            // 20\n      return Spacebars.call(view.lookup(\"field\"));                                                                  // 21\n    }, function() {                                                                                                 // 22\n      return [ HTML.SPAN({                                                                                          // 23\n        \"class\": function() {                                                                                       // 24\n          return [ \"editable-JSON-field \", Spacebars.mustache(view.lookup(\"_idClass\")) ];                           // 25\n        }                                                                                                           // 26\n      }, '\"', Spacebars.With(function() {                                                                           // 27\n        return Spacebars.call(view.lookup(\"editingField\"));                                                         // 28\n      }, function() {                                                                                               // 29\n        return HTML.INPUT({                                                                                         // 30\n          type: \"text\",                                                                                             // 31\n          value: function() {                                                                                       // 32\n            return Spacebars.mustache(view.lookup(\".\"));                                                            // 33\n          }                                                                                                         // 34\n        });                                                                                                         // 35\n      }, function() {                                                                                               // 36\n        return HTML.SPAN({                                                                                          // 37\n          \"class\": \"editable-JSON-field-text\"                                                                       // 38\n        }, Blaze.View(\"lookup:.\", function() {                                                                      // 39\n          return Spacebars.mustache(view.lookup(\".\"));                                                              // 40\n        }));                                                                                                        // 41\n      }), '\":'), HTML.CharRef({                                                                                     // 42\n        html: \"&nbsp;\",                                                                                             // 43\n        str: \" \"                                                                                                    // 44\n      }) ];                                                                                                         // 45\n    }), Spacebars.With(function() {                                                                                 // 46\n      return Spacebars.call(view.lookup(\"value\"));                                                                  // 47\n    }, function() {                                                                                                 // 48\n      return Blaze.If(function() {                                                                                  // 49\n        return Spacebars.call(view.lookup(\"isArray\"));                                                              // 50\n      }, function() {                                                                                               // 51\n        return Blaze._TemplateWith(function() {                                                                     // 52\n          return Spacebars.call(view.lookup(\"val\"));                                                                // 53\n        }, function() {                                                                                             // 54\n          return Spacebars.include(view.lookupTemplate(\"editable_JSON_array\"));                                     // 55\n        });                                                                                                         // 56\n      }, function() {                                                                                               // 57\n        return Blaze.If(function() {                                                                                // 58\n          return Spacebars.call(view.lookup(\"isDate\"));                                                             // 59\n        }, function() {                                                                                             // 60\n          return Blaze._TemplateWith(function() {                                                                   // 61\n            return Spacebars.call(view.lookup(\"val\"));                                                              // 62\n          }, function() {                                                                                           // 63\n            return Spacebars.include(view.lookupTemplate(\"editable_JSON_date\"));                                    // 64\n          });                                                                                                       // 65\n        }, function() {                                                                                             // 66\n          return Blaze.If(function() {                                                                              // 67\n            return Spacebars.call(view.lookup(\"isString\"));                                                         // 68\n          }, function() {                                                                                           // 69\n            return Blaze._TemplateWith(function() {                                                                 // 70\n              return Spacebars.call(view.lookup(\"val\"));                                                            // 71\n            }, function() {                                                                                         // 72\n              return Spacebars.include(view.lookupTemplate(\"editable_JSON_string\"));                                // 73\n            });                                                                                                     // 74\n          }, function() {                                                                                           // 75\n            return Blaze.If(function() {                                                                            // 76\n              return Spacebars.call(view.lookup(\"isBoolean\"));                                                      // 77\n            }, function() {                                                                                         // 78\n              return Blaze._TemplateWith(function() {                                                               // 79\n                return Spacebars.call(view.lookup(\"val\"));                                                          // 80\n              }, function() {                                                                                       // 81\n                return Spacebars.include(view.lookupTemplate(\"editable_JSON_boolean\"));                             // 82\n              });                                                                                                   // 83\n            }, function() {                                                                                         // 84\n              return Blaze.If(function() {                                                                          // 85\n                return Spacebars.call(view.lookup(\"isObject\"));                                                     // 86\n              }, function() {                                                                                       // 87\n                return Blaze._TemplateWith(function() {                                                             // 88\n                  return Spacebars.call(view.lookup(\"val\"));                                                        // 89\n                }, function() {                                                                                     // 90\n                  return Spacebars.include(view.lookupTemplate(\"editable_JSON_object\"));                            // 91\n                });                                                                                                 // 92\n              }, function() {                                                                                       // 93\n                return Blaze.If(function() {                                                                        // 94\n                  return Spacebars.call(view.lookup(\"isNumber\"));                                                   // 95\n                }, function() {                                                                                     // 96\n                  return Blaze._TemplateWith(function() {                                                           // 97\n                    return Spacebars.call(view.lookup(\"val\"));                                                      // 98\n                  }, function() {                                                                                   // 99\n                    return Spacebars.include(view.lookupTemplate(\"editable_JSON_number\"));                          // 100\n                  });                                                                                               // 101\n                }, function() {                                                                                     // 102\n                  return Blaze.If(function() {                                                                      // 103\n                    return Spacebars.call(view.lookup(\"isNull\"));                                                   // 104\n                  }, function() {                                                                                   // 105\n                    return Blaze._TemplateWith(function() {                                                         // 106\n                      return Spacebars.call(view.lookup(\"val\"));                                                    // 107\n                    }, function() {                                                                                 // 108\n                      return Spacebars.include(view.lookupTemplate(\"editable_JSON_null\"));                          // 109\n                    });                                                                                             // 110\n                  });                                                                                               // 111\n                });                                                                                                 // 112\n              });                                                                                                   // 113\n            });                                                                                                     // 114\n          });                                                                                                       // 115\n        });                                                                                                         // 116\n      });                                                                                                           // 117\n    }), Blaze.Unless(function() {                                                                                   // 118\n      return Spacebars.dataMustache(view.lookup(\"last\"), view.lookup(\"..\"));                                        // 119\n    }, function() {                                                                                                 // 120\n      return [ \",\", HTML.BR() ];                                                                                    // 121\n    }) ];                                                                                                           // 122\n  });                                                                                                               // 123\n}));                                                                                                                // 124\n                                                                                                                    // 125\nTemplate.__checkName(\"editable_JSON_array\");                                                                        // 126\nTemplate[\"editable_JSON_array\"] = new Template(\"Template.editable_JSON_array\", (function() {                        // 127\n  var view = this;                                                                                                  // 128\n  return [ \"[\", Spacebars.With(function() {                                                                         // 129\n    return Spacebars.call(view.lookup(\"elements\"));                                                                 // 130\n  }, function() {                                                                                                   // 131\n    return [ HTML.DIV({                                                                                             // 132\n      \"class\": \"editable-JSON-indent\"                                                                               // 133\n    }, Blaze.Each(function() {                                                                                      // 134\n      return Spacebars.call(view.lookup(\".\"));                                                                      // 135\n    }, function() {                                                                                                 // 136\n      return [ Blaze._TemplateWith(function() {                                                                     // 137\n        return Spacebars.call(view.lookup(\"element\"));                                                              // 138\n      }, function() {                                                                                               // 139\n        return Spacebars.include(view.lookupTemplate(\"editable_JSON\"));                                             // 140\n      }), Blaze.Unless(function() {                                                                                 // 141\n        return Spacebars.dataMustache(view.lookup(\"last\"), view.lookup(\"..\"));                                      // 142\n      }, function() {                                                                                               // 143\n        return [ \",\", HTML.BR() ];                                                                                  // 144\n      }) ];                                                                                                         // 145\n    })), HTML.SPAN({                                                                                                // 146\n      \"class\": \"editable-JSON-closer\"                                                                               // 147\n    }, \"]\") ];                                                                                                      // 148\n  }, function() {                                                                                                   // 149\n    return \"]\";                                                                                                     // 150\n  }) ];                                                                                                             // 151\n}));                                                                                                                // 152\n                                                                                                                    // 153\nTemplate.__checkName(\"editable_JSON_object\");                                                                       // 154\nTemplate[\"editable_JSON_object\"] = new Template(\"Template.editable_JSON_object\", (function() {                      // 155\n  var view = this;                                                                                                  // 156\n  return Blaze.If(function() {                                                                                      // 157\n    return Spacebars.call(view.lookup(\"notEmpty\"));                                                                 // 158\n  }, function() {                                                                                                   // 159\n    return [ \"{\", HTML.DIV({                                                                                        // 160\n      \"class\": \"editable-JSON-indent\"                                                                               // 161\n    }, Blaze._TemplateWith(function() {                                                                             // 162\n      return Spacebars.call(view.lookup(\".\"));                                                                      // 163\n    }, function() {                                                                                                 // 164\n      return Spacebars.include(view.lookupTemplate(\"editable_JSON\"));                                               // 165\n    })), HTML.SPAN({                                                                                                // 166\n      \"class\": \"editable-JSON-closer\"                                                                               // 167\n    }, \"}\") ];                                                                                                      // 168\n  }, function() {                                                                                                   // 169\n    return \"{}\";                                                                                                    // 170\n  });                                                                                                               // 171\n}));                                                                                                                // 172\n                                                                                                                    // 173\nTemplate.__checkName(\"editable_JSON_string\");                                                                       // 174\nTemplate[\"editable_JSON_string\"] = new Template(\"Template.editable_JSON_string\", (function() {                      // 175\n  var view = this;                                                                                                  // 176\n  return HTML.SPAN({                                                                                                // 177\n    \"class\": function() {                                                                                           // 178\n      return [ \"editable-JSON-string \", Blaze.If(function() {                                                       // 179\n        return Spacebars.call(view.lookup(\"_idField\"));                                                             // 180\n      }, function() {                                                                                               // 181\n        return \"editable-JSON-_id-value\";                                                                           // 182\n      }) ];                                                                                                         // 183\n    }                                                                                                               // 184\n  }, '\"', Blaze.If(function() {                                                                                     // 185\n    return Spacebars.call(view.lookup(\"editable_JSON_collection\"));                                                 // 186\n  }, function() {                                                                                                   // 187\n    return Spacebars.With(function() {                                                                              // 188\n      return Spacebars.call(view.lookup(\"editable_JSON_getField\"));                                                 // 189\n    }, function() {                                                                                                 // 190\n      return Blaze._TemplateWith(function() {                                                                       // 191\n        return {                                                                                                    // 192\n          value: Spacebars.call(view.lookup(\"..\")),                                                                 // 193\n          field: Spacebars.call(view.lookup(\".\")),                                                                  // 194\n          collection: Spacebars.call(view.lookup(\"editable_JSON_collection\"))                                       // 195\n        };                                                                                                          // 196\n      }, function() {                                                                                               // 197\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                         // 198\n      });                                                                                                           // 199\n    }, function() {                                                                                                 // 200\n      return Blaze.View(\"lookup:.\", function() {                                                                    // 201\n        return Spacebars.mustache(view.lookup(\".\"));                                                                // 202\n      });                                                                                                           // 203\n    });                                                                                                             // 204\n  }, function() {                                                                                                   // 205\n    return Blaze.If(function() {                                                                                    // 206\n      return Spacebars.call(view.lookup(\"_idField\"));                                                               // 207\n    }, function() {                                                                                                 // 208\n      return Blaze.View(\"lookup:.\", function() {                                                                    // 209\n        return Spacebars.mustache(view.lookup(\".\"));                                                                // 210\n      });                                                                                                           // 211\n    }, function() {                                                                                                 // 212\n      return Blaze._TemplateWith(function() {                                                                       // 213\n        return {                                                                                                    // 214\n          value: Spacebars.call(view.lookup(\".\")),                                                                  // 215\n          field: Spacebars.call(view.lookup(\"editable_JSON_getField\"))                                              // 216\n        };                                                                                                          // 217\n      }, function() {                                                                                               // 218\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                         // 219\n      });                                                                                                           // 220\n    });                                                                                                             // 221\n  }), '\"');                                                                                                         // 222\n}));                                                                                                                // 223\n                                                                                                                    // 224\nTemplate.__checkName(\"editable_JSON_boolean\");                                                                      // 225\nTemplate[\"editable_JSON_boolean\"] = new Template(\"Template.editable_JSON_boolean\", (function() {                    // 226\n  var view = this;                                                                                                  // 227\n  return HTML.SPAN({                                                                                                // 228\n    \"class\": \"editable-JSON-boolean\"                                                                                // 229\n  }, Blaze.View(\"lookup:boolean\", function() {                                                                      // 230\n    return Spacebars.mustache(view.lookup(\"boolean\"));                                                              // 231\n  }));                                                                                                              // 232\n}));                                                                                                                // 233\n                                                                                                                    // 234\nTemplate.__checkName(\"editable_JSON_date\");                                                                         // 235\nTemplate[\"editable_JSON_date\"] = new Template(\"Template.editable_JSON_date\", (function() {                          // 236\n  var view = this;                                                                                                  // 237\n  return HTML.SPAN({                                                                                                // 238\n    \"class\": \"editable-JSON-date\"                                                                                   // 239\n  }, HTML.SPAN({                                                                                                    // 240\n    \"class\": \"editable-JSON-string\"                                                                                 // 241\n  }, '\"', HTML.INPUT({                                                                                              // 242\n    type: \"text\",                                                                                                   // 243\n    value: function() {                                                                                             // 244\n      return Spacebars.mustache(view.lookup(\"date\"));                                                               // 245\n    }                                                                                                               // 246\n  }), '\"'));                                                                                                        // 247\n}));                                                                                                                // 248\n                                                                                                                    // 249\nTemplate.__checkName(\"editable_JSON_number\");                                                                       // 250\nTemplate[\"editable_JSON_number\"] = new Template(\"Template.editable_JSON_number\", (function() {                      // 251\n  var view = this;                                                                                                  // 252\n  return HTML.SPAN({                                                                                                // 253\n    \"class\": \"editable-JSON-number editable-text-trigger\"                                                           // 254\n  }, Blaze.If(function() {                                                                                          // 255\n    return Spacebars.call(view.lookup(\"editable_JSON_collection\"));                                                 // 256\n  }, function() {                                                                                                   // 257\n    return Spacebars.With(function() {                                                                              // 258\n      return Spacebars.call(view.lookup(\"editable_JSON_getField\"));                                                 // 259\n    }, function() {                                                                                                 // 260\n      return Blaze._TemplateWith(function() {                                                                       // 261\n        return {                                                                                                    // 262\n          value: Spacebars.call(view.lookup(\"..\")),                                                                 // 263\n          field: Spacebars.call(view.lookup(\".\")),                                                                  // 264\n          collection: Spacebars.call(view.lookup(\"editable_JSON_collection\")),                                      // 265\n          number: Spacebars.call(true)                                                                              // 266\n        };                                                                                                          // 267\n      }, function() {                                                                                               // 268\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                         // 269\n      });                                                                                                           // 270\n    }, function() {                                                                                                 // 271\n      return Blaze.View(\"lookup:.\", function() {                                                                    // 272\n        return Spacebars.mustache(view.lookup(\".\"));                                                                // 273\n      });                                                                                                           // 274\n    });                                                                                                             // 275\n  }, function() {                                                                                                   // 276\n    return Blaze._TemplateWith(function() {                                                                         // 277\n      return {                                                                                                      // 278\n        value: Spacebars.call(view.lookup(\".\")),                                                                    // 279\n        field: Spacebars.call(view.lookup(\"editable_JSON_getField\")),                                               // 280\n        number: Spacebars.call(true)                                                                                // 281\n      };                                                                                                            // 282\n    }, function() {                                                                                                 // 283\n      return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                           // 284\n    });                                                                                                             // 285\n  }));                                                                                                              // 286\n}));                                                                                                                // 287\n                                                                                                                    // 288\nTemplate.__checkName(\"editable_JSON_null\");                                                                         // 289\nTemplate[\"editable_JSON_null\"] = new Template(\"Template.editable_JSON_null\", (function() {                          // 290\n  var view = this;                                                                                                  // 291\n  return HTML.Raw('<span class=\"editable-JSON-null\">null</span>');                                                  // 292\n}));                                                                                                                // 293\n                                                                                                                    // 294\nTemplate.__checkName(\"editableJSONInput\");                                                                          // 295\nTemplate[\"editableJSONInput\"] = new Template(\"Template.editableJSONInput\", (function() {                            // 296\n  var view = this;                                                                                                  // 297\n  return Blaze.If(function() {                                                                                      // 298\n    return Spacebars.call(view.lookup(\"editing\"));                                                                  // 299\n  }, function() {                                                                                                   // 300\n    return HTML.INPUT({                                                                                             // 301\n      type: \"text\",                                                                                                 // 302\n      \"class\": \"editable-JSON-input\",                                                                               // 303\n      value: function() {                                                                                           // 304\n        return Spacebars.mustache(view.lookup(\"value\"));                                                            // 305\n      }                                                                                                             // 306\n    });                                                                                                             // 307\n  }, function() {                                                                                                   // 308\n    return HTML.SPAN({                                                                                              // 309\n      \"class\": \"editable-JSON-edit\"                                                                                 // 310\n    }, Blaze.View(\"lookup:value\", function() {                                                                      // 311\n      return Spacebars.mustache(view.lookup(\"value\"));                                                              // 312\n    }));                                                                                                            // 313\n  });                                                                                                               // 314\n}));                                                                                                                // 315\n                                                                                                                    // 316\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 380\n}).call(this);                                                                                                         // 381\n                                                                                                                       // 382\n                                                                                                                       // 383\n                                                                                                                       // 384\n                                                                                                                       // 385\n                                                                                                                       // 386\n                                                                                                                       // 387\n(function () {                                                                                                         // 388\n                                                                                                                       // 389\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/babrahams:editable-json/editable-json-client.js                                                         //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nEditableJSON = {};                                                                                                  // 1\n                                                                                                                    // 2\nEditableJSON.afterUpdate = function (store, action, JSONbefore, documentsUpdated) {                                 // 3\n  // Overwrite this function to create a callback after every edit\t                                                 // 4\n  // `this` is the document or the json after the update                                                            // 5\n};                                                                                                                  // 6\n                                                                                                                    // 7\nEditableJSONInternal = {};                                                                                          // 8\n                                                                                                                    // 9\nEditableJSONInternal.timer = null;                                                                                  // 10\n                                                                                                                    // 11\nEditableJSONInternal.resize = function (elem) {                                                                     // 12\n  var el = $(elem);                                                                                                 // 13\n  EditableJSONInternal.editing_key_press.fakeEl.text(el.val());                                                     // 14\n  var width = EditableJSONInternal.editing_key_press.fakeEl.width() + 8;                                            // 15\n  el.width(width);                                                                                                  // 16\n  el.css('min-width',width);                                                                                        // 17\n}                                                                                                                   // 18\n                                                                                                                    // 19\nEditableJSONInternal.editing_key_press = function (elem,noDelay) {                                                  // 20\n  if (EditableJSONInternal.editing_key_press.fakeEl === undefined) {                                                // 21\n    EditableJSONInternal.editing_key_press.fakeEl = $('<span class=\"editable-JSON-input\">').hide().appendTo(document.body);\n  }                                                                                                                 // 23\n  if (noDelay) {                                                                                                    // 24\n    var input = elem.find('input');                                                                                 // 25\n    EditableJSONInternal.resize(input);                                                                             // 26\n    input.select();                                                                                                 // 27\n  }                                                                                                                 // 28\n  else {                                                                                                            // 29\n    Meteor.defer(function () {                                                                                      // 30\n      EditableJSONInternal.resize(elem);                                                                            // 31\n    });                                                                                                             // 32\n  }                                                                                                                 // 33\n}                                                                                                                   // 34\n                                                                                                                    // 35\nEditableJSONInternal.getContext = function () {                                                                     // 36\n  var jsonTemplateData = Template && Template.parentData(function (data) { return _.isObject(data) && data.document; });\n  var data = jsonTemplateData && jsonTemplateData.document;                                                         // 38\n  return data || {};                                                                                                // 39\n}                                                                                                                   // 40\n                                                                                                                    // 41\nEditableJSONInternal.getField = function () {                                                                       // 42\n  var field = Blaze._parentData(1).fld;                                                                             // 43\n  return (!(EditableJSON.disableIdField && field === '_id')) && field;                                              // 44\n}                                                                                                                   // 45\n                                                                                                                    // 46\nEditableJSONInternal.update = function (tmpl, modifier, action) {                                                   // 47\n  var collectionName = tmpl.get('collection');                                                                      // 48\n  if (!action) {                                                                                                    // 49\n    var action = {};                                                                                                // 50\n    var mod = {};                                                                                                   // 51\n    mod[modifier.field] = modifier.value;                                                                           // 52\n    action[modifier.action] = mod;                                                                                  // 53\n  }                                                                                                                 // 54\n  if (collectionName) {                                                                                             // 55\n    // Validate -- make sure the change isn't on the id field                                                       // 56\n    // And make sure we're not modifying the same field twice                                                       // 57\n    var okay = true;                                                                                                // 58\n    var conflict = false;                                                                                           // 59\n    var modFields = [];                                                                                             // 60\n    _.each(action, function (modifier, action) {                                                                    // 61\n      if (_.has(modifier,'_id')) {                                                                                  // 62\n        okay = false;                                                                                               // 63\n      }                                                                                                             // 64\n      var field = _.keys(modifier)[0];                                                                              // 65\n      if (!_.contains(modFields, field)) {                                                                          // 66\n        // The following prevents all errors, but is too restrictive                                                // 67\n        // && !_.find(modFields,function (f){ return field.indexOf(f) !== -1; })                                    // 68\n        modFields.push(field);                                                                                      // 69\n      }                                                                                                             // 70\n      else {                                                                                                        // 71\n        conflict = true;                                                                                            // 72\n      }                                                                                                             // 73\n    });                                                                                                             // 74\n    if (!okay) {                                                                                                    // 75\n      if (EditableJSON.disableIdField) {                                                                            // 76\n        console.log(\"You can't change the _id field.\");                                                             // 77\n      }                                                                                                             // 78\n      return;                                                                                                       // 79\n    }                                                                                                               // 80\n    if (conflict) {                                                                                                 // 81\n      console.log(\"You can't use conflicting modifiers.\");                                                          // 82\n      return;                                                                                                       // 83\n    }                                                                                                               // 84\n    var doc = EditableJSONInternal.getContext();                                                                    // 85\n    // Mongo.Collection.get(collectionName).update({_id:doc._id},action);                                           // 86\n    Meteor.call('update', collectionName, doc._id, action, function (err, res) {                                    // 87\n      if (err) {                                                                                                    // 88\n        console.log(\"You can't use conflicting modifiers.\"); // We're making a big assumption here in giving this message -- TODO -- actually check the message\n        console.log(err);                                                                                           // 90\n      }                                                                                                             // 91\n\t  else {                                                                                                           // 92\n\t\tif (res && _.isFunction(EditableJSON.afterUpdate)) {                                                              // 93\n\t\t  var mutatedDoc = Mongo.Collection.get(collectionName).findOne({_id: doc._id});                                  // 94\n\t\t  EditableJSON.afterUpdate.call(mutatedDoc, collectionName, action, doc, res);                                    // 95\n\t\t}                                                                                                                 // 96\n\t  }                                                                                                                // 97\n    });                                                                                                             // 98\n  }                                                                                                                 // 99\n  else {                                                                                                            // 100\n\tvar JSONbefore = Session.getJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')));                  // 101\n    _.each(action, function (modifier, action) {                                                                    // 102\n      var fieldName = _.keys(modifier)[0];                                                                          // 103\n      var value = modifier[fieldName];                                                                              // 104\n      switch (action) {                                                                                             // 105\n        case '$set' :                                                                                               // 106\n          Session.setJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')) + '.' + fieldName, value); // 107\n          break;                                                                                                    // 108\n        case '$unset' :                                                                                             // 109\n          Session.setJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')) + '.' + fieldName, undefined);\n          break;                                                                                                    // 111\n      }                                                                                                             // 112\n    });                                                                                                             // 113\n\tvar JSONafter = Session.getJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')));                   // 114\n\tEditableJSON.afterUpdate.call(JSONafter, tmpl.get('store'), action, JSONbefore, 1);                                // 115\n  }                                                                                                                 // 116\n}                                                                                                                   // 117\n                                                                                                                    // 118\nEditableJSONInternal.saveToSession = function (evt, tmpl, self, noDelay) {                                          // 119\n  var elem = tmpl.$(evt.target);                                                                                    // 120\n  var val = elem.val();                                                                                             // 121\n  if (self.number && !/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?|Infinity)$/.test(val)) {                                         // 122\n    // If it's not a number, just revert the value and return                                                       // 123\n    elem.val(self.value);                                                                                           // 124\n    return;                                                                                                         // 125\n  }                                                                                                                 // 126\n  var field = 'editableJSON' + EditableJSONInternal.store(tmpl.get('store')) + '.' + self.field;                    // 127\n  var value = (self.number) ? parseFloat(val) : val;                                                                // 128\n  if (noDelay) {                                                                                                    // 129\n    Session.setJSON(field, value);                                                                                  // 130\n  }                                                                                                                 // 131\n  else {                                                                                                            // 132\n    if (!self.collection) {                                                                                         // 133\n      if (EditableJSONInternal.timer) {                                                                             // 134\n        Meteor.clearTimeout(EditableJSONInternal.timer);                                                            // 135\n      }                                                                                                             // 136\n      EditableJSONInternal.timer = Meteor.setTimeout(function () {                                                  // 137\n        Session.setJSON(field, value);                                                                              // 138\n      },300);                                                                                                       // 139\n    }                                                                                                               // 140\n  }                                                                                                                 // 141\n}                                                                                                                   // 142\n                                                                                                                    // 143\nEditableJSONInternal.store = function (storeName) {                                                                 // 144\n  return (storeName) ? '.' + storeName : '';                                                                        // 145\n}                                                                                                                   // 146\n                                                                                                                    // 147\nEditableJSON.retrieve = function (storeName) {                                                                      // 148\n  return Session.getJSON('editableJSON' + EditableJSONInternal.store(storeName));                                   // 149\n}                                                                                                                   // 150\n                                                                                                                    // 151\nTemplate.editableJSON.created = function () {                                                                       // 152\n  var self = this;                                                                                                  // 153\n  self.editingField = new ReactiveVar();                                                                            // 154\n  if (self.data && self.data.collection) {                                                                          // 155\n    self.autorun(function () {                                                                                      // 156\n      var Collection = Mongo.Collection.get(self.data.collection);                                                  // 157\n      var doc = Collection && Collection.find().count() && self.data.document; // Collection.find().count() is the reactivity trigger\n      self.collection = self.data.collection;                                                                       // 159\n      self.document = doc || {};                                                                                    // 160\n    });                                                                                                             // 161\n    return;                                                                                                         // 162\n  }                                                                                                                 // 163\n  else if (self.data && self.data.store) {                                                                          // 164\n    self.store = self.data.store;                                                                                   // 165\n  }                                                                                                                 // 166\n  var initialValue = (!_.isUndefined(self.data.json)) ? self.data.json : (((self.store) ? self.parent().data : self.data) || {});\n  Session.setJSON('editableJSON' + EditableJSONInternal.store(self.store), initialValue);                           // 168\n  // To keep the state of which field name is being edited                                                          // 169\n}                                                                                                                   // 170\n                                                                                                                    // 171\nTemplate.editableJSON.helpers({                                                                                     // 172\n  json: function () {                                                                                               // 173\n    if (this.collection && this.document) {                                                                         // 174\n      return this.document;                                                                                         // 175\n    }                                                                                                               // 176\n    if (this.json) {                                                                                                // 177\n      var currentData = Session.getJSON('editableJSON' + EditableJSONInternal.store(this.store));                   // 178\n      if (_.isUndefined(currentData) || _.isEmpty(currentData)) {                                                   // 179\n        Session.setJSON('editableJSON' + EditableJSONInternal.store(this.store), this.json);                        // 180\n      }                                                                                                             // 181\n    }                                                                                                               // 182\n    return Session.getJSON('editableJSON' + EditableJSONInternal.store(this.store));                                // 183\n  }                                                                                                                 // 184\n});                                                                                                                 // 185\n                                                                                                                    // 186\nTemplate.editable_JSON.helpers({                                                                                    // 187\n  fields: function () {                                                                                             // 188\n    var self = this;                                                                                                // 189\n    var index = -1;                                                                                                 // 190\n    if (_.has(self,'____val')) {                                                                                    // 191\n      index = self.arrIndex - 1;                                                                                    // 192\n      delete self.arrIndex;                                                                                         // 193\n    }                                                                                                               // 194\n    var fields = _.map(self, function (value, field) {                                                              // 195\n      index++;                                                                                                      // 196\n      var parent = null;                                                                                            // 197\n      var number = 2;                                                                                               // 198\n      while (Blaze._parentData(number) && Blaze._parentData(number)._id === undefined && Blaze._parentData(number).fld === undefined) {\n        number++;                                                                                                   // 200\n      }                                                                                                             // 201\n      parent = Blaze._parentData(number);                                                                           // 202\n      var currentField = (field !== '____val') ? field : index;                                                     // 203\n      var fld = (parent && parent.fld) ? parent.fld + ((currentField !== undefined) ? '.' + currentField : '') : currentField;\n      return {                                                                                                      // 205\n        field:(field !== '____val') ? currentField : null,                                                          // 206\n        value:{val: value, fld: fld, field: currentField},                                                          // 207\n        index:index                                                                                                 // 208\n      };                                                                                                            // 209\n    });                                                                                                             // 210\n    return fields;                                                                                                  // 211\n  },                                                                                                                // 212\n  value: function () {                                                                                              // 213\n    return (_.isObject(this.value) && _.has(this.value, '____val')) ? this.value.____val : this.value;              // 214\n  },                                                                                                                // 215\n  isArray: function () {                                                                                            // 216\n    return _.isArray(this.val);                                                                                     // 217\n  },                                                                                                                // 218\n  isObject: function () {                                                                                           // 219\n    return _.isObject(this.val);                                                                                    // 220\n  },                                                                                                                // 221\n  isString: function () {                                                                                           // 222\n    return _.isString(this.val);                                                                                    // 223\n  },                                                                                                                // 224\n  isBoolean: function () {                                                                                          // 225\n    return _.isBoolean(this.val);                                                                                   // 226\n  },                                                                                                                // 227\n  isDate: function () {                                                                                             // 228\n    return _.isDate(this.val);                                                                                      // 229\n  },                                                                                                                // 230\n  isNumber: function () {                                                                                           // 231\n    return _.isNumber(this.val);                                                                                    // 232\n  },                                                                                                                // 233\n  isNull : function () {                                                                                            // 234\n    return _.isNull(this.val);                                                                                      // 235\n  },                                                                                                                // 236\n  last: function (obj) {                                                                                            // 237\n    return (obj.____val !== undefined) || _.size(obj) === (this.index + 1);                                         // 238\n  },                                                                                                                // 239\n  editingField : function () {                                                                                      // 240\n    var fieldName = this.toString()                                                                                 // 241\n    var fldData = Template.parentData(function (data) { return data && data.fld; });                                // 242\n    var fld = fldData && (fldData.fld + '.' + fieldName) || fieldName;                                              // 243\n    var template = Blaze._templateInstance();                                                                       // 244\n    var editingField = template.get('editingField');                                                                // 245\n    return editingField && (editingField.get() === fld) && fieldName;                                               // 246\n  },                                                                                                                // 247\n  _idClass: function () {                                                                                           // 248\n    return (String(this) === \"_id\") ? \"editable-JSON-_id-field\" : \"\";                                               // 249\n  }                                                                                                                 // 250\n});                                                                                                                 // 251\n                                                                                                                    // 252\nTemplate.editable_JSON.events({                                                                                     // 253\n  'click .editable-JSON-field' : function (evt, tmpl) {                                                             // 254\n    tmpl.$(evt.target).find('.editable-JSON-field-text').trigger('click');                                          // 255\n  },                                                                                                                // 256\n  'click .editable-JSON-field-text' : function (evt,tmpl) {                                                         // 257\n    evt.stopPropagation();                                                                                          // 258\n    var fieldName = this.toString();                                                                                // 259\n    if (fieldName === '_id') {                                                                                      // 260\n      return;                                                                                                       // 261\n    }                                                                                                               // 262\n    var elem = $(evt.target).closest('.editable-JSON-field');                                                       // 263\n    var fldData = Template.parentData(function (data) { return data && data.fld; });                                // 264\n    var field = fldData && (fldData.fld + '.' + fieldName) || fieldName;                                            // 265\n    var editingField = tmpl.get('editingField');                                                                    // 266\n    if (editingField) {                                                                                             // 267\n      editingField.set(field);                                                                                      // 268\n      Tracker.flush();                                                                                              // 269\n      EditableJSONInternal.editing_key_press(elem,true);                                                            // 270\n    }                                                                                                               // 271\n  },                                                                                                                // 272\n  'keydown .editable-JSON-field input, focusout .editable-JSON-field input' : function (evt, tmpl) {                // 273\n    evt.stopPropagation();                                                                                          // 274\n    var charCode = evt.which || evt.keyCode;                                                                        // 275\n    if (evt.type === 'keydown') {                                                                                   // 276\n      if (charCode === 27) {                                                                                        // 277\n        var editingField = tmpl.get('editingField');                                                                // 278\n        editingField.set(null);                                                                                     // 279\n        return;                                                                                                     // 280\n      }                                                                                                             // 281\n      if (charCode !== 13) {                                                                                        // 282\n        EditableJSONInternal.editing_key_press($(evt.target));                                                      // 283\n        return;                                                                                                     // 284\n      }                                                                                                             // 285\n    }                                                                                                               // 286\n    var editingField = tmpl.get('editingField');                                                                    // 287\n    var currentFieldName = editingField.get();                                                                      // 288\n    var parentFieldName = _.initial(currentFieldName.split('.'));                                                   // 289\n    var editedFieldName = $(evt.currentTarget).val();                                                               // 290\n    var rejoinedParentFieldName = parentFieldName.join('.');                                                        // 291\n    var newFieldName = ((rejoinedParentFieldName) ? rejoinedParentFieldName + '.' : '') + editedFieldName;          // 292\n    if (newFieldName !== currentFieldName) {                                                                        // 293\n      var modifier1 = {};                                                                                           // 294\n      modifier1[currentFieldName] = 1;                                                                              // 295\n      var action = {                                                                                                // 296\n        \"$unset\" : modifier1                                                                                        // 297\n      };                                                                                                            // 298\n      if (editedFieldName) {                                                                                        // 299\n        var modifier2 = {};                                                                                         // 300\n        modifier2[newFieldName] = tmpl.data[this.toString()];                                                       // 301\n        action[\"$set\"] = modifier2                                                                                  // 302\n      }                                                                                                             // 303\n      EditableJSONInternal.update(tmpl, null, action);                                                              // 304\n    }                                                                                                               // 305\n    editingField.set(null);                                                                                         // 306\n  }                                                                                                                 // 307\n});                                                                                                                 // 308\n                                                                                                                    // 309\nTemplate.editable_JSON_object.helpers({                                                                             // 310\n  notEmpty: function () {                                                                                           // 311\n    return !_.isEmpty(this);                                                                                        // 312\n  }                                                                                                                 // 313\n});                                                                                                                 // 314\n                                                                                                                    // 315\nTemplate.editable_JSON_array.helpers({                                                                              // 316\n  elements: function () {                                                                                           // 317\n  var elements = _.map(this, function (value, index) {                                                              // 318\n    return {element:{____val: value, arrIndex: index}, index: index};                                               // 319\n  });                                                                                                               // 320\n    return elements;                                                                                                // 321\n  },                                                                                                                // 322\n  last: function (arr) {                                                                                            // 323\n    return arr.length === (this.index + 1);                                                                         // 324\n  }                                                                                                                 // 325\n});                                                                                                                 // 326\n                                                                                                                    // 327\nTemplate.editable_JSON_string.helpers({                                                                             // 328\n  _idField: function () {                                                                                           // 329\n    var parentData = Template.parentData(1);                                                                        // 330\n    return parentData && parentData.fld && parentData.fld === '_id';                                                // 331\n  }                                                                                                                 // 332\n});                                                                                                                 // 333\n                                                                                                                    // 334\nTemplate.editable_JSON_string.events({                                                                              // 335\n  'click .editable-JSON-string' : function (evt, tmpl) {                                                            // 336\n    tmpl.$(evt.target).find('.editable-JSON-edit').trigger('click');                                                // 337\n  }                                                                                                                 // 338\n});                                                                                                                 // 339\n                                                                                                                    // 340\nTemplate.editable_JSON_number.events({                                                                              // 341\n  'click .editable-JSON-number' : function (evt, tmpl) {                                                            // 342\n    tmpl.$(evt.target).find('.editable-JSON-edit').trigger('click');                                                // 343\n  }                                                                                                                 // 344\n});                                                                                                                 // 345\n                                                                                                                    // 346\n/*Template.editable_JSON_date.rendered = function () {                                                              // 347\n  var self = this;                                                                                                  // 348\n  var field = this.$('input')[0];                                                                                   // 349\n  var picker = new Pikaday({                                                                                        // 350\n    field: field,                                                                                                   // 351\n    onSelect: function (date) {                                                                                     // 352\n      field.value = picker.toString();                                                                              // 353\n    }                                                                                                               // 354\n  });                                                                                                               // 355\n}*/                                                                                                                 // 356\n                                                                                                                    // 357\nTemplate.editable_JSON_date.helpers({                                                                               // 358\n  date: function () {                                                                                               // 359\n    return this.toISOString();                                                                                      // 360\n  }                                                                                                                 // 361\n});                                                                                                                 // 362\n                                                                                                                    // 363\nTemplate.editable_JSON_date.events({                                                                                // 364\n  'change input' : function (evt, tmpl) {                                                                           // 365\n     var currentDate = new Date(this);                                                                              // 366\n     var newDate = new Date(tmpl.$('input').val());                                                                 // 367\n     if (currentDate.getTime() !== newDate.getTime()) {                                                             // 368\n       var modifier = {                                                                                             // 369\n         field: EditableJSONInternal.getField(),                                                                    // 370\n         value: newDate,                                                                                            // 371\n         action: \"$set\"                                                                                             // 372\n       }                                                                                                            // 373\n       EditableJSONInternal.update(tmpl, modifier);                                                                 // 374\n    }                                                                                                               // 375\n  }                                                                                                                 // 376\n});                                                                                                                 // 377\n                                                                                                                    // 378\nTemplate.editable_JSON_boolean.helpers({                                                                            // 379\n  boolean: function () {                                                                                            // 380\n    return (this.valueOf() == true) ? 'true' : 'false';                                                             // 381\n  }                                                                                                                 // 382\n});                                                                                                                 // 383\n                                                                                                                    // 384\nTemplate.editable_JSON_boolean.events({                                                                             // 385\n  'click .editable-JSON-boolean' : function (evt,tmpl) {                                                            // 386\n    var modifier = {                                                                                                // 387\n      field: EditableJSONInternal.getField(),                                                                       // 388\n      value: !this.valueOf(),                                                                                       // 389\n      action: \"$set\"                                                                                                // 390\n    };                                                                                                              // 391\n    EditableJSONInternal.update(tmpl,modifier);                                                                     // 392\n  }                                                                                                                 // 393\n});                                                                                                                 // 394\n                                                                                                                    // 395\nBlaze.registerHelper('editable_JSON_getField', function () {                                                        // 396\n  return EditableJSONInternal.getField();                                                                           // 397\n});                                                                                                                 // 398\n                                                                                                                    // 399\nBlaze.registerHelper('editable_JSON_getContext', function () {                                                      // 400\n  return EditableJSONInternal.getContext();                                                                         // 401\n});                                                                                                                 // 402\n                                                                                                                    // 403\nBlaze.registerHelper('editable_JSON_collection', function () {                                                      // 404\n  var template = Blaze._templateInstance();                                                                         // 405\n  var collection = template.get('collection');                                                                      // 406\n  return collection;                                                                                                // 407\n});                                                                                                                 // 408\n                                                                                                                    // 409\nTemplate.editableJSONInput.created = function () {                                                                  // 410\n  this.editing = new ReactiveVar(false);                                                                            // 411\n}                                                                                                                   // 412\n                                                                                                                    // 413\nTemplate.editableJSONInput.helpers({                                                                                // 414\n  editing: function () {                                                                                            // 415\n    return Blaze._templateInstance().editing.get();                                                                 // 416\n  }                                                                                                                 // 417\n});                                                                                                                 // 418\n                                                                                                                    // 419\nTemplate.editableJSONInput.events({                                                                                 // 420\n  'click .editable-JSON-edit' : function (evt, tmpl) {                                                              // 421\n    evt.stopPropagation();                                                                                          // 422\n    if (EditableJSON.disableIdField && String(this) === '_id') {                                                    // 423\n      return;                                                                                                       // 424\n    }                                                                                                               // 425\n    var parent = $(evt.target).parent();                                                                            // 426\n    tmpl.editing.set(true);                                                                                         // 427\n    Tracker.flush();                                                                                                // 428\n    EditableJSONInternal.editing_key_press(parent, true);                                                           // 429\n  },                                                                                                                // 430\n  'input input' : function (evt, tmpl) {                                                                            // 431\n    EditableJSONInternal.saveToSession(evt, tmpl, this);                                                            // 432\n  },                                                                                                                // 433\n  'keydown input' : function (evt, tmpl) {                                                                          // 434\n    var charCode = evt.which || evt.keyCode;                                                                        // 435\n    if (charCode === 27) {                                                                                          // 436\n      tmpl.editing.set(false);                                                                                      // 437\n    }                                                                                                               // 438\n    if (charCode !== 13) {                                                                                          // 439\n      EditableJSONInternal.editing_key_press(tmpl.$(evt.target));                                                   // 440\n    }                                                                                                               // 441\n  },                                                                                                                // 442\n  'keyup input, focusout input' : function (evt, tmpl) {                                                            // 443\n    if (evt.type === 'keyup') {                                                                                     // 444\n      var charCode = evt.which || evt.keyCode;                                                                      // 445\n      if (charCode !== 13) {                                                                                        // 446\n        return;                                                                                                     // 447\n      }                                                                                                             // 448\n    }                                                                                                               // 449\n    tmpl.editing.set(false);                                                                                        // 450\n    if (this.collection) {                                                                                          // 451\n      var elem = tmpl.$(evt.target);                                                                                // 452\n      var value = elem.val();                                                                                       // 453\n      if (this.number) {                                                                                            // 454\n        value = parseFloat(value);                                                                                  // 455\n      }                                                                                                             // 456\n      if (value !== this.value) {                                                                                   // 457\n        var modifier = {                                                                                            // 458\n          field: this.field,                                                                                        // 459\n          value: value,                                                                                             // 460\n          action: \"$set\"                                                                                            // 461\n        };                                                                                                          // 462\n        EditableJSONInternal.update(tmpl, modifier);                                                                // 463\n      }                                                                                                             // 464\n    }                                                                                                               // 465\n    else {                                                                                                          // 466\n      EditableJSONInternal.saveToSession(evt, tmpl, this, true);                                                    // 467\n    }                                                                                                               // 468\n  }                                                                                                                 // 469\n});                                                                                                                 // 470\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       // 867\n}).call(this);                                                                                                         // 868\n                                                                                                                       // 869\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['babrahams:editable-json'] = {\n  EditableJSON: EditableJSON\n};\n\n})();\n","servePath":"/packages/babrahams_editable-json.js","sourceMap":{"version":3,"sources":["/packages/babrahams_editable-json/packages/babrahams_editable-json.js"],"names":[],"mappingsfile":"/packages/babrahams_editable-json.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/babrahams:editable-json/editable-json-common.js                                                         //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nMeteor.methods({                                                                                                    // 1\n                                                                                                                    // 2\n  update: function (collectionName, _id, action) {                                                                  // 3\n                                                                                                                    // 4\n    var Collection = Mongo.Collection.get(collectionName),                                                          // 5\n        updated = 0;                                                                                                // 6\n                                                                                                                    // 7\n    try {                                                                                                           // 8\n                                                                                                                    // 9\n      if (!!Package['aldeed:simple-schema'] && !!Package['aldeed:collection2'] && _.isFunction(Collection.simpleSchema) && Collection._c2) {\n                                                                                                                    // 11\n        updated = Collection.update(_id, action, {                                                                  // 12\n          filter: false,                                                                                            // 13\n          autoConvert: false,                                                                                       // 14\n          removeEmptyStrings: false,                                                                                // 15\n          validate: false                                                                                           // 16\n        });                                                                                                         // 17\n                                                                                                                    // 18\n      }                                                                                                             // 19\n                                                                                                                    // 20\n      else {                                                                                                        // 21\n                                                                                                                    // 22\n        updated = Collection.update(_id, action);                                                                   // 23\n                                                                                                                    // 24\n      }                                                                                                             // 25\n                                                                                                                    // 26\n    }                                                                                                               // 27\n                                                                                                                    // 28\n    catch (err) {                                                                                                   // 29\n      throw new Meteor.Error(err);                                                                                  // 30\n    }                                                                                                               // 31\n                                                                                                                    // 32\n    return updated;                                                                                                 // 33\n                                                                                                                    // 34\n  }                                                                                                                 // 35\n                                                                                                                    // 36\n});                                                                                                                 // 37\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/babrahams:editable-json/template.editable-json.js                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.__checkName(\"editableJSON\");                                                                               // 2\nTemplate[\"editableJSON\"] = new Template(\"Template.editableJSON\", (function() {                                      // 3\n  var view = this;                                                                                                  // 4\n  return Spacebars.With(function() {                                                                                // 5\n    return Spacebars.call(view.lookup(\"json\"));                                                                     // 6\n  }, function() {                                                                                                   // 7\n    return HTML.DIV({                                                                                               // 8\n      \"class\": \"editable-JSON\"                                                                                      // 9\n    }, Spacebars.include(view.lookupTemplate(\"editable_JSON_object\")));                                             // 10\n  });                                                                                                               // 11\n}));                                                                                                                // 12\n                                                                                                                    // 13\nTemplate.__checkName(\"editable_JSON\");                                                                              // 14\nTemplate[\"editable_JSON\"] = new Template(\"Template.editable_JSON\", (function() {                                    // 15\n  var view = this;                                                                                                  // 16\n  return Blaze.Each(function() {                                                                                    // 17\n    return Spacebars.call(view.lookup(\"fields\"));                                                                   // 18\n  }, function() {                                                                                                   // 19\n    return [ Spacebars.With(function() {                                                                            // 20\n      return Spacebars.call(view.lookup(\"field\"));                                                                  // 21\n    }, function() {                                                                                                 // 22\n      return [ HTML.SPAN({                                                                                          // 23\n        \"class\": function() {                                                                                       // 24\n          return [ \"editable-JSON-field \", Spacebars.mustache(view.lookup(\"_idClass\")) ];                           // 25\n        }                                                                                                           // 26\n      }, '\"', Spacebars.With(function() {                                                                           // 27\n        return Spacebars.call(view.lookup(\"editingField\"));                                                         // 28\n      }, function() {                                                                                               // 29\n        return HTML.INPUT({                                                                                         // 30\n          type: \"text\",                                                                                             // 31\n          value: function() {                                                                                       // 32\n            return Spacebars.mustache(view.lookup(\".\"));                                                            // 33\n          }                                                                                                         // 34\n        });                                                                                                         // 35\n      }, function() {                                                                                               // 36\n        return HTML.SPAN({                                                                                          // 37\n          \"class\": \"editable-JSON-field-text\"                                                                       // 38\n        }, Blaze.View(\"lookup:.\", function() {                                                                      // 39\n          return Spacebars.mustache(view.lookup(\".\"));                                                              // 40\n        }));                                                                                                        // 41\n      }), '\":'), HTML.CharRef({                                                                                     // 42\n        html: \"&nbsp;\",                                                                                             // 43\n        str: \" \"                                                                                                    // 44\n      }) ];                                                                                                         // 45\n    }), Spacebars.With(function() {                                                                                 // 46\n      return Spacebars.call(view.lookup(\"value\"));                                                                  // 47\n    }, function() {                                                                                                 // 48\n      return Blaze.If(function() {                                                                                  // 49\n        return Spacebars.call(view.lookup(\"isArray\"));                                                              // 50\n      }, function() {                                                                                               // 51\n        return Blaze._TemplateWith(function() {                                                                     // 52\n          return Spacebars.call(view.lookup(\"val\"));                                                                // 53\n        }, function() {                                                                                             // 54\n          return Spacebars.include(view.lookupTemplate(\"editable_JSON_array\"));                                     // 55\n        });                                                                                                         // 56\n      }, function() {                                                                                               // 57\n        return Blaze.If(function() {                                                                                // 58\n          return Spacebars.call(view.lookup(\"isDate\"));                                                             // 59\n        }, function() {                                                                                             // 60\n          return Blaze._TemplateWith(function() {                                                                   // 61\n            return Spacebars.call(view.lookup(\"val\"));                                                              // 62\n          }, function() {                                                                                           // 63\n            return Spacebars.include(view.lookupTemplate(\"editable_JSON_date\"));                                    // 64\n          });                                                                                                       // 65\n        }, function() {                                                                                             // 66\n          return Blaze.If(function() {                                                                              // 67\n            return Spacebars.call(view.lookup(\"isString\"));                                                         // 68\n          }, function() {                                                                                           // 69\n            return Blaze._TemplateWith(function() {                                                                 // 70\n              return Spacebars.call(view.lookup(\"val\"));                                                            // 71\n            }, function() {                                                                                         // 72\n              return Spacebars.include(view.lookupTemplate(\"editable_JSON_string\"));                                // 73\n            });                                                                                                     // 74\n          }, function() {                                                                                           // 75\n            return Blaze.If(function() {                                                                            // 76\n              return Spacebars.call(view.lookup(\"isBoolean\"));                                                      // 77\n            }, function() {                                                                                         // 78\n              return Blaze._TemplateWith(function() {                                                               // 79\n                return Spacebars.call(view.lookup(\"val\"));                                                          // 80\n              }, function() {                                                                                       // 81\n                return Spacebars.include(view.lookupTemplate(\"editable_JSON_boolean\"));                             // 82\n              });                                                                                                   // 83\n            }, function() {                                                                                         // 84\n              return Blaze.If(function() {                                                                          // 85\n                return Spacebars.call(view.lookup(\"isObject\"));                                                     // 86\n              }, function() {                                                                                       // 87\n                return Blaze._TemplateWith(function() {                                                             // 88\n                  return Spacebars.call(view.lookup(\"val\"));                                                        // 89\n                }, function() {                                                                                     // 90\n                  return Spacebars.include(view.lookupTemplate(\"editable_JSON_object\"));                            // 91\n                });                                                                                                 // 92\n              }, function() {                                                                                       // 93\n                return Blaze.If(function() {                                                                        // 94\n                  return Spacebars.call(view.lookup(\"isNumber\"));                                                   // 95\n                }, function() {                                                                                     // 96\n                  return Blaze._TemplateWith(function() {                                                           // 97\n                    return Spacebars.call(view.lookup(\"val\"));                                                      // 98\n                  }, function() {                                                                                   // 99\n                    return Spacebars.include(view.lookupTemplate(\"editable_JSON_number\"));                          // 100\n                  });                                                                                               // 101\n                }, function() {                                                                                     // 102\n                  return Blaze.If(function() {                                                                      // 103\n                    return Spacebars.call(view.lookup(\"isNull\"));                                                   // 104\n                  }, function() {                                                                                   // 105\n                    return Blaze._TemplateWith(function() {                                                         // 106\n                      return Spacebars.call(view.lookup(\"val\"));                                                    // 107\n                    }, function() {                                                                                 // 108\n                      return Spacebars.include(view.lookupTemplate(\"editable_JSON_null\"));                          // 109\n                    });                                                                                             // 110\n                  });                                                                                               // 111\n                });                                                                                                 // 112\n              });                                                                                                   // 113\n            });                                                                                                     // 114\n          });                                                                                                       // 115\n        });                                                                                                         // 116\n      });                                                                                                           // 117\n    }), Blaze.Unless(function() {                                                                                   // 118\n      return Spacebars.dataMustache(view.lookup(\"last\"), view.lookup(\"..\"));                                        // 119\n    }, function() {                                                                                                 // 120\n      return [ \",\", HTML.BR() ];                                                                                    // 121\n    }) ];                                                                                                           // 122\n  });                                                                                                               // 123\n}));                                                                                                                // 124\n                                                                                                                    // 125\nTemplate.__checkName(\"editable_JSON_array\");                                                                        // 126\nTemplate[\"editable_JSON_array\"] = new Template(\"Template.editable_JSON_array\", (function() {                        // 127\n  var view = this;                                                                                                  // 128\n  return [ \"[\", Spacebars.With(function() {                                                                         // 129\n    return Spacebars.call(view.lookup(\"elements\"));                                                                 // 130\n  }, function() {                                                                                                   // 131\n    return [ HTML.DIV({                                                                                             // 132\n      \"class\": \"editable-JSON-indent\"                                                                               // 133\n    }, Blaze.Each(function() {                                                                                      // 134\n      return Spacebars.call(view.lookup(\".\"));                                                                      // 135\n    }, function() {                                                                                                 // 136\n      return [ Blaze._TemplateWith(function() {                                                                     // 137\n        return Spacebars.call(view.lookup(\"element\"));                                                              // 138\n      }, function() {                                                                                               // 139\n        return Spacebars.include(view.lookupTemplate(\"editable_JSON\"));                                             // 140\n      }), Blaze.Unless(function() {                                                                                 // 141\n        return Spacebars.dataMustache(view.lookup(\"last\"), view.lookup(\"..\"));                                      // 142\n      }, function() {                                                                                               // 143\n        return [ \",\", HTML.BR() ];                                                                                  // 144\n      }) ];                                                                                                         // 145\n    })), HTML.SPAN({                                                                                                // 146\n      \"class\": \"editable-JSON-closer\"                                                                               // 147\n    }, \"]\") ];                                                                                                      // 148\n  }, function() {                                                                                                   // 149\n    return \"]\";                                                                                                     // 150\n  }) ];                                                                                                             // 151\n}));                                                                                                                // 152\n                                                                                                                    // 153\nTemplate.__checkName(\"editable_JSON_object\");                                                                       // 154\nTemplate[\"editable_JSON_object\"] = new Template(\"Template.editable_JSON_object\", (function() {                      // 155\n  var view = this;                                                                                                  // 156\n  return Blaze.If(function() {                                                                                      // 157\n    return Spacebars.call(view.lookup(\"notEmpty\"));                                                                 // 158\n  }, function() {                                                                                                   // 159\n    return [ \"{\", HTML.DIV({                                                                                        // 160\n      \"class\": \"editable-JSON-indent\"                                                                               // 161\n    }, Blaze._TemplateWith(function() {                                                                             // 162\n      return Spacebars.call(view.lookup(\".\"));                                                                      // 163\n    }, function() {                                                                                                 // 164\n      return Spacebars.include(view.lookupTemplate(\"editable_JSON\"));                                               // 165\n    })), HTML.SPAN({                                                                                                // 166\n      \"class\": \"editable-JSON-closer\"                                                                               // 167\n    }, \"}\") ];                                                                                                      // 168\n  }, function() {                                                                                                   // 169\n    return \"{}\";                                                                                                    // 170\n  });                                                                                                               // 171\n}));                                                                                                                // 172\n                                                                                                                    // 173\nTemplate.__checkName(\"editable_JSON_string\");                                                                       // 174\nTemplate[\"editable_JSON_string\"] = new Template(\"Template.editable_JSON_string\", (function() {                      // 175\n  var view = this;                                                                                                  // 176\n  return HTML.SPAN({                                                                                                // 177\n    \"class\": function() {                                                                                           // 178\n      return [ \"editable-JSON-string \", Blaze.If(function() {                                                       // 179\n        return Spacebars.call(view.lookup(\"_idField\"));                                                             // 180\n      }, function() {                                                                                               // 181\n        return \"editable-JSON-_id-value\";                                                                           // 182\n      }) ];                                                                                                         // 183\n    }                                                                                                               // 184\n  }, '\"', Blaze.If(function() {                                                                                     // 185\n    return Spacebars.call(view.lookup(\"editable_JSON_collection\"));                                                 // 186\n  }, function() {                                                                                                   // 187\n    return Spacebars.With(function() {                                                                              // 188\n      return Spacebars.call(view.lookup(\"editable_JSON_getField\"));                                                 // 189\n    }, function() {                                                                                                 // 190\n      return Blaze._TemplateWith(function() {                                                                       // 191\n        return {                                                                                                    // 192\n          value: Spacebars.call(view.lookup(\"..\")),                                                                 // 193\n          field: Spacebars.call(view.lookup(\".\")),                                                                  // 194\n          collection: Spacebars.call(view.lookup(\"editable_JSON_collection\"))                                       // 195\n        };                                                                                                          // 196\n      }, function() {                                                                                               // 197\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                         // 198\n      });                                                                                                           // 199\n    }, function() {                                                                                                 // 200\n      return Blaze.View(\"lookup:.\", function() {                                                                    // 201\n        return Spacebars.mustache(view.lookup(\".\"));                                                                // 202\n      });                                                                                                           // 203\n    });                                                                                                             // 204\n  }, function() {                                                                                                   // 205\n    return Blaze.If(function() {                                                                                    // 206\n      return Spacebars.call(view.lookup(\"_idField\"));                                                               // 207\n    }, function() {                                                                                                 // 208\n      return Blaze.View(\"lookup:.\", function() {                                                                    // 209\n        return Spacebars.mustache(view.lookup(\".\"));                                                                // 210\n      });                                                                                                           // 211\n    }, function() {                                                                                                 // 212\n      return Blaze._TemplateWith(function() {                                                                       // 213\n        return {                                                                                                    // 214\n          value: Spacebars.call(view.lookup(\".\")),                                                                  // 215\n          field: Spacebars.call(view.lookup(\"editable_JSON_getField\"))                                              // 216\n        };                                                                                                          // 217\n      }, function() {                                                                                               // 218\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                         // 219\n      });                                                                                                           // 220\n    });                                                                                                             // 221\n  }), '\"');                                                                                                         // 222\n}));                                                                                                                // 223\n                                                                                                                    // 224\nTemplate.__checkName(\"editable_JSON_boolean\");                                                                      // 225\nTemplate[\"editable_JSON_boolean\"] = new Template(\"Template.editable_JSON_boolean\", (function() {                    // 226\n  var view = this;                                                                                                  // 227\n  return HTML.SPAN({                                                                                                // 228\n    \"class\": \"editable-JSON-boolean\"                                                                                // 229\n  }, Blaze.View(\"lookup:boolean\", function() {                                                                      // 230\n    return Spacebars.mustache(view.lookup(\"boolean\"));                                                              // 231\n  }));                                                                                                              // 232\n}));                                                                                                                // 233\n                                                                                                                    // 234\nTemplate.__checkName(\"editable_JSON_date\");                                                                         // 235\nTemplate[\"editable_JSON_date\"] = new Template(\"Template.editable_JSON_date\", (function() {                          // 236\n  var view = this;                                                                                                  // 237\n  return HTML.SPAN({                                                                                                // 238\n    \"class\": \"editable-JSON-date\"                                                                                   // 239\n  }, HTML.SPAN({                                                                                                    // 240\n    \"class\": \"editable-JSON-string\"                                                                                 // 241\n  }, '\"', HTML.INPUT({                                                                                              // 242\n    type: \"text\",                                                                                                   // 243\n    value: function() {                                                                                             // 244\n      return Spacebars.mustache(view.lookup(\"date\"));                                                               // 245\n    }                                                                                                               // 246\n  }), '\"'));                                                                                                        // 247\n}));                                                                                                                // 248\n                                                                                                                    // 249\nTemplate.__checkName(\"editable_JSON_number\");                                                                       // 250\nTemplate[\"editable_JSON_number\"] = new Template(\"Template.editable_JSON_number\", (function() {                      // 251\n  var view = this;                                                                                                  // 252\n  return HTML.SPAN({                                                                                                // 253\n    \"class\": \"editable-JSON-number editable-text-trigger\"                                                           // 254\n  }, Blaze.If(function() {                                                                                          // 255\n    return Spacebars.call(view.lookup(\"editable_JSON_collection\"));                                                 // 256\n  }, function() {                                                                                                   // 257\n    return Spacebars.With(function() {                                                                              // 258\n      return Spacebars.call(view.lookup(\"editable_JSON_getField\"));                                                 // 259\n    }, function() {                                                                                                 // 260\n      return Blaze._TemplateWith(function() {                                                                       // 261\n        return {                                                                                                    // 262\n          value: Spacebars.call(view.lookup(\"..\")),                                                                 // 263\n          field: Spacebars.call(view.lookup(\".\")),                                                                  // 264\n          collection: Spacebars.call(view.lookup(\"editable_JSON_collection\")),                                      // 265\n          number: Spacebars.call(true)                                                                              // 266\n        };                                                                                                          // 267\n      }, function() {                                                                                               // 268\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                         // 269\n      });                                                                                                           // 270\n    }, function() {                                                                                                 // 271\n      return Blaze.View(\"lookup:.\", function() {                                                                    // 272\n        return Spacebars.mustache(view.lookup(\".\"));                                                                // 273\n      });                                                                                                           // 274\n    });                                                                                                             // 275\n  }, function() {                                                                                                   // 276\n    return Blaze._TemplateWith(function() {                                                                         // 277\n      return {                                                                                                      // 278\n        value: Spacebars.call(view.lookup(\".\")),                                                                    // 279\n        field: Spacebars.call(view.lookup(\"editable_JSON_getField\")),                                               // 280\n        number: Spacebars.call(true)                                                                                // 281\n      };                                                                                                            // 282\n    }, function() {                                                                                                 // 283\n      return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                           // 284\n    });                                                                                                             // 285\n  }));                                                                                                              // 286\n}));                                                                                                                // 287\n                                                                                                                    // 288\nTemplate.__checkName(\"editable_JSON_null\");                                                                         // 289\nTemplate[\"editable_JSON_null\"] = new Template(\"Template.editable_JSON_null\", (function() {                          // 290\n  var view = this;                                                                                                  // 291\n  return HTML.Raw('<span class=\"editable-JSON-null\">null</span>');                                                  // 292\n}));                                                                                                                // 293\n                                                                                                                    // 294\nTemplate.__checkName(\"editableJSONInput\");                                                                          // 295\nTemplate[\"editableJSONInput\"] = new Template(\"Template.editableJSONInput\", (function() {                            // 296\n  var view = this;                                                                                                  // 297\n  return Blaze.If(function() {                                                                                      // 298\n    return Spacebars.call(view.lookup(\"editing\"));                                                                  // 299\n  }, function() {                                                                                                   // 300\n    return HTML.INPUT({                                                                                             // 301\n      type: \"text\",                                                                                                 // 302\n      \"class\": \"editable-JSON-input\",                                                                               // 303\n      value: function() {                                                                                           // 304\n        return Spacebars.mustache(view.lookup(\"value\"));                                                            // 305\n      }                                                                                                             // 306\n    });                                                                                                             // 307\n  }, function() {                                                                                                   // 308\n    return HTML.SPAN({                                                                                              // 309\n      \"class\": \"editable-JSON-edit\"                                                                                 // 310\n    }, Blaze.View(\"lookup:value\", function() {                                                                      // 311\n      return Spacebars.mustache(view.lookup(\"value\"));                                                              // 312\n    }));                                                                                                            // 313\n  });                                                                                                               // 314\n}));                                                                                                                // 315\n                                                                                                                    // 316\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// packages/babrahams:editable-json/editable-json-client.js                                                         //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nEditableJSON = {};                                                                                                  // 1\n                                                                                                                    // 2\nEditableJSON.afterUpdate = function (store, action, JSONbefore, documentsUpdated) {                                 // 3\n  // Overwrite this function to create a callback after every edit\t                                                 // 4\n  // `this` is the document or the json after the update                                                            // 5\n};                                                                                                                  // 6\n                                                                                                                    // 7\nEditableJSONInternal = {};                                                                                          // 8\n                                                                                                                    // 9\nEditableJSONInternal.timer = null;                                                                                  // 10\n                                                                                                                    // 11\nEditableJSONInternal.resize = function (elem) {                                                                     // 12\n  var el = $(elem);                                                                                                 // 13\n  EditableJSONInternal.editing_key_press.fakeEl.text(el.val());                                                     // 14\n  var width = EditableJSONInternal.editing_key_press.fakeEl.width() + 8;                                            // 15\n  el.width(width);                                                                                                  // 16\n  el.css('min-width',width);                                                                                        // 17\n}                                                                                                                   // 18\n                                                                                                                    // 19\nEditableJSONInternal.editing_key_press = function (elem,noDelay) {                                                  // 20\n  if (EditableJSONInternal.editing_key_press.fakeEl === undefined) {                                                // 21\n    EditableJSONInternal.editing_key_press.fakeEl = $('<span class=\"editable-JSON-input\">').hide().appendTo(document.body);\n  }                                                                                                                 // 23\n  if (noDelay) {                                                                                                    // 24\n    var input = elem.find('input');                                                                                 // 25\n    EditableJSONInternal.resize(input);                                                                             // 26\n    input.select();                                                                                                 // 27\n  }                                                                                                                 // 28\n  else {                                                                                                            // 29\n    Meteor.defer(function () {                                                                                      // 30\n      EditableJSONInternal.resize(elem);                                                                            // 31\n    });                                                                                                             // 32\n  }                                                                                                                 // 33\n}                                                                                                                   // 34\n                                                                                                                    // 35\nEditableJSONInternal.getContext = function () {                                                                     // 36\n  var jsonTemplateData = Template && Template.parentData(function (data) { return _.isObject(data) && data.document; });\n  var data = jsonTemplateData && jsonTemplateData.document;                                                         // 38\n  return data || {};                                                                                                // 39\n}                                                                                                                   // 40\n                                                                                                                    // 41\nEditableJSONInternal.getField = function () {                                                                       // 42\n  var field = Blaze._parentData(1).fld;                                                                             // 43\n  return (!(EditableJSON.disableIdField && field === '_id')) && field;                                              // 44\n}                                                                                                                   // 45\n                                                                                                                    // 46\nEditableJSONInternal.update = function (tmpl, modifier, action) {                                                   // 47\n  var collectionName = tmpl.get('collection');                                                                      // 48\n  if (!action) {                                                                                                    // 49\n    var action = {};                                                                                                // 50\n    var mod = {};                                                                                                   // 51\n    mod[modifier.field] = modifier.value;                                                                           // 52\n    action[modifier.action] = mod;                                                                                  // 53\n  }                                                                                                                 // 54\n  if (collectionName) {                                                                                             // 55\n    // Validate -- make sure the change isn't on the id field                                                       // 56\n    // And make sure we're not modifying the same field twice                                                       // 57\n    var okay = true;                                                                                                // 58\n    var conflict = false;                                                                                           // 59\n    var modFields = [];                                                                                             // 60\n    _.each(action, function (modifier, action) {                                                                    // 61\n      if (_.has(modifier,'_id')) {                                                                                  // 62\n        okay = false;                                                                                               // 63\n      }                                                                                                             // 64\n      var field = _.keys(modifier)[0];                                                                              // 65\n      if (!_.contains(modFields, field)) {                                                                          // 66\n        // The following prevents all errors, but is too restrictive                                                // 67\n        // && !_.find(modFields,function (f){ return field.indexOf(f) !== -1; })                                    // 68\n        modFields.push(field);                                                                                      // 69\n      }                                                                                                             // 70\n      else {                                                                                                        // 71\n        conflict = true;                                                                                            // 72\n      }                                                                                                             // 73\n    });                                                                                                             // 74\n    if (!okay) {                                                                                                    // 75\n      if (EditableJSON.disableIdField) {                                                                            // 76\n        console.log(\"You can't change the _id field.\");                                                             // 77\n      }                                                                                                             // 78\n      return;                                                                                                       // 79\n    }                                                                                                               // 80\n    if (conflict) {                                                                                                 // 81\n      console.log(\"You can't use conflicting modifiers.\");                                                          // 82\n      return;                                                                                                       // 83\n    }                                                                                                               // 84\n    var doc = EditableJSONInternal.getContext();                                                                    // 85\n    // Mongo.Collection.get(collectionName).update({_id:doc._id},action);                                           // 86\n    Meteor.call('update', collectionName, doc._id, action, function (err, res) {                                    // 87\n      if (err) {                                                                                                    // 88\n        console.log(\"You can't use conflicting modifiers.\"); // We're making a big assumption here in giving this message -- TODO -- actually check the message\n        console.log(err);                                                                                           // 90\n      }                                                                                                             // 91\n\t  else {                                                                                                           // 92\n\t\tif (res && _.isFunction(EditableJSON.afterUpdate)) {                                                              // 93\n\t\t  var mutatedDoc = Mongo.Collection.get(collectionName).findOne({_id: doc._id});                                  // 94\n\t\t  EditableJSON.afterUpdate.call(mutatedDoc, collectionName, action, doc, res);                                    // 95\n\t\t}                                                                                                                 // 96\n\t  }                                                                                                                // 97\n    });                                                                                                             // 98\n  }                                                                                                                 // 99\n  else {                                                                                                            // 100\n\tvar JSONbefore = Session.getJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')));                  // 101\n    _.each(action, function (modifier, action) {                                                                    // 102\n      var fieldName = _.keys(modifier)[0];                                                                          // 103\n      var value = modifier[fieldName];                                                                              // 104\n      switch (action) {                                                                                             // 105\n        case '$set' :                                                                                               // 106\n          Session.setJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')) + '.' + fieldName, value); // 107\n          break;                                                                                                    // 108\n        case '$unset' :                                                                                             // 109\n          Session.setJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')) + '.' + fieldName, undefined);\n          break;                                                                                                    // 111\n      }                                                                                                             // 112\n    });                                                                                                             // 113\n\tvar JSONafter = Session.getJSON('editableJSON' + EditableJSONInternal.store(tmpl.get('store')));                   // 114\n\tEditableJSON.afterUpdate.call(JSONafter, tmpl.get('store'), action, JSONbefore, 1);                                // 115\n  }                                                                                                                 // 116\n}                                                                                                                   // 117\n                                                                                                                    // 118\nEditableJSONInternal.saveToSession = function (evt, tmpl, self, noDelay) {                                          // 119\n  var elem = tmpl.$(evt.target);                                                                                    // 120\n  var val = elem.val();                                                                                             // 121\n  if (self.number && !/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?|Infinity)$/.test(val)) {                                         // 122\n    // If it's not a number, just revert the value and return                                                       // 123\n    elem.val(self.value);                                                                                           // 124\n    return;                                                                                                         // 125\n  }                                                                                                                 // 126\n  var field = 'editableJSON' + EditableJSONInternal.store(tmpl.get('store')) + '.' + self.field;                    // 127\n  var value = (self.number) ? parseFloat(val) : val;                                                                // 128\n  if (noDelay) {                                                                                                    // 129\n    Session.setJSON(field, value);                                                                                  // 130\n  }                                                                                                                 // 131\n  else {                                                                                                            // 132\n    if (!self.collection) {                                                                                         // 133\n      if (EditableJSONInternal.timer) {                                                                             // 134\n        Meteor.clearTimeout(EditableJSONInternal.timer);                                                            // 135\n      }                                                                                                             // 136\n      EditableJSONInternal.timer = Meteor.setTimeout(function () {                                                  // 137\n        Session.setJSON(field, value);                                                                              // 138\n      },300);                                                                                                       // 139\n    }                                                                                                               // 140\n  }                                                                                                                 // 141\n}                                                                                                                   // 142\n                                                                                                                    // 143\nEditableJSONInternal.store = function (storeName) {                                                                 // 144\n  return (storeName) ? '.' + storeName : '';                                                                        // 145\n}                                                                                                                   // 146\n                                                                                                                    // 147\nEditableJSON.retrieve = function (storeName) {                                                                      // 148\n  return Session.getJSON('editableJSON' + EditableJSONInternal.store(storeName));                                   // 149\n}                                                                                                                   // 150\n                                                                                                                    // 151\nTemplate.editableJSON.created = function () {                                                                       // 152\n  var self = this;                                                                                                  // 153\n  self.editingField = new ReactiveVar();                                                                            // 154\n  if (self.data && self.data.collection) {                                                                          // 155\n    self.autorun(function () {                                                                                      // 156\n      var Collection = Mongo.Collection.get(self.data.collection);                                                  // 157\n      var doc = Collection && Collection.find().count() && self.data.document; // Collection.find().count() is the reactivity trigger\n      self.collection = self.data.collection;                                                                       // 159\n      self.document = doc || {};                                                                                    // 160\n    });                                                                                                             // 161\n    return;                                                                                                         // 162\n  }                                                                                                                 // 163\n  else if (self.data && self.data.store) {                                                                          // 164\n    self.store = self.data.store;                                                                                   // 165\n  }                                                                                                                 // 166\n  var initialValue = (!_.isUndefined(self.data.json)) ? self.data.json : (((self.store) ? self.parent().data : self.data) || {});\n  Session.setJSON('editableJSON' + EditableJSONInternal.store(self.store), initialValue);                           // 168\n  // To keep the state of which field name is being edited                                                          // 169\n}                                                                                                                   // 170\n                                                                                                                    // 171\nTemplate.editableJSON.helpers({                                                                                     // 172\n  json: function () {                                                                                               // 173\n    if (this.collection && this.document) {                                                                         // 174\n      return this.document;                                                                                         // 175\n    }                                                                                                               // 176\n    if (this.json) {                                                                                                // 177\n      var currentData = Session.getJSON('editableJSON' + EditableJSONInternal.store(this.store));                   // 178\n      if (_.isUndefined(currentData) || _.isEmpty(currentData)) {                                                   // 179\n        Session.setJSON('editableJSON' + EditableJSONInternal.store(this.store), this.json);                        // 180\n      }                                                                                                             // 181\n    }                                                                                                               // 182\n    return Session.getJSON('editableJSON' + EditableJSONInternal.store(this.store));                                // 183\n  }                                                                                                                 // 184\n});                                                                                                                 // 185\n                                                                                                                    // 186\nTemplate.editable_JSON.helpers({                                                                                    // 187\n  fields: function () {                                                                                             // 188\n    var self = this;                                                                                                // 189\n    var index = -1;                                                                                                 // 190\n    if (_.has(self,'____val')) {                                                                                    // 191\n      index = self.arrIndex - 1;                                                                                    // 192\n      delete self.arrIndex;                                                                                         // 193\n    }                                                                                                               // 194\n    var fields = _.map(self, function (value, field) {                                                              // 195\n      index++;                                                                                                      // 196\n      var parent = null;                                                                                            // 197\n      var number = 2;                                                                                               // 198\n      while (Blaze._parentData(number) && Blaze._parentData(number)._id === undefined && Blaze._parentData(number).fld === undefined) {\n        number++;                                                                                                   // 200\n      }                                                                                                             // 201\n      parent = Blaze._parentData(number);                                                                           // 202\n      var currentField = (field !== '____val') ? field : index;                                                     // 203\n      var fld = (parent && parent.fld) ? parent.fld + ((currentField !== undefined) ? '.' + currentField : '') : currentField;\n      return {                                                                                                      // 205\n        field:(field !== '____val') ? currentField : null,                                                          // 206\n        value:{val: value, fld: fld, field: currentField},                                                          // 207\n        index:index                                                                                                 // 208\n      };                                                                                                            // 209\n    });                                                                                                             // 210\n    return fields;                                                                                                  // 211\n  },                                                                                                                // 212\n  value: function () {                                                                                              // 213\n    return (_.isObject(this.value) && _.has(this.value, '____val')) ? this.value.____val : this.value;              // 214\n  },                                                                                                                // 215\n  isArray: function () {                                                                                            // 216\n    return _.isArray(this.val);                                                                                     // 217\n  },                                                                                                                // 218\n  isObject: function () {                                                                                           // 219\n    return _.isObject(this.val);                                                                                    // 220\n  },                                                                                                                // 221\n  isString: function () {                                                                                           // 222\n    return _.isString(this.val);                                                                                    // 223\n  },                                                                                                                // 224\n  isBoolean: function () {                                                                                          // 225\n    return _.isBoolean(this.val);                                                                                   // 226\n  },                                                                                                                // 227\n  isDate: function () {                                                                                             // 228\n    return _.isDate(this.val);                                                                                      // 229\n  },                                                                                                                // 230\n  isNumber: function () {                                                                                           // 231\n    return _.isNumber(this.val);                                                                                    // 232\n  },                                                                                                                // 233\n  isNull : function () {                                                                                            // 234\n    return _.isNull(this.val);                                                                                      // 235\n  },                                                                                                                // 236\n  last: function (obj) {                                                                                            // 237\n    return (obj.____val !== undefined) || _.size(obj) === (this.index + 1);                                         // 238\n  },                                                                                                                // 239\n  editingField : function () {                                                                                      // 240\n    var fieldName = this.toString()                                                                                 // 241\n    var fldData = Template.parentData(function (data) { return data && data.fld; });                                // 242\n    var fld = fldData && (fldData.fld + '.' + fieldName) || fieldName;                                              // 243\n    var template = Blaze._templateInstance();                                                                       // 244\n    var editingField = template.get('editingField');                                                                // 245\n    return editingField && (editingField.get() === fld) && fieldName;                                               // 246\n  },                                                                                                                // 247\n  _idClass: function () {                                                                                           // 248\n    return (String(this) === \"_id\") ? \"editable-JSON-_id-field\" : \"\";                                               // 249\n  }                                                                                                                 // 250\n});                                                                                                                 // 251\n                                                                                                                    // 252\nTemplate.editable_JSON.events({                                                                                     // 253\n  'click .editable-JSON-field' : function (evt, tmpl) {                                                             // 254\n    tmpl.$(evt.target).find('.editable-JSON-field-text').trigger('click');                                          // 255\n  },                                                                                                                // 256\n  'click .editable-JSON-field-text' : function (evt,tmpl) {                                                         // 257\n    evt.stopPropagation();                                                                                          // 258\n    var fieldName = this.toString();                                                                                // 259\n    if (fieldName === '_id') {                                                                                      // 260\n      return;                                                                                                       // 261\n    }                                                                                                               // 262\n    var elem = $(evt.target).closest('.editable-JSON-field');                                                       // 263\n    var fldData = Template.parentData(function (data) { return data && data.fld; });                                // 264\n    var field = fldData && (fldData.fld + '.' + fieldName) || fieldName;                                            // 265\n    var editingField = tmpl.get('editingField');                                                                    // 266\n    if (editingField) {                                                                                             // 267\n      editingField.set(field);                                                                                      // 268\n      Tracker.flush();                                                                                              // 269\n      EditableJSONInternal.editing_key_press(elem,true);                                                            // 270\n    }                                                                                                               // 271\n  },                                                                                                                // 272\n  'keydown .editable-JSON-field input, focusout .editable-JSON-field input' : function (evt, tmpl) {                // 273\n    evt.stopPropagation();                                                                                          // 274\n    var charCode = evt.which || evt.keyCode;                                                                        // 275\n    if (evt.type === 'keydown') {                                                                                   // 276\n      if (charCode === 27) {                                                                                        // 277\n        var editingField = tmpl.get('editingField');                                                                // 278\n        editingField.set(null);                                                                                     // 279\n        return;                                                                                                     // 280\n      }                                                                                                             // 281\n      if (charCode !== 13) {                                                                                        // 282\n        EditableJSONInternal.editing_key_press($(evt.target));                                                      // 283\n        return;                                                                                                     // 284\n      }                                                                                                             // 285\n    }                                                                                                               // 286\n    var editingField = tmpl.get('editingField');                                                                    // 287\n    var currentFieldName = editingField.get();                                                                      // 288\n    var parentFieldName = _.initial(currentFieldName.split('.'));                                                   // 289\n    var editedFieldName = $(evt.currentTarget).val();                                                               // 290\n    var rejoinedParentFieldName = parentFieldName.join('.');                                                        // 291\n    var newFieldName = ((rejoinedParentFieldName) ? rejoinedParentFieldName + '.' : '') + editedFieldName;          // 292\n    if (newFieldName !== currentFieldName) {                                                                        // 293\n      var modifier1 = {};                                                                                           // 294\n      modifier1[currentFieldName] = 1;                                                                              // 295\n      var action = {                                                                                                // 296\n        \"$unset\" : modifier1                                                                                        // 297\n      };                                                                                                            // 298\n      if (editedFieldName) {                                                                                        // 299\n        var modifier2 = {};                                                                                         // 300\n        modifier2[newFieldName] = tmpl.data[this.toString()];                                                       // 301\n        action[\"$set\"] = modifier2                                                                                  // 302\n      }                                                                                                             // 303\n      EditableJSONInternal.update(tmpl, null, action);                                                              // 304\n    }                                                                                                               // 305\n    editingField.set(null);                                                                                         // 306\n  }                                                                                                                 // 307\n});                                                                                                                 // 308\n                                                                                                                    // 309\nTemplate.editable_JSON_object.helpers({                                                                             // 310\n  notEmpty: function () {                                                                                           // 311\n    return !_.isEmpty(this);                                                                                        // 312\n  }                                                                                                                 // 313\n});                                                                                                                 // 314\n                                                                                                                    // 315\nTemplate.editable_JSON_array.helpers({                                                                              // 316\n  elements: function () {                                                                                           // 317\n  var elements = _.map(this, function (value, index) {                                                              // 318\n    return {element:{____val: value, arrIndex: index}, index: index};                                               // 319\n  });                                                                                                               // 320\n    return elements;                                                                                                // 321\n  },                                                                                                                // 322\n  last: function (arr) {                                                                                            // 323\n    return arr.length === (this.index + 1);                                                                         // 324\n  }                                                                                                                 // 325\n});                                                                                                                 // 326\n                                                                                                                    // 327\nTemplate.editable_JSON_string.helpers({                                                                             // 328\n  _idField: function () {                                                                                           // 329\n    var parentData = Template.parentData(1);                                                                        // 330\n    return parentData && parentData.fld && parentData.fld === '_id';                                                // 331\n  }                                                                                                                 // 332\n});                                                                                                                 // 333\n                                                                                                                    // 334\nTemplate.editable_JSON_string.events({                                                                              // 335\n  'click .editable-JSON-string' : function (evt, tmpl) {                                                            // 336\n    tmpl.$(evt.target).find('.editable-JSON-edit').trigger('click');                                                // 337\n  }                                                                                                                 // 338\n});                                                                                                                 // 339\n                                                                                                                    // 340\nTemplate.editable_JSON_number.events({                                                                              // 341\n  'click .editable-JSON-number' : function (evt, tmpl) {                                                            // 342\n    tmpl.$(evt.target).find('.editable-JSON-edit').trigger('click');                                                // 343\n  }                                                                                                                 // 344\n});                                                                                                                 // 345\n                                                                                                                    // 346\n/*Template.editable_JSON_date.rendered = function () {                                                              // 347\n  var self = this;                                                                                                  // 348\n  var field = this.$('input')[0];                                                                                   // 349\n  var picker = new Pikaday({                                                                                        // 350\n    field: field,                                                                                                   // 351\n    onSelect: function (date) {                                                                                     // 352\n      field.value = picker.toString();                                                                              // 353\n    }                                                                                                               // 354\n  });                                                                                                               // 355\n}*/                                                                                                                 // 356\n                                                                                                                    // 357\nTemplate.editable_JSON_date.helpers({                                                                               // 358\n  date: function () {                                                                                               // 359\n    return this.toISOString();                                                                                      // 360\n  }                                                                                                                 // 361\n});                                                                                                                 // 362\n                                                                                                                    // 363\nTemplate.editable_JSON_date.events({                                                                                // 364\n  'change input' : function (evt, tmpl) {                                                                           // 365\n     var currentDate = new Date(this);                                                                              // 366\n     var newDate = new Date(tmpl.$('input').val());                                                                 // 367\n     if (currentDate.getTime() !== newDate.getTime()) {                                                             // 368\n       var modifier = {                                                                                             // 369\n         field: EditableJSONInternal.getField(),                                                                    // 370\n         value: newDate,                                                                                            // 371\n         action: \"$set\"                                                                                             // 372\n       }                                                                                                            // 373\n       EditableJSONInternal.update(tmpl, modifier);                                                                 // 374\n    }                                                                                                               // 375\n  }                                                                                                                 // 376\n});                                                                                                                 // 377\n                                                                                                                    // 378\nTemplate.editable_JSON_boolean.helpers({                                                                            // 379\n  boolean: function () {                                                                                            // 380\n    return (this.valueOf() == true) ? 'true' : 'false';                                                             // 381\n  }                                                                                                                 // 382\n});                                                                                                                 // 383\n                                                                                                                    // 384\nTemplate.editable_JSON_boolean.events({                                                                             // 385\n  'click .editable-JSON-boolean' : function (evt,tmpl) {                                                            // 386\n    var modifier = {                                                                                                // 387\n      field: EditableJSONInternal.getField(),                                                                       // 388\n      value: !this.valueOf(),                                                                                       // 389\n      action: \"$set\"                                                                                                // 390\n    };                                                                                                              // 391\n    EditableJSONInternal.update(tmpl,modifier);                                                                     // 392\n  }                                                                                                                 // 393\n});                                                                                                                 // 394\n                                                                                                                    // 395\nBlaze.registerHelper('editable_JSON_getField', function () {                                                        // 396\n  return EditableJSONInternal.getField();                                                                           // 397\n});                                                                                                                 // 398\n                                                                                                                    // 399\nBlaze.registerHelper('editable_JSON_getContext', function () {                                                      // 400\n  return EditableJSONInternal.getContext();                                                                         // 401\n});                                                                                                                 // 402\n                                                                                                                    // 403\nBlaze.registerHelper('editable_JSON_collection', function () {                                                      // 404\n  var template = Blaze._templateInstance();                                                                         // 405\n  var collection = template.get('collection');                                                                      // 406\n  return collection;                                                                                                // 407\n});                                                                                                                 // 408\n                                                                                                                    // 409\nTemplate.editableJSONInput.created = function () {                                                                  // 410\n  this.editing = new ReactiveVar(false);                                                                            // 411\n}                                                                                                                   // 412\n                                                                                                                    // 413\nTemplate.editableJSONInput.helpers({                                                                                // 414\n  editing: function () {                                                                                            // 415\n    return Blaze._templateInstance().editing.get();                                                                 // 416\n  }                                                                                                                 // 417\n});                                                                                                                 // 418\n                                                                                                                    // 419\nTemplate.editableJSONInput.events({                                                                                 // 420\n  'click .editable-JSON-edit' : function (evt, tmpl) {                                                              // 421\n    evt.stopPropagation();                                                                                          // 422\n    if (EditableJSON.disableIdField && String(this) === '_id') {                                                    // 423\n      return;                                                                                                       // 424\n    }                                                                                                               // 425\n    var parent = $(evt.target).parent();                                                                            // 426\n    tmpl.editing.set(true);                                                                                         // 427\n    Tracker.flush();                                                                                                // 428\n    EditableJSONInternal.editing_key_press(parent, true);                                                           // 429\n  },                                                                                                                // 430\n  'input input' : function (evt, tmpl) {                                                                            // 431\n    EditableJSONInternal.saveToSession(evt, tmpl, this);                                                            // 432\n  },                                                                                                                // 433\n  'keydown input' : function (evt, tmpl) {                                                                          // 434\n    var charCode = evt.which || evt.keyCode;                                                                        // 435\n    if (charCode === 27) {                                                                                          // 436\n      tmpl.editing.set(false);                                                                                      // 437\n    }                                                                                                               // 438\n    if (charCode !== 13) {                                                                                          // 439\n      EditableJSONInternal.editing_key_press(tmpl.$(evt.target));                                                   // 440\n    }                                                                                                               // 441\n  },                                                                                                                // 442\n  'keyup input, focusout input' : function (evt, tmpl) {                                                            // 443\n    if (evt.type === 'keyup') {                                                                                     // 444\n      var charCode = evt.which || evt.keyCode;                                                                      // 445\n      if (charCode !== 13) {                                                                                        // 446\n        return;                                                                                                     // 447\n      }                                                                                                             // 448\n    }                                                                                                               // 449\n    tmpl.editing.set(false);                                                                                        // 450\n    if (this.collection) {                                                                                          // 451\n      var elem = tmpl.$(evt.target);                                                                                // 452\n      var value = elem.val();                                                                                       // 453\n      if (this.number) {                                                                                            // 454\n        value = parseFloat(value);                                                                                  // 455\n      }                                                                                                             // 456\n      if (value !== this.value) {                                                                                   // 457\n        var modifier = {                                                                                            // 458\n          field: this.field,                                                                                        // 459\n          value: value,                                                                                             // 460\n          action: \"$set\"                                                                                            // 461\n        };                                                                                                          // 462\n        EditableJSONInternal.update(tmpl, modifier);                                                                // 463\n      }                                                                                                             // 464\n    }                                                                                                               // 465\n    else {                                                                                                          // 466\n      EditableJSONInternal.saveToSession(evt, tmpl, this, true);                                                    // 467\n    }                                                                                                               // 468\n  }                                                                                                                 // 469\n});                                                                                                                 // 470\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]