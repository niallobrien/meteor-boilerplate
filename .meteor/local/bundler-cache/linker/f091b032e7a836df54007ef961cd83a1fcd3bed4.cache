[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Template = Package.templating.Template;\nvar _ = Package.underscore._;\nvar ActiveRoute = Package['zimme:active-route'].ActiveRoute;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar __coffeescriptShare;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/arillo_flow-router-helpers/packages/arillo_flow-router-helpers.js                            //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\n(function () {                                                                                           // 1\n                                                                                                         // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/arillo:flow-router-helpers/client/helpers.coffee.js                                       //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar currentRouteName, func, helpers, isSubReady, name, param, pathFor, queryParam, subsReady, urlFor,    // 10\n  __slice = [].slice,                                                                                    // 11\n  __hasProp = {}.hasOwnProperty;                                                                         // 12\n                                                                                                         // 13\nsubsReady = function() {                                                                                 // 14\n  var subs;                                                                                              // 15\n  subs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];                                        // 16\n  if (subs.length === 1) {                                                                               // 17\n    return FlowRouter.subsReady();                                                                       // 18\n  }                                                                                                      // 19\n  subs = subs.slice(0, subs.length - 1);                                                                 // 20\n  return _.reduce(subs, function(memo, sub) {                                                            // 21\n    return memo && FlowRouter.subsReady(sub);                                                            // 22\n  }, true);                                                                                              // 23\n};                                                                                                       // 24\n                                                                                                         // 25\npathFor = function(path, view) {                                                                         // 26\n  var query, _ref;                                                                                       // 27\n  if (!path) {                                                                                           // 28\n    throw new Error('no path defined');                                                                  // 29\n  }                                                                                                      // 30\n  if (((_ref = path.hash) != null ? _ref.route : void 0) != null) {                                      // 31\n    view = path;                                                                                         // 32\n    path = view.hash.route;                                                                              // 33\n    delete view.hash.route;                                                                              // 34\n  }                                                                                                      // 35\n  query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};                                  // 36\n  return FlowRouter.path(path, view.hash, query);                                                        // 37\n};                                                                                                       // 38\n                                                                                                         // 39\nurlFor = function(path, view) {                                                                          // 40\n  var relativePath;                                                                                      // 41\n  relativePath = pathFor(path, view);                                                                    // 42\n  return Meteor.absoluteUrl(relativePath.substr(1));                                                     // 43\n};                                                                                                       // 44\n                                                                                                         // 45\nparam = function(name) {                                                                                 // 46\n  return FlowRouter.getParam(name);                                                                      // 47\n};                                                                                                       // 48\n                                                                                                         // 49\nqueryParam = function(key) {                                                                             // 50\n  return FlowRouter.getQueryParam(key);                                                                  // 51\n};                                                                                                       // 52\n                                                                                                         // 53\ncurrentRouteName = function() {                                                                          // 54\n  return FlowRouter.getRouteName();                                                                      // 55\n};                                                                                                       // 56\n                                                                                                         // 57\nisSubReady = function(sub) {                                                                             // 58\n  if (sub) {                                                                                             // 59\n    return FlowRouter.subsReady(sub);                                                                    // 60\n  }                                                                                                      // 61\n  return FlowRouter.subsReady();                                                                         // 62\n};                                                                                                       // 63\n                                                                                                         // 64\nhelpers = {                                                                                              // 65\n  subsReady: subsReady,                                                                                  // 66\n  pathFor: pathFor,                                                                                      // 67\n  urlFor: urlFor,                                                                                        // 68\n  param: param,                                                                                          // 69\n  queryParam: queryParam,                                                                                // 70\n  currentRouteName: currentRouteName,                                                                    // 71\n  isSubReady: isSubReady                                                                                 // 72\n};                                                                                                       // 73\n                                                                                                         // 74\nfor (name in helpers) {                                                                                  // 75\n  if (!__hasProp.call(helpers, name)) continue;                                                          // 76\n  func = helpers[name];                                                                                  // 77\n  Template.registerHelper(name, func);                                                                   // 78\n}                                                                                                        // 79\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         // 81\n}).call(this);                                                                                           // 82\n                                                                                                         // 83\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['arillo:flow-router-helpers'] = {};\n\n})();\n","servePath":"/packages/arillo_flow-router-helpers.js","sourceMap":{"version":3,"sources":["/packages/arillo_flow-router-helpers/packages/arillo_flow-router-helpers.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8G","file":"/packages/arillo_flow-router-helpers.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/arillo:flow-router-helpers/client/helpers.coffee.js                                       //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar currentRouteName, func, helpers, isSubReady, name, param, pathFor, queryParam, subsReady, urlFor,\n  __slice = [].slice,\n  __hasProp = {}.hasOwnProperty;\n\nsubsReady = function() {\n  var subs;\n  subs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n  if (subs.length === 1) {\n    return FlowRouter.subsReady();\n  }\n  subs = subs.slice(0, subs.length - 1);\n  return _.reduce(subs, function(memo, sub) {\n    return memo && FlowRouter.subsReady(sub);\n  }, true);\n};\n\npathFor = function(path, view) {\n  var query, _ref;\n  if (!path) {\n    throw new Error('no path defined');\n  }\n  if (((_ref = path.hash) != null ? _ref.route : void 0) != null) {\n    view = path;\n    path = view.hash.route;\n    delete view.hash.route;\n  }\n  query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};\n  return FlowRouter.path(path, view.hash, query);\n};\n\nurlFor = function(path, view) {\n  var relativePath;\n  relativePath = pathFor(path, view);\n  return Meteor.absoluteUrl(relativePath.substr(1));\n};\n\nparam = function(name) {\n  return FlowRouter.getParam(name);\n};\n\nqueryParam = function(key) {\n  return FlowRouter.getQueryParam(key);\n};\n\ncurrentRouteName = function() {\n  return FlowRouter.getRouteName();\n};\n\nisSubReady = function(sub) {\n  if (sub) {\n    return FlowRouter.subsReady(sub);\n  }\n  return FlowRouter.subsReady();\n};\n\nhelpers = {\n  subsReady: subsReady,\n  pathFor: pathFor,\n  urlFor: urlFor,\n  param: param,\n  queryParam: queryParam,\n  currentRouteName: currentRouteName,\n  isSubReady: isSubReady\n};\n\nfor (name in helpers) {\n  if (!__hasProp.call(helpers, name)) continue;\n  func = helpers[name];\n  Template.registerHelper(name, func);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]