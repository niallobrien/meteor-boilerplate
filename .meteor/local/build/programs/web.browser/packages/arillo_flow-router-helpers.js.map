{"version":3,"sources":["meteor://ðŸ’»app/packages/arillo_flow-router-helpers/packages/arillo_flow-router-helpers.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8G","file":"/packages/arillo_flow-router-helpers.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/arillo:flow-router-helpers/client/helpers.coffee.js                                       //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\n__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar currentRouteName, func, helpers, isSubReady, name, param, pathFor, queryParam, subsReady, urlFor,\n  __slice = [].slice,\n  __hasProp = {}.hasOwnProperty;\n\nsubsReady = function() {\n  var subs;\n  subs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n  if (subs.length === 1) {\n    return FlowRouter.subsReady();\n  }\n  subs = subs.slice(0, subs.length - 1);\n  return _.reduce(subs, function(memo, sub) {\n    return memo && FlowRouter.subsReady(sub);\n  }, true);\n};\n\npathFor = function(path, view) {\n  var query, _ref;\n  if (!path) {\n    throw new Error('no path defined');\n  }\n  if (((_ref = path.hash) != null ? _ref.route : void 0) != null) {\n    view = path;\n    path = view.hash.route;\n    delete view.hash.route;\n  }\n  query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};\n  return FlowRouter.path(path, view.hash, query);\n};\n\nurlFor = function(path, view) {\n  var relativePath;\n  relativePath = pathFor(path, view);\n  return Meteor.absoluteUrl(relativePath.substr(1));\n};\n\nparam = function(name) {\n  return FlowRouter.getParam(name);\n};\n\nqueryParam = function(key) {\n  return FlowRouter.getQueryParam(key);\n};\n\ncurrentRouteName = function() {\n  return FlowRouter.getRouteName();\n};\n\nisSubReady = function(sub) {\n  if (sub) {\n    return FlowRouter.subsReady(sub);\n  }\n  return FlowRouter.subsReady();\n};\n\nhelpers = {\n  subsReady: subsReady,\n  pathFor: pathFor,\n  urlFor: urlFor,\n  param: param,\n  queryParam: queryParam,\n  currentRouteName: currentRouteName,\n  isSubReady: isSubReady\n};\n\nfor (name in helpers) {\n  if (!__hasProp.call(helpers, name)) continue;\n  func = helpers[name];\n  Template.registerHelper(name, func);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}