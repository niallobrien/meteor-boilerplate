{"version":3,"sources":["meteor://ðŸ’»app/packages/babrahams_editable-json/packages/babrahams_editable-json.js"],"names":[],"mappingsfile":"/packages/babrahams_editable-json.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/babrahams:editable-json/editable-json-common.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nif (_.isUndefined(EditableJSON)) {                                                                                     // 1\n  EditableJSON = {};                                                                                                   // 2\n}                                                                                                                      // 3\n                                                                                                                       // 4\nEditableJSON.collection = function (collectionName) {                                                                  // 5\n  return EditableJSON.collection(collectionName);                                                                      // 6\n}                                                                                                                      // 7\n                                                                                                                       // 8\ndoUpdate = function (collectionName, _id, action) {                                                                    // 9\n                                                                                                                       // 10\n  var Collection = EditableJSON.collection(collectionName);                                                            // 11\n  var updated = 0;                                                                                                     // 12\n                                                                                                                       // 13\n  try {                                                                                                                // 14\n                                                                                                                       // 15\n    if (!!Package['aldeed:simple-schema'] && !!Package['aldeed:collection2'] && _.isFunction(Collection.simpleSchema) && Collection._c2) {\n                                                                                                                       // 17\n      updated = Collection.update(_id, action, {                                                                       // 18\n        filter: false,                                                                                                 // 19\n        autoConvert: false,                                                                                            // 20\n        removeEmptyStrings: false,                                                                                     // 21\n        validate: false                                                                                                // 22\n      });                                                                                                              // 23\n                                                                                                                       // 24\n    }                                                                                                                  // 25\n                                                                                                                       // 26\n    else {                                                                                                             // 27\n                                                                                                                       // 28\n      updated = Collection.update(_id, action);                                                                        // 29\n                                                                                                                       // 30\n    }                                                                                                                  // 31\n                                                                                                                       // 32\n  }                                                                                                                    // 33\n                                                                                                                       // 34\n  catch (err) {                                                                                                        // 35\n    if (!(Meteor.isClient && action.$set && _.keys(action.$set)[0].indexOf('newField') > -1)) {                        // 36\n      throw new Meteor.Error(err);                                                                                     // 37\n    }                                                                                                                  // 38\n  }                                                                                                                    // 39\n                                                                                                                       // 40\n  return updated;                                                                                                      // 41\n}                                                                                                                      // 42\n                                                                                                                       // 43\nMeteor.methods({                                                                                                       // 44\n                                                                                                                       // 45\n  editableJSON_update: function (collectionName, _id, action) {                                                        // 46\n                                                                                                                       // 47\n    check(collectionName, String);                                                                                     // 48\n    check(_id, String);                                                                                                // 49\n    check(action, Object);                                                                                             // 50\n                                                                                                                       // 51\n    return doUpdate(collectionName, _id, action);                                                                      // 52\n                                                                                                                       // 53\n  }                                                                                                                    // 54\n                                                                                                                       // 55\n});                                                                                                                    // 56\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/babrahams:editable-json/template.editable-json.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"editableJSON\");                                                                                  // 2\nTemplate[\"editableJSON\"] = new Template(\"Template.editableJSON\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"editable-JSON\"                                                                                           // 6\n  }, HTML.DIV({                                                                                                        // 7\n    \"class\": \"editable-JSON-click-zone editable-JSON-top-level\"                                                        // 8\n  }, Blaze.If(function() {                                                                                             // 9\n    return Spacebars.call(view.lookup(\"collection\"));                                                                  // 10\n  }, function() {                                                                                                      // 11\n    return Spacebars.With(function() {                                                                                 // 12\n      return Spacebars.call(view.lookup(\"document\"));                                                                  // 13\n    }, function() {                                                                                                    // 14\n      return Spacebars.include(view.lookupTemplate(\"editable_JSON_object\"));                                           // 15\n    });                                                                                                                // 16\n  }, function() {                                                                                                      // 17\n    return Spacebars.With(function() {                                                                                 // 18\n      return Spacebars.call(view.lookup(\"observe\"));                                                                   // 19\n    }, function() {                                                                                                    // 20\n      return [ Blaze.View(\"lookup:watcher\", function() {                                                               // 21\n        return Spacebars.mustache(view.lookup(\"watcher\"));                                                             // 22\n      }), Spacebars.include(view.lookupTemplate(\"editable_JSON_object\")) ];                                            // 23\n    }, function() {                                                                                                    // 24\n      return Spacebars.With(function() {                                                                               // 25\n        return Spacebars.call(view.lookup(\"json\"));                                                                    // 26\n      }, function() {                                                                                                  // 27\n        return Spacebars.include(view.lookupTemplate(\"editable_JSON_object\"));                                         // 28\n      }, function() {                                                                                                  // 29\n        return Spacebars.include(view.lookupTemplate(\"editable_JSON_object\"));                                         // 30\n      });                                                                                                              // 31\n    });                                                                                                                // 32\n  })));                                                                                                                // 33\n}));                                                                                                                   // 34\n                                                                                                                       // 35\nTemplate.__checkName(\"editable_JSON\");                                                                                 // 36\nTemplate[\"editable_JSON\"] = new Template(\"Template.editable_JSON\", (function() {                                       // 37\n  var view = this;                                                                                                     // 38\n  return Blaze.Each(function() {                                                                                       // 39\n    return Spacebars.call(view.lookup(\"fields\"));                                                                      // 40\n  }, function() {                                                                                                      // 41\n    return HTML.DIV({                                                                                                  // 42\n      \"class\": \"editable-JSON-click-zone\"                                                                              // 43\n    }, Spacebars.With(function() {                                                                                     // 44\n      return Spacebars.call(view.lookup(\"field\"));                                                                     // 45\n    }, function() {                                                                                                    // 46\n      return [ HTML.SPAN({                                                                                             // 47\n        \"class\": function() {                                                                                          // 48\n          return [ \"editable-JSON-field \", Spacebars.mustache(view.lookup(\"_idClass\")) ];                              // 49\n        }                                                                                                              // 50\n      }, '\"', Spacebars.With(function() {                                                                              // 51\n        return Spacebars.call(view.lookup(\"editingField\"));                                                            // 52\n      }, function() {                                                                                                  // 53\n        return HTML.INPUT({                                                                                            // 54\n          type: \"text\",                                                                                                // 55\n          value: function() {                                                                                          // 56\n            return Spacebars.mustache(view.lookup(\".\"));                                                               // 57\n          }                                                                                                            // 58\n        });                                                                                                            // 59\n      }, function() {                                                                                                  // 60\n        return HTML.SPAN({                                                                                             // 61\n          \"class\": \"editable-JSON-field-text\"                                                                          // 62\n        }, Blaze.View(\"lookup:.\", function() {                                                                         // 63\n          return Spacebars.mustache(view.lookup(\".\"));                                                                 // 64\n        }));                                                                                                           // 65\n      }), '\":'), HTML.CharRef({                                                                                        // 66\n        html: \"&nbsp;\",                                                                                                // 67\n        str: \"Â \"                                                                                                       // 68\n      }) ];                                                                                                            // 69\n    }), Spacebars.With(function() {                                                                                    // 70\n      return Spacebars.call(view.lookup(\"value\"));                                                                     // 71\n    }, function() {                                                                                                    // 72\n      return Blaze.If(function() {                                                                                     // 73\n        return Spacebars.call(view.lookup(\"isArray\"));                                                                 // 74\n      }, function() {                                                                                                  // 75\n        return Blaze._TemplateWith(function() {                                                                        // 76\n          return Spacebars.call(view.lookup(\"val\"));                                                                   // 77\n        }, function() {                                                                                                // 78\n          return Spacebars.include(view.lookupTemplate(\"editable_JSON_array\"));                                        // 79\n        });                                                                                                            // 80\n      }, function() {                                                                                                  // 81\n        return Blaze.If(function() {                                                                                   // 82\n          return Spacebars.call(view.lookup(\"isDate\"));                                                                // 83\n        }, function() {                                                                                                // 84\n          return Blaze._TemplateWith(function() {                                                                      // 85\n            return Spacebars.call(view.lookup(\"val\"));                                                                 // 86\n          }, function() {                                                                                              // 87\n            return Spacebars.include(view.lookupTemplate(\"editable_JSON_date\"));                                       // 88\n          });                                                                                                          // 89\n        }, function() {                                                                                                // 90\n          return Blaze.If(function() {                                                                                 // 91\n            return Spacebars.call(view.lookup(\"isString\"));                                                            // 92\n          }, function() {                                                                                              // 93\n            return Blaze._TemplateWith(function() {                                                                    // 94\n              return Spacebars.call(view.lookup(\"val\"));                                                               // 95\n            }, function() {                                                                                            // 96\n              return Spacebars.include(view.lookupTemplate(\"editable_JSON_string\"));                                   // 97\n            });                                                                                                        // 98\n          }, function() {                                                                                              // 99\n            return Blaze.If(function() {                                                                               // 100\n              return Spacebars.call(view.lookup(\"isBoolean\"));                                                         // 101\n            }, function() {                                                                                            // 102\n              return Blaze._TemplateWith(function() {                                                                  // 103\n                return Spacebars.call(view.lookup(\"val\"));                                                             // 104\n              }, function() {                                                                                          // 105\n                return Spacebars.include(view.lookupTemplate(\"editable_JSON_boolean\"));                                // 106\n              });                                                                                                      // 107\n            }, function() {                                                                                            // 108\n              return Blaze.If(function() {                                                                             // 109\n                return Spacebars.call(view.lookup(\"isObject\"));                                                        // 110\n              }, function() {                                                                                          // 111\n                return Blaze._TemplateWith(function() {                                                                // 112\n                  return Spacebars.call(view.lookup(\"val\"));                                                           // 113\n                }, function() {                                                                                        // 114\n                  return Spacebars.include(view.lookupTemplate(\"editable_JSON_object\"));                               // 115\n                });                                                                                                    // 116\n              }, function() {                                                                                          // 117\n                return Blaze.If(function() {                                                                           // 118\n                  return Spacebars.call(view.lookup(\"isNumber\"));                                                      // 119\n                }, function() {                                                                                        // 120\n                  return Blaze._TemplateWith(function() {                                                              // 121\n                    return Spacebars.call(view.lookup(\"val\"));                                                         // 122\n                  }, function() {                                                                                      // 123\n                    return Spacebars.include(view.lookupTemplate(\"editable_JSON_number\"));                             // 124\n                  });                                                                                                  // 125\n                }, function() {                                                                                        // 126\n                  return Blaze.If(function() {                                                                         // 127\n                    return Spacebars.call(view.lookup(\"isNull\"));                                                      // 128\n                  }, function() {                                                                                      // 129\n                    return Blaze._TemplateWith(function() {                                                            // 130\n                      return Spacebars.call(view.lookup(\"val\"));                                                       // 131\n                    }, function() {                                                                                    // 132\n                      return Spacebars.include(view.lookupTemplate(\"editable_JSON_null\"));                             // 133\n                    });                                                                                                // 134\n                  });                                                                                                  // 135\n                });                                                                                                    // 136\n              });                                                                                                      // 137\n            });                                                                                                        // 138\n          });                                                                                                          // 139\n        });                                                                                                            // 140\n      });                                                                                                              // 141\n    }), Blaze.Unless(function() {                                                                                      // 142\n      return Spacebars.dataMustache(view.lookup(\"last\"), view.lookup(\"..\"));                                           // 143\n    }, function() {                                                                                                    // 144\n      return \",\";                                                                                                      // 145\n    }));                                                                                                               // 146\n  });                                                                                                                  // 147\n}));                                                                                                                   // 148\n                                                                                                                       // 149\nTemplate.__checkName(\"editable_JSON_array\");                                                                           // 150\nTemplate[\"editable_JSON_array\"] = new Template(\"Template.editable_JSON_array\", (function() {                           // 151\n  var view = this;                                                                                                     // 152\n  return [ Spacebars.With(function() {                                                                                 // 153\n    return Spacebars.call(view.lookup(\"elements\"));                                                                    // 154\n  }, function() {                                                                                                      // 155\n    return [ \"[\", HTML.DIV({                                                                                           // 156\n      \"class\": \"editable-JSON-indent\"                                                                                  // 157\n    }, Blaze.Each(function() {                                                                                         // 158\n      return Spacebars.call(view.lookup(\".\"));                                                                         // 159\n    }, function() {                                                                                                    // 160\n      return Blaze._TemplateWith(function() {                                                                          // 161\n        return Spacebars.call(view.lookup(\"element\"));                                                                 // 162\n      }, function() {                                                                                                  // 163\n        return Spacebars.include(view.lookupTemplate(\"editable_JSON\"));                                                // 164\n      });                                                                                                              // 165\n    })), HTML.SPAN({                                                                                                   // 166\n      \"class\": \"editable-JSON-closer\"                                                                                  // 167\n    }, \"]\") ];                                                                                                         // 168\n  }, function() {                                                                                                      // 169\n    return HTML.SPAN({                                                                                                 // 170\n      \"class\": \"editableJSON-empty-object\"                                                                             // 171\n    }, \"[]\");                                                                                                          // 172\n  }), Blaze.If(function() {                                                                                            // 173\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"arrayComma\"));                                             // 174\n  }, function() {                                                                                                      // 175\n    return \",\";                                                                                                        // 176\n  }) ];                                                                                                                // 177\n}));                                                                                                                   // 178\n                                                                                                                       // 179\nTemplate.__checkName(\"editable_JSON_object\");                                                                          // 180\nTemplate[\"editable_JSON_object\"] = new Template(\"Template.editable_JSON_object\", (function() {                         // 181\n  var view = this;                                                                                                     // 182\n  return [ Blaze.If(function() {                                                                                       // 183\n    return Spacebars.call(view.lookup(\"notEmpty\"));                                                                    // 184\n  }, function() {                                                                                                      // 185\n    return [ \"{\", HTML.DIV({                                                                                           // 186\n      \"class\": \"editable-JSON-indent\"                                                                                  // 187\n    }, Blaze._TemplateWith(function() {                                                                                // 188\n      return Spacebars.call(view.lookup(\".\"));                                                                         // 189\n    }, function() {                                                                                                    // 190\n      return Spacebars.include(view.lookupTemplate(\"editable_JSON\"));                                                  // 191\n    })), HTML.SPAN({                                                                                                   // 192\n      \"class\": \"editable-JSON-closer\"                                                                                  // 193\n    }, \"}\") ];                                                                                                         // 194\n  }, function() {                                                                                                      // 195\n    return HTML.SPAN({                                                                                                 // 196\n      \"class\": \"editableJSON-empty-object\"                                                                             // 197\n    }, \"{}\");                                                                                                          // 198\n  }), Blaze.If(function() {                                                                                            // 199\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"arrayComma\"));                                             // 200\n  }, function() {                                                                                                      // 201\n    return \",\";                                                                                                        // 202\n  }) ];                                                                                                                // 203\n}));                                                                                                                   // 204\n                                                                                                                       // 205\nTemplate.__checkName(\"editable_JSON_string\");                                                                          // 206\nTemplate[\"editable_JSON_string\"] = new Template(\"Template.editable_JSON_string\", (function() {                         // 207\n  var view = this;                                                                                                     // 208\n  return [ HTML.SPAN({                                                                                                 // 209\n    \"class\": function() {                                                                                              // 210\n      return [ \"editable-JSON-string \", Blaze.If(function() {                                                          // 211\n        return Spacebars.call(view.lookup(\"_idField\"));                                                                // 212\n      }, function() {                                                                                                  // 213\n        return \"editable-JSON-_id-value\";                                                                              // 214\n      }) ];                                                                                                            // 215\n    }                                                                                                                  // 216\n  }, '\"', Blaze.If(function() {                                                                                        // 217\n    return Spacebars.call(view.lookup(\"editable_JSON_collection\"));                                                    // 218\n  }, function() {                                                                                                      // 219\n    return Spacebars.With(function() {                                                                                 // 220\n      return Spacebars.call(view.lookup(\"editable_JSON_getField\"));                                                    // 221\n    }, function() {                                                                                                    // 222\n      return Blaze._TemplateWith(function() {                                                                          // 223\n        return {                                                                                                       // 224\n          value: Spacebars.call(view.lookup(\"..\")),                                                                    // 225\n          field: Spacebars.call(view.lookup(\".\")),                                                                     // 226\n          collection: Spacebars.call(view.lookup(\"editable_JSON_collection\"))                                          // 227\n        };                                                                                                             // 228\n      }, function() {                                                                                                  // 229\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                            // 230\n      });                                                                                                              // 231\n    }, function() {                                                                                                    // 232\n      return Blaze.View(\"lookup:.\", function() {                                                                       // 233\n        return Spacebars.mustache(view.lookup(\".\"));                                                                   // 234\n      });                                                                                                              // 235\n    });                                                                                                                // 236\n  }, function() {                                                                                                      // 237\n    return Blaze.If(function() {                                                                                       // 238\n      return Spacebars.call(view.lookup(\"_idField\"));                                                                  // 239\n    }, function() {                                                                                                    // 240\n      return Blaze.View(\"lookup:.\", function() {                                                                       // 241\n        return Spacebars.mustache(view.lookup(\".\"));                                                                   // 242\n      });                                                                                                              // 243\n    }, function() {                                                                                                    // 244\n      return Blaze._TemplateWith(function() {                                                                          // 245\n        return {                                                                                                       // 246\n          value: Spacebars.call(view.lookup(\".\")),                                                                     // 247\n          field: Spacebars.call(view.lookup(\"editable_JSON_getField\"))                                                 // 248\n        };                                                                                                             // 249\n      }, function() {                                                                                                  // 250\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                            // 251\n      });                                                                                                              // 252\n    });                                                                                                                // 253\n  }), '\"'), Blaze.If(function() {                                                                                      // 254\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"arrayComma\"));                                             // 255\n  }, function() {                                                                                                      // 256\n    return \",\";                                                                                                        // 257\n  }) ];                                                                                                                // 258\n}));                                                                                                                   // 259\n                                                                                                                       // 260\nTemplate.__checkName(\"editable_JSON_boolean\");                                                                         // 261\nTemplate[\"editable_JSON_boolean\"] = new Template(\"Template.editable_JSON_boolean\", (function() {                       // 262\n  var view = this;                                                                                                     // 263\n  return [ HTML.SPAN({                                                                                                 // 264\n    \"class\": \"editable-JSON-boolean\"                                                                                   // 265\n  }, Blaze.View(\"lookup:boolean\", function() {                                                                         // 266\n    return Spacebars.mustache(view.lookup(\"boolean\"));                                                                 // 267\n  })), Blaze.If(function() {                                                                                           // 268\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"arrayComma\"));                                             // 269\n  }, function() {                                                                                                      // 270\n    return \",\";                                                                                                        // 271\n  }) ];                                                                                                                // 272\n}));                                                                                                                   // 273\n                                                                                                                       // 274\nTemplate.__checkName(\"editable_JSON_date\");                                                                            // 275\nTemplate[\"editable_JSON_date\"] = new Template(\"Template.editable_JSON_date\", (function() {                             // 276\n  var view = this;                                                                                                     // 277\n  return [ HTML.SPAN({                                                                                                 // 278\n    \"class\": \"editable-JSON-date\"                                                                                      // 279\n  }, HTML.SPAN({                                                                                                       // 280\n    \"class\": \"editable-JSON-string\"                                                                                    // 281\n  }, '\"', HTML.INPUT({                                                                                                 // 282\n    type: \"text\",                                                                                                      // 283\n    value: function() {                                                                                                // 284\n      return Spacebars.mustache(view.lookup(\"date\"));                                                                  // 285\n    }                                                                                                                  // 286\n  }), '\"')), Blaze.If(function() {                                                                                     // 287\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"arrayComma\"));                                             // 288\n  }, function() {                                                                                                      // 289\n    return \",\";                                                                                                        // 290\n  }) ];                                                                                                                // 291\n}));                                                                                                                   // 292\n                                                                                                                       // 293\nTemplate.__checkName(\"editable_JSON_number\");                                                                          // 294\nTemplate[\"editable_JSON_number\"] = new Template(\"Template.editable_JSON_number\", (function() {                         // 295\n  var view = this;                                                                                                     // 296\n  return [ HTML.SPAN({                                                                                                 // 297\n    \"class\": \"editable-JSON-number editable-text-trigger\"                                                              // 298\n  }, Blaze.If(function() {                                                                                             // 299\n    return Spacebars.call(view.lookup(\"editable_JSON_collection\"));                                                    // 300\n  }, function() {                                                                                                      // 301\n    return Spacebars.With(function() {                                                                                 // 302\n      return Spacebars.call(view.lookup(\"editable_JSON_getField\"));                                                    // 303\n    }, function() {                                                                                                    // 304\n      return Blaze._TemplateWith(function() {                                                                          // 305\n        return {                                                                                                       // 306\n          value: Spacebars.call(view.lookup(\"..\")),                                                                    // 307\n          field: Spacebars.call(view.lookup(\".\")),                                                                     // 308\n          collection: Spacebars.call(view.lookup(\"editable_JSON_collection\")),                                         // 309\n          number: Spacebars.call(true)                                                                                 // 310\n        };                                                                                                             // 311\n      }, function() {                                                                                                  // 312\n        return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                            // 313\n      });                                                                                                              // 314\n    }, function() {                                                                                                    // 315\n      return Blaze.View(\"lookup:.\", function() {                                                                       // 316\n        return Spacebars.mustache(view.lookup(\".\"));                                                                   // 317\n      });                                                                                                              // 318\n    });                                                                                                                // 319\n  }, function() {                                                                                                      // 320\n    return Blaze._TemplateWith(function() {                                                                            // 321\n      return {                                                                                                         // 322\n        value: Spacebars.call(view.lookup(\".\")),                                                                       // 323\n        field: Spacebars.call(view.lookup(\"editable_JSON_getField\")),                                                  // 324\n        number: Spacebars.call(true)                                                                                   // 325\n      };                                                                                                               // 326\n    }, function() {                                                                                                    // 327\n      return Spacebars.include(view.lookupTemplate(\"editableJSONInput\"));                                              // 328\n    });                                                                                                                // 329\n  })), Blaze.If(function() {                                                                                           // 330\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"arrayComma\"));                                             // 331\n  }, function() {                                                                                                      // 332\n    return \",\";                                                                                                        // 333\n  }) ];                                                                                                                // 334\n}));                                                                                                                   // 335\n                                                                                                                       // 336\nTemplate.__checkName(\"editable_JSON_null\");                                                                            // 337\nTemplate[\"editable_JSON_null\"] = new Template(\"Template.editable_JSON_null\", (function() {                             // 338\n  var view = this;                                                                                                     // 339\n  return [ HTML.Raw('<span class=\"editable-JSON-null\">null</span>'), Blaze.If(function() {                             // 340\n    return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"arrayComma\"));                                             // 341\n  }, function() {                                                                                                      // 342\n    return \",\";                                                                                                        // 343\n  }) ];                                                                                                                // 344\n}));                                                                                                                   // 345\n                                                                                                                       // 346\nTemplate.__checkName(\"editableJSONInput\");                                                                             // 347\nTemplate[\"editableJSONInput\"] = new Template(\"Template.editableJSONInput\", (function() {                               // 348\n  var view = this;                                                                                                     // 349\n  return Blaze.If(function() {                                                                                         // 350\n    return Spacebars.call(view.lookup(\"editing\"));                                                                     // 351\n  }, function() {                                                                                                      // 352\n    return HTML.INPUT({                                                                                                // 353\n      type: \"text\",                                                                                                    // 354\n      \"class\": \"editable-JSON-input\",                                                                                  // 355\n      value: function() {                                                                                              // 356\n        return Spacebars.mustache(view.lookup(\"value\"));                                                               // 357\n      }                                                                                                                // 358\n    });                                                                                                                // 359\n  }, function() {                                                                                                      // 360\n    return HTML.SPAN({                                                                                                 // 361\n      \"class\": \"editable-JSON-edit\"                                                                                    // 362\n    }, Blaze.View(\"lookup:value\", function() {                                                                         // 363\n      return Spacebars.mustache(view.lookup(\"value\"));                                                                 // 364\n    }));                                                                                                               // 365\n  });                                                                                                                  // 366\n}));                                                                                                                   // 367\n                                                                                                                       // 368\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/babrahams:editable-json/editable-json-client.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nif (_.isUndefined(EditableJSON)) {                                                                                     // 1\n  EditableJSON = {};                                                                                                   // 2\n}                                                                                                                      // 3\n                                                                                                                       // 4\n// Call back queues                                                                                                    // 5\nEditableJSON._afterUpdateCallbacks = [];                                                                               // 6\nEditableJSON._onUnpublishedFieldAddedCallbacks = [];                                                                   // 7\n                                                                                                                       // 8\nEditableJSON._runCallbacks = function () {                                                                             // 9\n  // arguments should be:                                                                                              // 10\n  // arguments[0] = EditableJSON._afterUpdateCallbacks; // i.e. the array of callback functions to call                // 11\n  // arguments[1] = context; // i.e. the thing that will be `this` in the function that gets called                    // 12\n  // arguments[2 ...] = arguments; // i.e. the arguments of the function that will be called                           // 13\n  var args = Array.prototype.slice.call(arguments);                                                                    // 14\n  var callbackArray = args.shift();                                                                                    // 15\n  var context = args.shift();                                                                                          // 16\n  _.each(callbackArray, function (c) {                                                                                 // 17\n    if (_.isUndefined(c.store) || c.store === args[0]) {                                                               // 18\n      if (_.isFunction(c.callback)) {                                                                                  // 19\n        c.callback.apply(context,args);                                                                                // 20\n      }                                                                                                                // 21\n      else {                                                                                                           // 22\n        console.log(\"Callbacks must be a functions. A \" + (typeof c.callback) + \" was passed instead.\");               // 23\n      }                                                                                                                // 24\n    }                                                                                                                  // 25\n  });                                                                                                                  // 26\n}                                                                                                                      // 27\n                                                                                                                       // 28\nEditableJSON.onUnpublishedFieldAdded = function (callback, store) {                                                    // 29\n  EditableJSON._onUnpublishedFieldAddedCallbacks.push({callback: callback, store: store});                             // 30\n};                                                                                                                     // 31\n                                                                                                                       // 32\nEditableJSON.afterUpdate = function (callback, store) {                                                                // 33\n  EditableJSON._afterUpdateCallbacks.push({callback: callback, store: store});                                         // 34\n};                                                                                                                     // 35\n                                                                                                                       // 36\n// Internal methods                                                                                                    // 37\n// Shouldn't be called from app or package code                                                                        // 38\n                                                                                                                       // 39\nEditableJSONStore = new ReactiveDict();                                                                                // 40\n                                                                                                                       // 41\nEditableJSONInternal = {};                                                                                             // 42\n                                                                                                                       // 43\nEditableJSONInternal.timer = null;                                                                                     // 44\n                                                                                                                       // 45\nEditableJSONInternal.resize = function (elem) {                                                                        // 46\n  var el = $(elem);                                                                                                    // 47\n  EditableJSONInternal.editing_key_press.fakeEl.text(el.val());                                                        // 48\n  var width = EditableJSONInternal.editing_key_press.fakeEl.width() + 8;                                               // 49\n  el.width(width);                                                                                                     // 50\n  el.css('min-width',width);                                                                                           // 51\n}                                                                                                                      // 52\n                                                                                                                       // 53\nEditableJSONInternal.editing_key_press = function (elem,noDelay) {                                                     // 54\n  if (EditableJSONInternal.editing_key_press.fakeEl === undefined) {                                                   // 55\n    EditableJSONInternal.editing_key_press.fakeEl = $('<span class=\"editable-JSON-input\">').hide().appendTo(document.body);\n  }                                                                                                                    // 57\n  if (noDelay) {                                                                                                       // 58\n    var input = elem.find('input');                                                                                    // 59\n    EditableJSONInternal.resize(input);                                                                                // 60\n    input.select();                                                                                                    // 61\n  }                                                                                                                    // 62\n  else {                                                                                                               // 63\n    Meteor.defer(function () {                                                                                         // 64\n      EditableJSONInternal.resize(elem);                                                                               // 65\n    });                                                                                                                // 66\n  }                                                                                                                    // 67\n}                                                                                                                      // 68\n                                                                                                                       // 69\nEditableJSONInternal.getContext = function () {                                                                        // 70\n  var jsonTemplateData = Template && Template.parentData(function (data) { return _.isObject(data) && data.document; });\n  var data = jsonTemplateData && jsonTemplateData.document;                                                            // 72\n  return data || {};                                                                                                   // 73\n}                                                                                                                      // 74\n                                                                                                                       // 75\nEditableJSONInternal.getField = function () {                                                                          // 76\n  var field = Blaze._parentData(1).fld;                                                                                // 77\n  return (!(EditableJSON.disableIdField && field === '_id')) && field;                                                 // 78\n}                                                                                                                      // 79\n                                                                                                                       // 80\nEditableJSONInternal.getPath = function () {                                                                           // 81\n  var path = Blaze._parentData(1).path;                                                                                // 82\n  if (!_.isUndefined(path)) {                                                                                          // 83\n    return path;                                                                                                       // 84\n  }                                                                                                                    // 85\n  var path = Blaze._parentData(2).path;                                                                                // 86\n  if (!_.isUndefined(path)) {                                                                                          // 87\n    return path;                                                                                                       // 88\n  }                                                                                                                    // 89\n  var path = Blaze._parentData(3).path;                                                                                // 90\n  if (!_.isUndefined(path)) {                                                                                          // 91\n    return path;                                                                                                       // 92\n  }                                                                                                                    // 93\n}                                                                                                                      // 94\n                                                                                                                       // 95\nEditableJSONInternal.makeEmptyType = function (item) {                                                                 // 96\n  var tests = [                                                                                                        // 97\n    [_.isDate(item), new Date()],                                                                                      // 98\n    [_.isArray(item), []],                                                                                             // 99\n    [_.isObject(item), {}],                                                                                            // 100\n    [_.isNull(item), null],                                                                                            // 101\n    [_.isBoolean(item), false],                                                                                        // 102\n    [_.isNumber(item), 0]                                                                                              // 103\n  ]                                                                                                                    // 104\n  var pass = _.find(tests, function (t) {                                                                              // 105\n    return t[0];                                                                                                       // 106\n  });                                                                                                                  // 107\n  if (pass) {                                                                                                          // 108\n    return pass[1];                                                                                                    // 109\n  }                                                                                                                    // 110\n  return '';                                                                                                           // 111\n}                                                                                                                      // 112\n                                                                                                                       // 113\nEditableJSONInternal.changeValueType = function (item) {                                                               // 114\n  var tests = [                                                                                                        // 115\n    [_.isArray(item), []],                                                                                             // 116\n    [_.isObject(item) && !(_.isArray(item) || _.isDate(item)), {}],                                                    // 117\n    [_.isNumber(item), 0],                                                                                             // 118\n    [_.isBoolean(item), false],                                                                                        // 119\n    [_.isDate(item), new Date()],                                                                                      // 120\n    [_.isNull(item), null],                                                                                            // 121\n    [_.isString(item), '']                                                                                             // 122\n  ]                                                                                                                    // 123\n  var index = 0;                                                                                                       // 124\n  var oldType = _.find(tests, function (t) {                                                                           // 125\n    if (t[0] && (_.isEqual(item, t[1]) || index === 3 || index === 4)) { //  && (_.isEqual(item, t[1]) || index === 0 || index === 4)\n      return true;                                                                                                     // 127\n    }                                                                                                                  // 128\n    index++;                                                                                                           // 129\n  });                                                                                                                  // 130\n  if (oldType) {                                                                                                       // 131\n    var ind = (index < (tests.length - 1)) ? (index + 1) : 0;                                                          // 132\n    return tests[ind][1];                                                                                              // 133\n  }                                                                                                                    // 134\n  return undefined;                                                                                                    // 135\n}                                                                                                                      // 136\n                                                                                                                       // 137\nEditableJSONInternal.deep = function (obj, keys, value) {                                                              // 138\n                                                                                                                       // 139\n  var root;                                                                                                            // 140\n  var i = 0;                                                                                                           // 141\n  var n = keys.length;                                                                                                 // 142\n                                                                                                                       // 143\n  // Set deep value                                                                                                    // 144\n  if (arguments.length > 2) {                                                                                          // 145\n                                                                                                                       // 146\n    root = obj;                                                                                                        // 147\n    n--;                                                                                                               // 148\n                                                                                                                       // 149\n    while (i < n) {                                                                                                    // 150\n      key = keys[i++];                                                                                                 // 151\n      obj = obj[key] = _.isObject(obj[key]) ? obj[key] : {};                                                           // 152\n    }                                                                                                                  // 153\n                                                                                                                       // 154\n    obj[keys[i]] = value;                                                                                              // 155\n                                                                                                                       // 156\n    value = root;                                                                                                      // 157\n                                                                                                                       // 158\n  // Get deep value                                                                                                    // 159\n  } else {                                                                                                             // 160\n    while ((obj = obj[keys[i++]]) != null && i < n) {};                                                                // 161\n    value = i < n ? void 0 : obj;                                                                                      // 162\n  }                                                                                                                    // 163\n                                                                                                                       // 164\n  return value;                                                                                                        // 165\n                                                                                                                       // 166\n}                                                                                                                      // 167\n                                                                                                                       // 168\n/*var test = {                                                                                                         // 169\n  a: [                                                                                                                 // 170\n    {b: {c: \"d\"}},                                                                                                     // 171\n    {e: \"f\"}                                                                                                           // 172\n  ],                                                                                                                   // 173\n  g: \"h\",                                                                                                              // 174\n  i: {\"j.k\" : {l: \"m\"}}                                                                                                // 175\n}                                                                                                                      // 176\nEditableJSONInternal.deep(test, ['a','0','b', 'c'], 'w');                                                              // 177\nEditableJSONInternal.deep(test, ['a', '0', 'e'], 'x');                                                                 // 178\nEditableJSONInternal.deep(test, ['g'], 'y');                                                                           // 179\nEditableJSONInternal.deep(test, ['i','j.k','l'], 'z');                                                                 // 180\nconsole.log(test);*/                                                                                                   // 181\n                                                                                                                       // 182\nEditableJSONInternal.update = function (tmpl, modifier, action, callback, callbackArguments) {                         // 183\n  var collectionName = tmpl.get('collection');                                                                         // 184\n  if (!action) {                                                                                                       // 185\n    var action = {};                                                                                                   // 186\n    var mod = {};                                                                                                      // 187\n    mod[modifier.field] = modifier.value;                                                                              // 188\n    action[modifier.action] = mod;                                                                                     // 189\n  }                                                                                                                    // 190\n  // Only make a change if the new value doesn't match the existing one                                                // 191\n                                                                                                                       // 192\n  if (collectionName) {                                                                                                // 193\n    // Validate -- make sure the change isn't on the id field                                                          // 194\n    // And make sure we're not modifying the same field twice                                                          // 195\n    var okay = true;                                                                                                   // 196\n    var conflict = false;                                                                                              // 197\n    var modFields = [];                                                                                                // 198\n    _.each(action, function (modifier, action) {                                                                       // 199\n      if (_.has(modifier,'_id')) {                                                                                     // 200\n        okay = false;                                                                                                  // 201\n      }                                                                                                                // 202\n      var field = _.keys(modifier)[0];                                                                                 // 203\n      if (!_.contains(modFields, field)) {                                                                             // 204\n        // The following prevents all errors, but is too restrictive                                                   // 205\n        // && !_.find(modFields,function (f){ return field.indexOf(f) !== -1; })                                       // 206\n        modFields.push(field);                                                                                         // 207\n      }                                                                                                                // 208\n      else {                                                                                                           // 209\n        conflict = true;                                                                                               // 210\n      }                                                                                                                // 211\n    });                                                                                                                // 212\n    if (!okay) {                                                                                                       // 213\n      if (EditableJSON.disableIdField) {                                                                               // 214\n        console.log(\"You can't change the _id field.\");                                                                // 215\n      }                                                                                                                // 216\n      return;                                                                                                          // 217\n    }                                                                                                                  // 218\n    if (conflict) {                                                                                                    // 219\n      console.log(\"You can't use conflicting modifiers.\");                                                             // 220\n      return;                                                                                                          // 221\n    }                                                                                                                  // 222\n    var doc = EditableJSONInternal.getContext();                                                                       // 223\n                                                                                                                       // 224\n    // If it's a local collection, we don't bother with the call, we just update locally                               // 225\n    var collection = EditableJSON.collection(collectionName);                                                          // 226\n    if (collection && !collection._name) {                                                                             // 227\n      var res = doUpdate(collectionName, doc._id, action);                                                             // 228\n      if (res) {                                                                                                       // 229\n        var mutatedDoc = EditableJSON.collection(collectionName).findOne({_id: doc._id});                              // 230\n        EditableJSON._runCallbacks(EditableJSON._afterUpdateCallbacks, mutatedDoc, collectionName, action, doc, res);  \n      }                                                                                                                // 232\n      return;                                                                                                          // 233\n    }                                                                                                                  // 234\n                                                                                                                       // 235\n    Meteor.call('editableJSON_update', collectionName, doc._id, action, function (err, res) {                          // 236\n      if (err) {                                                                                                       // 237\n        console.log(\"You can't use conflicting modifiers.\"); // We're making a big assumption here in giving this message -- TODO -- actually check the message\n        console.log(err);                                                                                              // 239\n      }                                                                                                                // 240\n      else {                                                                                                           // 241\n        if (_.isFunction(callback)) {                                                                                  // 242\n          callback.apply(null,callbackArguments);                                                                      // 243\n        }                                                                                                              // 244\n        if (res) {                                                                                                     // 245\n          var mutatedDoc = EditableJSON.collection(collectionName).findOne({_id: doc._id});                            // 246\n          EditableJSON._runCallbacks(EditableJSON._afterUpdateCallbacks, mutatedDoc, collectionName, action, doc, res);\n        }                                                                                                              // 248\n      }                                                                                                                // 249\n    });                                                                                                                // 250\n  }                                                                                                                    // 251\n  else {                                                                                                               // 252\n    var JSONbefore = EditableJSONStore.get('editableJSON' + EditableJSONInternal.store(tmpl.get('store')));            // 253\n    var JSONafter = EditableJSONStore.get('editableJSON' + EditableJSONInternal.store(tmpl.get('store')));             // 254\n    var path = modifier.path;                                                                                          // 255\n    var unsetPath = modifier.unsetPath;                                                                                // 256\n    _.each(action, function (modifier, action) {                                                                       // 257\n      var fieldName = _.keys(modifier)[0];                                                                             // 258\n      var value = modifier[fieldName];                                                                                 // 259\n      switch (action) {                                                                                                // 260\n        case '$set' :                                                                                                  // 261\n          JSONafter = EditableJSONInternal.deep(JSONafter, path, value);                                               // 262\n          break;                                                                                                       // 263\n        case '$unset' :                                                                                                // 264\n          JSONafter = EditableJSONInternal.deep(JSONafter, unsetPath, undefined);                                      // 265\n          break;                                                                                                       // 266\n        case '$push' :                                                                                                 // 267\n          var arr = EditableJSONInternal.deep(JSONafter, path);                                                        // 268\n          arr.push(value);                                                                                             // 269\n          JSONafter = EditableJSONInternal.deep(JSONafter, path, arr);                                                 // 270\n          break;                                                                                                       // 271\n        case '$pull' :                                                                                                 // 272\n          var arr = EditableJSONInternal.deep(JSONafter, path);                                                        // 273\n          arr = _.reduce(arr, function (memo, item) {                                                                  // 274\n            if (!_.isEqual(value, item)) {                                                                             // 275\n              memo.push(item);                                                                                         // 276\n            }                                                                                                          // 277\n            return memo;                                                                                               // 278\n          },[]);                                                                                                       // 279\n          JSONafter = EditableJSONInternal.deep(JSONafter, path, arr);                                                 // 280\n          break;                                                                                                       // 281\n      }                                                                                                                // 282\n                                                                                                                       // 283\n    });                                                                                                                // 284\n    EditableJSONStore.set('editableJSON' + EditableJSONInternal.store(tmpl.get('store')), JSONafter);                  // 285\n    if (_.isFunction(callback)) {                                                                                      // 286\n      callback.apply(null,callbackArguments);                                                                          // 287\n    }                                                                                                                  // 288\n    EditableJSON._runCallbacks(EditableJSON._afterUpdateCallbacks, JSONafter, tmpl.get('store'), action, JSONbefore, 1);\n  }                                                                                                                    // 290\n}                                                                                                                      // 291\n                                                                                                                       // 292\nEditableJSONInternal.handleDoubleClick = function (evt, tmpl) {                                                        // 293\n  evt.stopPropagation();                                                                                               // 294\n  evt.stopImmediatePropagation();                                                                                      // 295\n  var editingField = tmpl.get('editingField');                                                                         // 296\n  if (editingField) {                                                                                                  // 297\n    editingField.set(null);                                                                                            // 298\n  }                                                                                                                    // 299\n  Tracker.flush();                                                                                                     // 300\n  /*console.log(\"tmpl.data:\",tmpl.data); // tmpl.data has the whole data context, including the field we want          // 301\n  console.log(\"this:\", this); // this.value has an object with fld (full path through object), field (deepest field) and val, which is the value for the field*/\n  // Need to check on type of this.value.val and decide if we're adding to an array or an object                       // 303\n  var self = this;                                                                                                     // 304\n  var type = (_.isArray(self.value.val)) ? 'array' : ((_.isObject(self.value.val) && !_.isDate(self.value.val)) ? 'object' : null);\n  var target = tmpl.$(evt.target);                                                                                     // 306\n  if ((target.hasClass('editableJSON-empty-object') && !target.parent().hasClass('editable-JSON-top-level') ) || !type) {\n    if (evt.type === 'click') {                                                                                        // 308\n      return;                                                                                                          // 309\n    }                                                                                                                  // 310\n    if (!localStorage.editableJSONdblclickMessage) {                                                                   // 311\n      localStorage.editableJSONdblclickMessage = true;                                                                 // 312\n      alert('Double click on \"empty\" values to change their type.\\n\\nClick to the right of objects and arrays to add fields.');\n    }                                                                                                                  // 314\n    // Change field type                                                                                               // 315\n    var newValue = EditableJSONInternal.changeValueType(self.value.val);                                               // 316\n    if (!_.isUndefined(newValue)) {                                                                                    // 317\n      // It passed the empty/null/zero/'' test, so we switch its type                                                  // 318\n      var modifier = {                                                                                                 // 319\n        field: self.value.fld,                                                                                         // 320\n        value: newValue,                                                                                               // 321\n        action: \"$set\",                                                                                                // 322\n        path: self.value.path                                                                                          // 323\n      };                                                                                                               // 324\n      EditableJSONInternal.update(tmpl, modifier);                                                                     // 325\n    }                                                                                                                  // 326\n    return;                                                                                                            // 327\n  }                                                                                                                    // 328\n  // Okay, we're not changing a value type with the double click, we're adding a field instead                         // 329\n  var sample = (type === 'array') ? self.value.val[0] : _.values(self.value.val)[0];                                   // 330\n  var newValue = EditableJSONInternal.makeEmptyType(sample);                                                           // 331\n  var fieldName = _.keys(self.value.val)[0] || 'newField';                                                             // 332\n                                                                                                                       // 333\n  // We now add a new field                                                                                            // 334\n  var number = '';                                                                                                     // 335\n  while (type === 'object' && !_.isUndefined(self.value.val[fieldName + number])) {                                    // 336\n    number++;                                                                                                          // 337\n  }                                                                                                                    // 338\n  var newFieldName = fieldName + number;                                                                               // 339\n  var path = self.value && self.value.path || [];                                                                      // 340\n  if (type === 'object') {                                                                                             // 341\n    path = path.concat([newFieldName]);                                                                                // 342\n  }                                                                                                                    // 343\n  var modifier = {                                                                                                     // 344\n    field: self.value.fld + (self.value.fld && ((type === 'object') ? '.' : '') || '') + ((type === 'object') ? (newFieldName) : ''),\n    value: newValue,                                                                                                   // 346\n    action: (type === 'array') ? \"$push\" : \"$set\",                                                                     // 347\n    path: path                                                                                                         // 348\n  }                                                                                                                    // 349\n                                                                                                                       // 350\n  EditableJSONInternal.update(tmpl, modifier, undefined, function (tmpl, evt, newFieldName) {                          // 351\n    // Check for unpublished fields                                                                                    // 352\n    Tracker.flush();                                                                                                   // 353\n    var self = this;                                                                                                   // 354\n    Meteor.defer(function () {                                                                                         // 355\n      var newFieldElem = tmpl.$(evt.target).find('.editable-JSON-field-text').filter(function () { return $(this).text() === newFieldName; });\n      if (tmpl.data.collection && !newFieldElem.length) {                                                              // 357\n        EditableJSON._runCallbacks(EditableJSON._onUnpublishedFieldAddedCallbacks, this, tmpl.get('collection') || tmpl.get('store'), newFieldName, newValue);\n      }                                                                                                                // 359\n      else {                                                                                                           // 360\n        // Make the new automatically field selected for editing                                                       // 361\n        newFieldElem.trigger('click');                                                                                 // 362\n      }                                                                                                                // 363\n    });                                                                                                                // 364\n  }, [tmpl, evt, newFieldName]);                                                                                       // 365\n}                                                                                                                      // 366\n                                                                                                                       // 367\nEditableJSONInternal.store = function (storeName) {                                                                    // 368\n  return (storeName) ? '.' + storeName : '';                                                                           // 369\n}                                                                                                                      // 370\n                                                                                                                       // 371\nEditableJSONInternal.tabToNextField = function (elem, original) {                                                      // 372\n  // Trigger a click on the next field                                                                                 // 373\n  if (!elem.length) {                                                                                                  // 374\n    // Go a level higher and search again                                                                              // 375\n    parentElem = original.parent().closest('.editable-JSON-click-zone');                                               // 376\n    parentSiblingElem = parentElem.next();                                                                             // 377\n    if (parentElem.length) {                                                                                           // 378\n      if (parentSiblingElem.length) {                                                                                  // 379\n        // Try to find next .editable-JSON-field                                                                       // 380\n        elem = parentSiblingElem.find('.editable-JSON-field');                                                         // 381\n        if (!elem.length) {                                                                                            // 382\n          EditableJSONInternal.tabToNextField(elem, parentSiblingElem);                                                // 383\n        }                                                                                                              // 384\n      }                                                                                                                // 385\n      else {                                                                                                           // 386\n        EditableJSONInternal.tabToNextField(parentSiblingElem, parentElem);                                            // 387\n      }                                                                                                                // 388\n    }                                                                                                                  // 389\n  }                                                                                                                    // 390\n  if (elem.length) {                                                                                                   // 391\n    if (elem.eq(0).closest('.editable-JSON')) {                                                                        // 392\n      elem.eq(0).trigger('click');                                                                                     // 393\n    }                                                                                                                  // 394\n  }                                                                                                                    // 395\n}                                                                                                                      // 396\n                                                                                                                       // 397\nEditableJSON.retrieve = function (storeName) {                                                                         // 398\n  return EditableJSONStore.get('editableJSON' + EditableJSONInternal.store(storeName));                                // 399\n}                                                                                                                      // 400\n                                                                                                                       // 401\nTemplate.editableJSON.onCreated(function () {                                                                          // 402\n  var self = this;                                                                                                     // 403\n  self.editingField = new ReactiveVar();                                                                               // 404\n  if (self.data && self.data.collection) {                                                                             // 405\n    self.autorun(function () {                                                                                         // 406\n      var Collection = EditableJSON.collection(self.data.collection);                                                  // 407\n      var doc = Collection && Collection.find().count() && self.data.document; // Collection.find().count() is the reactivity trigger\n      self.collection = self.data.collection;                                                                          // 409\n      self.document = doc || {};                                                                                       // 410\n    });                                                                                                                // 411\n    return;                                                                                                            // 412\n  }                                                                                                                    // 413\n  else if (self.data && self.data.store) {                                                                             // 414\n    self.store = self.data.store;                                                                                      // 415\n  }                                                                                                                    // 416\n  var explicitData = (!_.isUndefined(self.data.observe)) ? self.data.observe : self.data.json;                         // 417\n  var initialValue = (!_.isUndefined(explicitData)) ? explicitData : (((self.store) ? self.parent().data : self.data) || {});\n  EditableJSONStore.set('editableJSON' + EditableJSONInternal.store(self.store), initialValue);                        // 419\n  if (self.data.observe) {                                                                                             // 420\n    self.watcher = new Tracker.Dependency;                                                                             // 421\n    this.autorun(function () {                                                                                         // 422\n      // watcher is watching for external changes                                                                      // 423\n      self.watcher.depend();                                                                                           // 424\n      Meteor.defer(function () {                                                                                       // 425\n        var newJSON = (!_.isUndefined(self.data.observe)) ? self.data.observe : (((self.store) ? self.parent().data : self.data) || {});\n        EditableJSONStore.set('editableJSON' + EditableJSONInternal.store(self.store), newJSON);                       // 427\n      });                                                                                                              // 428\n    });                                                                                                                // 429\n  }                                                                                                                    // 430\n});                                                                                                                    // 431\n                                                                                                                       // 432\nTemplate.editableJSON.helpers({                                                                                        // 433\n  watcher: function () {                                                                                               // 434\n    Template.instance().watcher.changed();                                                                             // 435\n  },                                                                                                                   // 436\n  json: function () {                                                                                                  // 437\n    return this.json || Template.instance().data;                                                                      // 438\n  }                                                                                                                    // 439\n});                                                                                                                    // 440\n                                                                                                                       // 441\nTemplate.editableJSON.events({                                                                                         // 442\n  'dblclick .editable-JSON-click-zone, click .editable-JSON-click-zone' : function (evt, tmpl) {                       // 443\n    // We need to fake a data context to allow addition of top level fields                                            // 444\n    var context = {                                                                                                    // 445\n      field: '',                                                                                                       // 446\n      value: {                                                                                                         // 447\n        val: this.document || this.json || this.observe || tmpl.data,                                                  // 448\n        field: '',                                                                                                     // 449\n        fld: ''                                                                                                        // 450\n      }                                                                                                                // 451\n    }                                                                                                                  // 452\n    EditableJSONInternal.handleDoubleClick.call(context, evt, tmpl);                                                   // 453\n  }                                                                                                                    // 454\n});                                                                                                                    // 455\n                                                                                                                       // 456\nTemplate.editable_JSON.helpers({                                                                                       // 457\n  fields: function () {                                                                                                // 458\n    var self = this;                                                                                                   // 459\n    var index = -1;                                                                                                    // 460\n    var arrayComma = self.arrayComma || false;                                                                         // 461\n    if (_.has(self,'____val')) {                                                                                       // 462\n      index = self.arrIndex - 1;                                                                                       // 463\n      delete self.arrIndex;                                                                                            // 464\n      delete self.arrayComma;                                                                                          // 465\n    }                                                                                                                  // 466\n    var fields = _.map(self, function (value, field) {                                                                 // 467\n      index++;                                                                                                         // 468\n      var parent = null;                                                                                               // 469\n      var number = 2;                                                                                                  // 470\n      while (Blaze._parentData(number) && Blaze._parentData(number)._id === undefined && Blaze._parentData(number).fld === undefined) {\n        number++;                                                                                                      // 472\n      }                                                                                                                // 473\n      parent = Blaze._parentData(number);                                                                              // 474\n      var currentField = (field !== '____val') ? field : index;                                                        // 475\n      var fld = (parent && parent.fld) ? parent.fld + ((currentField !== undefined) ? '.' + currentField : '') : currentField;\n      var parentPath = parent && parent.path || [];                                                                    // 477\n      var path = (currentField !== undefined) ? parentPath.concat([currentField]) : parentPath;                        // 478\n      return {                                                                                                         // 479\n        field:(field !== '____val') ? currentField : null,                                                             // 480\n        value:{val: value, fld: fld, path: path, field: currentField, arrayComma: arrayComma},                         // 481\n        index:index                                                                                                    // 482\n      };                                                                                                               // 483\n    });                                                                                                                // 484\n    return fields;                                                                                                     // 485\n  },                                                                                                                   // 486\n  value: function () {                                                                                                 // 487\n    return (_.isObject(this.value) && _.has(this.value, '____val')) ? this.value.____val : this.value;                 // 488\n  },                                                                                                                   // 489\n  isArray: function () {                                                                                               // 490\n    return _.isArray(this.val);                                                                                        // 491\n  },                                                                                                                   // 492\n  isObject: function () {                                                                                              // 493\n    return _.isObject(this.val);                                                                                       // 494\n  },                                                                                                                   // 495\n  isString: function () {                                                                                              // 496\n    return _.isString(this.val);                                                                                       // 497\n  },                                                                                                                   // 498\n  isBoolean: function () {                                                                                             // 499\n    return _.isBoolean(this.val);                                                                                      // 500\n  },                                                                                                                   // 501\n  isDate: function () {                                                                                                // 502\n    return _.isDate(this.val);                                                                                         // 503\n  },                                                                                                                   // 504\n  isNumber: function () {                                                                                              // 505\n    return _.isNumber(this.val);                                                                                       // 506\n  },                                                                                                                   // 507\n  isNull : function () {                                                                                               // 508\n    return _.isNull(this.val);                                                                                         // 509\n  },                                                                                                                   // 510\n  last: function (obj) {                                                                                               // 511\n    return (obj.____val !== undefined) || _.size(obj) === (this.index + 1);                                            // 512\n  },                                                                                                                   // 513\n  editingField : function () {                                                                                         // 514\n    var fieldName = this.toString()                                                                                    // 515\n    var fldData = Template.parentData(function (data) { return data && data.fld; });                                   // 516\n    var fld = fldData && (fldData.fld + '.' + fieldName) || fieldName;                                                 // 517\n    var template = Blaze._templateInstance();                                                                          // 518\n    var editingField = template.get('editingField');                                                                   // 519\n    return editingField && (editingField.get() === fld) && fieldName;                                                  // 520\n  },                                                                                                                   // 521\n  _idClass: function () {                                                                                              // 522\n    return (String(this) === \"_id\") ? \"editable-JSON-_id-field\" : \"\";                                                  // 523\n  }                                                                                                                    // 524\n});                                                                                                                    // 525\n                                                                                                                       // 526\nTemplate.editable_JSON.events({                                                                                        // 527\n  'click .editable-JSON-field' : function (evt, tmpl) {                                                                // 528\n    evt.stopPropagation();                                                                                             // 529\n    tmpl.$(evt.target).find('.editable-JSON-field-text').trigger('click');                                             // 530\n  },                                                                                                                   // 531\n  'click .editable-JSON-field-text' : function (evt,tmpl) {                                                            // 532\n    evt.stopPropagation();                                                                                             // 533\n    var fieldName = this.toString();                                                                                   // 534\n    if (fieldName === '_id') {                                                                                         // 535\n      return;                                                                                                          // 536\n    }                                                                                                                  // 537\n    var elem = $(evt.target).closest('.editable-JSON-field');                                                          // 538\n    var fldData = Template.parentData(function (data) { return data && data.fld; });                                   // 539\n    var field = fldData && (fldData.fld + '.' + fieldName) || fieldName;                                               // 540\n    if (evt.type === 'click') {                                                                                        // 541\n    var editingField = tmpl.get('editingField');                                                                       // 542\n      if (editingField) {                                                                                              // 543\n        editingField.set(field);                                                                                       // 544\n        Tracker.flush();                                                                                               // 545\n        EditableJSONInternal.editing_key_press(elem,true);                                                             // 546\n      }                                                                                                                // 547\n    }                                                                                                                  // 548\n  },                                                                                                                   // 549\n  'dblclick .editable-JSON-click-zone, click .editable-JSON-click-zone' : function (evt, tmpl) {                       // 550\n    EditableJSONInternal.handleDoubleClick.call(this, evt, tmpl);                                                      // 551\n  },                                                                                                                   // 552\n  'keydown .editable-JSON-field input, focusout .editable-JSON-field input' : function (evt, tmpl) {                   // 553\n    evt.stopPropagation();                                                                                             // 554\n    var charCode = evt.which || evt.keyCode;                                                                           // 555\n    if (evt.type === 'keydown') {                                                                                      // 556\n      if (charCode === 27) {                                                                                           // 557\n        var editingField = tmpl.get('editingField');                                                                   // 558\n        editingField.set(null);                                                                                        // 559\n        return;                                                                                                        // 560\n      }                                                                                                                // 561\n      if (charCode === 9) {                                                                                            // 562\n        evt.preventDefault();                                                                                          // 563\n        // As much as we'd just like to look in this template, we need to go further up the tree, so no tmpl.$ here    // 564\n        var elem = $(evt.target).parent().nextAll(\"span, .editable-JSON-indent\").first().find(\"span.editable-JSON-field-text, span.editable-JSON-edit\");\n        EditableJSONInternal.tabToNextField(elem, $(evt.target));                                                      // 566\n        return;                                                                                                        // 567\n      }                                                                                                                // 568\n      if (charCode !== 13) {                                                                                           // 569\n        EditableJSONInternal.editing_key_press($(evt.target));                                                         // 570\n        return;                                                                                                        // 571\n      }                                                                                                                // 572\n    }                                                                                                                  // 573\n    var editingField = tmpl.get('editingField');                                                                       // 574\n    var currentFieldName = editingField.get();                                                                         // 575\n    if (!currentFieldName) {                                                                                           // 576\n      return;                                                                                                          // 577\n    }                                                                                                                  // 578\n    var parentFieldName = _.initial(currentFieldName.split('.'));                                                      // 579\n    var editedFieldName = $(evt.currentTarget).val();                                                                  // 580\n    var rejoinedParentFieldName = parentFieldName.join('.');                                                           // 581\n    var newFieldName = ((rejoinedParentFieldName) ? rejoinedParentFieldName + '.' : '') + editedFieldName;             // 582\n    if (newFieldName !== currentFieldName) {                                                                           // 583\n      var modifier1 = {};                                                                                              // 584\n      modifier1[currentFieldName] = 1;                                                                                 // 585\n      var action = {                                                                                                   // 586\n        \"$unset\" : modifier1                                                                                           // 587\n      };                                                                                                               // 588\n      if (editedFieldName) {                                                                                           // 589\n        var modifier2 = {};                                                                                            // 590\n        modifier2[newFieldName] = tmpl.data[String(this)];                                                             // 591\n        action[\"$set\"] = modifier2;                                                                                    // 592\n      }                                                                                                                // 593\n      EditableJSONInternal.update(tmpl, {path: (EditableJSONInternal.getPath() || []).concat([editedFieldName]), unsetPath: (EditableJSONInternal.getPath() || []).concat([String(this)])}, action, function () {\n        editingField.set(null);                                                                                        // 595\n      });                                                                                                              // 596\n    }                                                                                                                  // 597\n    else {                                                                                                             // 598\n      editingField.set(null);                                                                                          // 599\n    }                                                                                                                  // 600\n  }                                                                                                                    // 601\n});                                                                                                                    // 602\n                                                                                                                       // 603\nTemplate.editable_JSON_object.helpers({                                                                                // 604\n  notEmpty: function () {                                                                                              // 605\n    return !_.isEmpty(this);                                                                                           // 606\n  }                                                                                                                    // 607\n});                                                                                                                    // 608\n                                                                                                                       // 609\nTemplate.editable_JSON_array.helpers({                                                                                 // 610\n  elements: function () {                                                                                              // 611\n    var self = this;                                                                                                   // 612\n    var lastIndex = self.length - 1;                                                                                   // 613\n    var elements = _.map(this, function (value, index) {                                                               // 614\n      var arrayComma = (index !== lastIndex) ? true : false;                                                           // 615\n      return {element:{____val: value, arrIndex: index, arrayComma: arrayComma}, index: index};                        // 616\n    });                                                                                                                // 617\n    return elements;                                                                                                   // 618\n  },                                                                                                                   // 619\n  last: function (arr) {                                                                                               // 620\n    return arr.length === (this.index + 1);                                                                            // 621\n  }                                                                                                                    // 622\n});                                                                                                                    // 623\n                                                                                                                       // 624\nTemplate.editable_JSON_string.helpers({                                                                                // 625\n  _idField: function () {                                                                                              // 626\n    var parentData = Template.parentData(1);                                                                           // 627\n    return parentData && parentData.fld && parentData.fld === '_id';                                                   // 628\n  }                                                                                                                    // 629\n});                                                                                                                    // 630\n                                                                                                                       // 631\nTemplate.editable_JSON_string.events({                                                                                 // 632\n  'click .editable-JSON-string' : function (evt, tmpl) {                                                               // 633\n    evt.stopPropagation();                                                                                             // 634\n    tmpl.$(evt.target).find('.editable-JSON-edit').trigger('click');                                                   // 635\n  }                                                                                                                    // 636\n});                                                                                                                    // 637\n                                                                                                                       // 638\nTemplate.editable_JSON_number.events({                                                                                 // 639\n  'click .editable-JSON-number' : function (evt, tmpl) {                                                               // 640\n    evt.stopPropagation();                                                                                             // 641\n    tmpl.$(evt.target).find('.editable-JSON-edit').trigger('click');                                                   // 642\n  }                                                                                                                    // 643\n});                                                                                                                    // 644\n                                                                                                                       // 645\nTemplate.editable_JSON_date.helpers({                                                                                  // 646\n  date: function () {                                                                                                  // 647\n    return this.toISOString();                                                                                         // 648\n  }                                                                                                                    // 649\n});                                                                                                                    // 650\n                                                                                                                       // 651\nTemplate.editable_JSON_date.events({                                                                                   // 652\n  'change input' : function (evt, tmpl) {                                                                              // 653\n     var currentDate = new Date(this);                                                                                 // 654\n     var newDate = new Date(tmpl.$('input').val());                                                                    // 655\n     if (currentDate.getTime() !== newDate.getTime()) {                                                                // 656\n       var field = EditableJSONInternal.getField();                                                                    // 657\n       var modifier = {                                                                                                // 658\n         field: field,                                                                                                 // 659\n         value: newDate,                                                                                               // 660\n         action: \"$set\",                                                                                               // 661\n         path: EditableJSONInternal.getPath()                                                                          // 662\n       }                                                                                                               // 663\n       EditableJSONInternal.update(tmpl, modifier);                                                                    // 664\n    }                                                                                                                  // 665\n  }                                                                                                                    // 666\n});                                                                                                                    // 667\n                                                                                                                       // 668\nTemplate.editable_JSON_boolean.helpers({                                                                               // 669\n  boolean: function () {                                                                                               // 670\n    return (this.valueOf() == true) ? 'true' : 'false';                                                                // 671\n  }                                                                                                                    // 672\n});                                                                                                                    // 673\n                                                                                                                       // 674\nTemplate.editable_JSON_boolean.events({                                                                                // 675\n  'click .editable-JSON-boolean' : function (evt,tmpl) {                                                               // 676\n    evt.stopPropagation();                                                                                             // 677\n    var field = EditableJSONInternal.getField();                                                                       // 678\n    var modifier = {                                                                                                   // 679\n      field: field,                                                                                                    // 680\n      value: !this.valueOf(),                                                                                          // 681\n      action: \"$set\",                                                                                                  // 682\n      path: EditableJSONInternal.getPath()                                                                             // 683\n    };                                                                                                                 // 684\n    EditableJSONInternal.update(tmpl,modifier);                                                                        // 685\n  }                                                                                                                    // 686\n});                                                                                                                    // 687\n                                                                                                                       // 688\nBlaze.registerHelper('editable_JSON_getField', function () {                                                           // 689\n  return EditableJSONInternal.getField();                                                                              // 690\n});                                                                                                                    // 691\n                                                                                                                       // 692\nBlaze.registerHelper('editable_JSON_getContext', function () {                                                         // 693\n  return EditableJSONInternal.getContext();                                                                            // 694\n});                                                                                                                    // 695\n                                                                                                                       // 696\nBlaze.registerHelper('editable_JSON_collection', function () {                                                         // 697\n  var template = Blaze._templateInstance();                                                                            // 698\n  var collection = template.get('collection');                                                                         // 699\n  return collection;                                                                                                   // 700\n});                                                                                                                    // 701\n                                                                                                                       // 702\nTemplate.editableJSONInput.created = function () {                                                                     // 703\n  this.editing = new ReactiveVar(false);                                                                               // 704\n}                                                                                                                      // 705\n                                                                                                                       // 706\nTemplate.editableJSONInput.helpers({                                                                                   // 707\n  editing: function () {                                                                                               // 708\n    return Blaze._templateInstance().editing.get();                                                                    // 709\n  }                                                                                                                    // 710\n});                                                                                                                    // 711\n                                                                                                                       // 712\nTemplate.editableJSONInput.events({                                                                                    // 713\n  'click .editable-JSON-edit' : function (evt, tmpl) {                                                                 // 714\n    evt.stopPropagation();                                                                                             // 715\n    if (EditableJSON.disableIdField && String(this) === '_id') {                                                       // 716\n      return;                                                                                                          // 717\n    }                                                                                                                  // 718\n    var parent = $(evt.target).parent();                                                                               // 719\n    tmpl.editing.set(true);                                                                                            // 720\n    Tracker.flush();                                                                                                   // 721\n    EditableJSONInternal.editing_key_press(parent, true);                                                              // 722\n  },                                                                                                                   // 723\n  'keydown input' : function (evt, tmpl) {                                                                             // 724\n    var charCode = evt.which || evt.keyCode;                                                                           // 725\n    if (charCode === 27) {                                                                                             // 726\n      tmpl.editing.set(false);                                                                                         // 727\n    }                                                                                                                  // 728\n    if (charCode === 9) {                                                                                              // 729\n      evt.preventDefault();                                                                                            // 730\n      // Trigger a click on the next field                                                                             // 731\n      // As much as we'd just like to look only in this template, we need to go further up the tree, so no tmpl.$ here // 732\n      var elem = $(evt.target).closest('.editable-JSON-click-zone').next(\".editable-JSON-click-zone\").find(\"span.editable-JSON-field-text, span.editable-JSON-edit\");\n      EditableJSONInternal.tabToNextField(elem, $(evt.target));                                                        // 734\n    }                                                                                                                  // 735\n    if (charCode === 8 || charCode === 46) {                                                                           // 736\n      // If this is an array and the field is empty, remove the field from the array                                   // 737\n      var tellTaleNode = (!_.isUndefined(Template.parentData(5)[\"____val\"]) && Template.parentData(5)) || (!_.isUndefined(Template.parentData(4)[\"____val\"]) && Template.parentData(4));\n      var currentVal = tmpl.$(evt.target).val();                                                                       // 739\n      if (tellTaleNode && currentVal === '') {                                                                         // 740\n        var arrayNode = Template.parentData(function (d) { return _.isArray(d.val) && d.fld; });                       // 741\n        var modifier = {                                                                                               // 742\n          field: arrayNode.fld,                                                                                        // 743\n          value: this.value,                                                                                           // 744\n          action: \"$pull\",                                                                                             // 745\n          path: arrayNode.path                                                                                         // 746\n        };                                                                                                             // 747\n        EditableJSONInternal.update(tmpl, modifier, null, function () {                                                // 748\n          // We need an editing key press because the element will have changed                                        // 749\n          Meteor.defer(function () {                                                                                   // 750\n            EditableJSONInternal.editing_key_press($(document.activeElement));                                         // 751\n          });                                                                                                          // 752\n        });                                                                                                            // 753\n        // Disable the delete key for a couple of seconds                                                              // 754\n        // So that user won't be sent back a page after deleting an array field                                        // 755\n        // if they keep pressing delete                                                                                // 756\n        var disableKeypress = function(e) {                                                                            // 757\n          var charCode = e.which || evt.keyCode;                                                                       // 758\n          if (charCode === 8 || charCode === 45) {                                                                     // 759\n            e.preventDefault();                                                                                        // 760\n          }                                                                                                            // 761\n        }                                                                                                              // 762\n        $(document).on('keypress', disableKeypress);                                                                   // 763\n        Meteor.setTimeout(function () {                                                                                // 764\n          $(document).off('keypress', disableKeypress);                                                                // 765\n        }, 2000);                                                                                                      // 766\n      }                                                                                                                // 767\n    }                                                                                                                  // 768\n    if (charCode !== 13) {                                                                                             // 769\n      EditableJSONInternal.editing_key_press(tmpl.$(evt.target));                                                      // 770\n    }                                                                                                                  // 771\n  },                                                                                                                   // 772\n  'keyup input, focusout input' : function (evt, tmpl) {                                                               // 773\n    if (evt.type === 'keyup') {                                                                                        // 774\n      var charCode = evt.which || evt.keyCode;                                                                         // 775\n      if (charCode !== 13) {                                                                                           // 776\n        return;                                                                                                        // 777\n      }                                                                                                                // 778\n    }                                                                                                                  // 779\n    var elem = tmpl.$(evt.target);                                                                                     // 780\n    var value = elem.val();                                                                                            // 781\n    if (this.number) {                                                                                                 // 782\n      if (!/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?|Infinity)$/.test(value)) {                                                     // 783\n        // If it's not a number, just revert the value and return                                                      // 784\n        elem.val(tmpl.data.value || 0);                                                                                // 785\n        return;                                                                                                        // 786\n      }                                                                                                                // 787\n      else {                                                                                                           // 788\n        value = parseFloat(value);                                                                                     // 789\n        if (_.isNaN(value)) {                                                                                          // 790\n          value = 0;                                                                                                   // 791\n        }                                                                                                              // 792\n      }                                                                                                                // 793\n    }                                                                                                                  // 794\n    if (value !== this.value) {                                                                                        // 795\n      var modifier = {                                                                                                 // 796\n        field: this.field,                                                                                             // 797\n        value: value,                                                                                                  // 798\n        action: \"$set\",                                                                                                // 799\n        path: EditableJSONInternal.getPath()                                                                           // 800\n      };                                                                                                               // 801\n      EditableJSONInternal.update(tmpl, modifier, null, function () {                                                  // 802\n        tmpl.editing.set(false);                                                                                       // 803\n      });                                                                                                              // 804\n    }                                                                                                                  // 805\n    else {                                                                                                             // 806\n      tmpl.editing.set(false);                                                                                         // 807\n    }                                                                                                                  // 808\n  }                                                                                                                    // 809\n});                                                                                                                    // 810\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}