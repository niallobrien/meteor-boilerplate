{"version":3,"sources":["meteor://ðŸ’»app/packages/kadira_flow-router/packages/kadira_flow-router.js"],"names":[],"mappingsiG","file":"/packages/kadira_flow-router.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/kadira:flow-router/server/router.js                                     //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nvar Qs = Npm.require('qs');                                                         // 1\n                                                                                    // 2\nRouter = function () {                                                              // 3\n  this._routes = [];                                                                // 4\n  this._routesMap = {};                                                             // 5\n  this.subscriptions = Function.prototype;                                          // 6\n                                                                                    // 7\n  // holds onRoute callbacks                                                        // 8\n  this._onRouteCallbacks = [];                                                      // 9\n};                                                                                  // 10\n                                                                                    // 11\nRouter.prototype.route = function(pathDef, options) {                               // 12\n  if (!/^\\/.*/.test(pathDef)) {                                                     // 13\n    var message = \"route's path must start with '/'\";                               // 14\n    throw new Error(message);                                                       // 15\n  }                                                                                 // 16\n                                                                                    // 17\n  options = options || {};                                                          // 18\n  var route = new Route(this, pathDef, options);                                    // 19\n  this._routes.push(route);                                                         // 20\n                                                                                    // 21\n  if (options.name) {                                                               // 22\n    this._routesMap[options.name] = route;                                          // 23\n  }                                                                                 // 24\n                                                                                    // 25\n  this._triggerRouteRegister(route);                                                // 26\n  return route;                                                                     // 27\n};                                                                                  // 28\n                                                                                    // 29\nRouter.prototype.group = function(options) {                                        // 30\n  return new Group(this, options);                                                  // 31\n};                                                                                  // 32\n                                                                                    // 33\nRouter.prototype.path = function(pathDef, fields, queryParams) {                    // 34\n  if (this._routesMap[pathDef]) {                                                   // 35\n    pathDef = this._routesMap[pathDef].path;                                        // 36\n  }                                                                                 // 37\n                                                                                    // 38\n  fields = fields || {};                                                            // 39\n  var regExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?]+)+/g;                                          // 40\n  var path = pathDef.replace(regExp, function(key) {                                // 41\n    var firstRegexpChar = key.indexOf(\"(\");                                         // 42\n    // get the content behind : and (\\\\d+/)                                         // 43\n    key = key.substring(1, (firstRegexpChar > 0)? firstRegexpChar: undefined);      // 44\n    // remove +?*                                                                   // 45\n    key = key.replace(/[\\+\\*\\?]+/g, \"\");                                            // 46\n                                                                                    // 47\n    return fields[key] || \"\";                                                       // 48\n  });                                                                               // 49\n                                                                                    // 50\n  path = path.replace(/\\/\\/+/g, \"/\"); // Replace multiple slashes with single slash // 51\n                                                                                    // 52\n  // remove trailing slash                                                          // 53\n  // but keep the root slash if it's the only one                                   // 54\n  path = path.match(/^\\/{1}$/) ? path: path.replace(/\\/$/, \"\");                     // 55\n                                                                                    // 56\n  var strQueryParams = Qs.stringify(queryParams || {});                             // 57\n  if(strQueryParams) {                                                              // 58\n    path += \"?\" + strQueryParams;                                                   // 59\n  }                                                                                 // 60\n                                                                                    // 61\n  return path;                                                                      // 62\n};                                                                                  // 63\n                                                                                    // 64\nRouter.prototype.onRouteRegister = function(cb) {                                   // 65\n  this._onRouteCallbacks.push(cb);                                                  // 66\n};                                                                                  // 67\n                                                                                    // 68\nRouter.prototype._triggerRouteRegister = function(currentRoute) {                   // 69\n  // We should only need to send a safe set of fields on the route                  // 70\n  // object.                                                                        // 71\n  // This is not to hide what's inside the route object, but to show                // 72\n  // these are the public APIs                                                      // 73\n  var routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');             // 74\n  var omittingOptionFields = [                                                      // 75\n    'triggersEnter', 'triggersExit', 'action', 'subscriptions', 'name'              // 76\n  ];                                                                                // 77\n  routePublicApi.options = _.omit(currentRoute.options, omittingOptionFields);      // 78\n                                                                                    // 79\n  _.each(this._onRouteCallbacks, function(cb) {                                     // 80\n    cb(routePublicApi);                                                             // 81\n  });                                                                               // 82\n};                                                                                  // 83\n                                                                                    // 84\n                                                                                    // 85\nRouter.prototype.go = function() {                                                  // 86\n  // client only                                                                    // 87\n};                                                                                  // 88\n                                                                                    // 89\n                                                                                    // 90\nRouter.prototype.current = function() {                                             // 91\n  // client only                                                                    // 92\n};                                                                                  // 93\n                                                                                    // 94\n                                                                                    // 95\nRouter.prototype.triggers = {                                                       // 96\n  enter: function() {                                                               // 97\n    // client only                                                                  // 98\n  },                                                                                // 99\n  exit: function() {                                                                // 100\n    // client only                                                                  // 101\n  }                                                                                 // 102\n};                                                                                  // 103\n                                                                                    // 104\nRouter.prototype.middleware = function() {                                          // 105\n  // client only                                                                    // 106\n};                                                                                  // 107\n                                                                                    // 108\n                                                                                    // 109\nRouter.prototype.getState = function() {                                            // 110\n  // client only                                                                    // 111\n};                                                                                  // 112\n                                                                                    // 113\n                                                                                    // 114\nRouter.prototype.getAllStates = function() {                                        // 115\n  // client only                                                                    // 116\n};                                                                                  // 117\n                                                                                    // 118\n                                                                                    // 119\nRouter.prototype.setState = function() {                                            // 120\n  // client only                                                                    // 121\n};                                                                                  // 122\n                                                                                    // 123\n                                                                                    // 124\nRouter.prototype.removeState = function() {                                         // 125\n  // client only                                                                    // 126\n};                                                                                  // 127\n                                                                                    // 128\n                                                                                    // 129\nRouter.prototype.clearStates = function() {                                         // 130\n  // client only                                                                    // 131\n};                                                                                  // 132\n                                                                                    // 133\n                                                                                    // 134\nRouter.prototype.ready = function() {                                               // 135\n  // client only                                                                    // 136\n};                                                                                  // 137\n                                                                                    // 138\n                                                                                    // 139\nRouter.prototype.initialize = function() {                                          // 140\n  // client only                                                                    // 141\n};                                                                                  // 142\n                                                                                    // 143\nRouter.prototype.wait = function() {                                                // 144\n  // client only                                                                    // 145\n};                                                                                  // 146\n                                                                                    // 147\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/kadira:flow-router/server/group.js                                      //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nGroup = function(router, options) {                                                 // 1\n  options = options || {};                                                          // 2\n  this.prefix = options.prefix || '';                                               // 3\n                                                                                    // 4\n  this._router = router;                                                            // 5\n};                                                                                  // 6\n                                                                                    // 7\nGroup.prototype.route = function(pathDef, options) {                                // 8\n  pathDef = this.prefix + pathDef;                                                  // 9\n  return this._router.route(pathDef, options);                                      // 10\n};                                                                                  // 11\n                                                                                    // 12\nGroup.prototype.group = function(options) {                                         // 13\n  var group = new Group(this._router, options);                                     // 14\n  group.parent = this;                                                              // 15\n                                                                                    // 16\n  return group;                                                                     // 17\n};                                                                                  // 18\n                                                                                    // 19\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/kadira:flow-router/server/route.js                                      //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nRoute = function(router, pathDef, options) {                                        // 1\n  options = options || {};                                                          // 2\n  this.options = options;                                                           // 3\n  this.name = options.name;                                                         // 4\n  this.pathDef = pathDef;                                                           // 5\n                                                                                    // 6\n  // Route.path is deprecated and will be removed in 3.0                            // 7\n  this.path = pathDef;                                                              // 8\n                                                                                    // 9\n  this.action = options.action || Function.prototype;                               // 10\n  this.subscriptions = options.subscriptions || Function.prototype;                 // 11\n  this._subsMap = {};                                                               // 12\n};                                                                                  // 13\n                                                                                    // 14\n                                                                                    // 15\nRoute.prototype.register = function(name, sub, options) {                           // 16\n  this._subsMap[name] = sub;                                                        // 17\n};                                                                                  // 18\n                                                                                    // 19\n                                                                                    // 20\nRoute.prototype.subscription = function(name) {                                     // 21\n  return this._subsMap[name];                                                       // 22\n};                                                                                  // 23\n                                                                                    // 24\n                                                                                    // 25\nRoute.prototype.middleware = function(middleware) {                                 // 26\n                                                                                    // 27\n};                                                                                  // 28\n                                                                                    // 29\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/kadira:flow-router/server/_init.js                                      //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\n// Export Router Instance                                                           // 1\nFlowRouter = new Router();                                                          // 2\nFlowRouter.Router = Router;                                                         // 3\nFlowRouter.Route = Route;                                                           // 4\n                                                                                    // 5\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/kadira:flow-router/server/plugins/fast_render.js                        //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nif(!Package['meteorhacks:fast-render']) {                                           // 1\n  return;                                                                           // 2\n}                                                                                   // 3\n                                                                                    // 4\nFastRender = Package['meteorhacks:fast-render'].FastRender;                         // 5\n                                                                                    // 6\n// hack to run after eveything else on startup                                      // 7\nMeteor.startup(function () {                                                        // 8\n  Meteor.startup(function () {                                                      // 9\n    setupFastRender();                                                              // 10\n  });                                                                               // 11\n});                                                                                 // 12\n                                                                                    // 13\nfunction setupFastRender () {                                                       // 14\n  _.each(FlowRouter._routes, function (route) {                                     // 15\n    FastRender.route(route.pathDef, function (routeParams, path) {                  // 16\n      var self = this;                                                              // 17\n                                                                                    // 18\n      // anyone using Meteor.subscribe for something else?                          // 19\n      var original = Meteor.subscribe;                                              // 20\n      Meteor.subscribe = function () {                                              // 21\n        return _.toArray(arguments);                                                // 22\n      };                                                                            // 23\n                                                                                    // 24\n      route._subsMap = {};                                                          // 25\n      FlowRouter.subscriptions.call(route, path);                                   // 26\n      if(route.subscriptions) {                                                     // 27\n        var queryParams = routeParams.query;                                        // 28\n        var params = _.omit(routeParams, 'query');                                  // 29\n        route.subscriptions(params, queryParams);                                   // 30\n      }                                                                             // 31\n      _.each(route._subsMap, function (args) {                                      // 32\n        self.subscribe.apply(self, args);                                           // 33\n      });                                                                           // 34\n                                                                                    // 35\n      // restore Meteor.subscribe, ... on server side                               // 36\n      Meteor.subscribe = original;                                                  // 37\n    });                                                                             // 38\n  });                                                                               // 39\n}                                                                                   // 40\n                                                                                    // 41\n//////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}