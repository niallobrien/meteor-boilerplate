{"version":3,"sources":["meteor://ðŸ’»app/packages/useraccounts_flow-routing/packages/useraccounts_flow-routing.js"],"names":[],"mappingsfile":"/packages/useraccounts_flow-routing.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/useraccounts:flow-routing/lib/core.js                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n/* global                                                                                                      // 1\n  AccountsTemplates: false,                                                                                    // 2\n  BlazeLayout: false,                                                                                          // 3\n  FlowRouter: false                                                                                            // 4\n*/                                                                                                             // 5\n'use strict';                                                                                                  // 6\n                                                                                                               // 7\n// ---------------------------------------------------------------------------------                           // 8\n                                                                                                               // 9\n// Patterns for methods\" parameters                                                                            // 10\n                                                                                                               // 11\n// ---------------------------------------------------------------------------------                           // 12\n                                                                                                               // 13\n// Add new configuration options                                                                               // 14\n_.extend(AccountsTemplates.CONFIG_PAT, {                                                                       // 15\n  defaultTemplate: Match.Optional(String),                                                                     // 16\n  defaultLayoutRegions: Match.Optional(Object),                                                                // 17\n  defaultContentRegion: Match.Optional(String),                                                                // 18\n  renderLayout: Match.Optional(Object),                                                                        // 19\n  contentRange: Match.Optional(String),                                                                        // 20\n});                                                                                                            // 21\n                                                                                                               // 22\n// Route configuration pattern to be checked with check                                                        // 23\nvar ROUTE_PAT = {                                                                                              // 24\n  name: Match.Optional(String),                                                                                // 25\n  path: Match.Optional(String),                                                                                // 26\n  template: Match.Optional(String),                                                                            // 27\n  layoutTemplate: Match.Optional(String),                                                                      // 28\n  renderLayout: Match.Optional(Object),                                                                        // 29\n  contentRange: Match.Optional(String),                                                                        // 30\n  redirect: Match.Optional(Match.OneOf(String, Match.Where(_.isFunction))),                                    // 31\n};                                                                                                             // 32\n                                                                                                               // 33\n/*                                                                                                             // 34\n  Routes configuration can be done by calling AccountsTemplates.configureRoute with the route name and the     // 35\n  following options in a separate object. E.g. AccountsTemplates.configureRoute(\"gingIn\", option);             // 36\n    name:           String (optional). A unique route\"s name to be passed to iron-router                       // 37\n    path:           String (optional). A unique route\"s path to be passed to iron-router                       // 38\n    template:       String (optional). The name of the template to be rendered                                 // 39\n    layoutTemplate: String (optional). The name of the layout to be used                                       // 40\n    redirect:       String (optional). The name of the route (or its path) where to redirect after form submit // 41\n*/                                                                                                             // 42\n                                                                                                               // 43\n                                                                                                               // 44\n// Allowed routes along with theirs default configuration values                                               // 45\nAccountsTemplates.ROUTE_DEFAULT = {                                                                            // 46\n  changePwd:      { name: \"atChangePwd\",      path: \"/change-password\"},                                       // 47\n  enrollAccount:  { name: \"atEnrollAccount\",  path: \"/enroll-account\"},                                        // 48\n  ensureSignedIn: { name: \"atEnsureSignedIn\", path: null},                                                     // 49\n  forgotPwd:      { name: \"atForgotPwd\",      path: \"/forgot-password\"},                                       // 50\n  resetPwd:       { name: \"atResetPwd\",       path: \"/reset-password\"},                                        // 51\n  signIn:         { name: \"atSignIn\",         path: \"/sign-in\"},                                               // 52\n  signUp:         { name: \"atSignUp\",         path: \"/sign-up\"},                                               // 53\n  verifyEmail:    { name: \"atVerifyEmail\",    path: \"/verify-email\"},                                          // 54\n  resendVerificationEmail: { name: \"atResendVerificationEmail\", path: \"/send-again\"}                           // 55\n};                                                                                                             // 56\n                                                                                                               // 57\n                                                                                                               // 58\n// Current configuration values                                                                                // 59\nAccountsTemplates.options.defaultLayoutRegions = {};                                                           // 60\n// Redirects                                                                                                   // 61\nAccountsTemplates.options.homeRoutePath = \"/\";                                                                 // 62\nAccountsTemplates.options.redirectTimeout = 2000; // 2 seconds                                                 // 63\n                                                                                                               // 64\n// Known routes used to filter out previous path for redirects...                                              // 65\nAccountsTemplates.knownRoutes = [];                                                                            // 66\n                                                                                                               // 67\n// Configured routes                                                                                           // 68\nAccountsTemplates.routes = {};                                                                                 // 69\n                                                                                                               // 70\nAccountsTemplates.configureRoute = function(route, options) {                                                  // 71\n  check(route, String);                                                                                        // 72\n  check(options, Match.OneOf(undefined, Match.ObjectIncluding(ROUTE_PAT)));                                    // 73\n  options = _.clone(options);                                                                                  // 74\n  // Route Configuration can be done only before initialization                                                // 75\n  if (this._initialized) {                                                                                     // 76\n    throw new Error(\"Route Configuration can be done only before AccountsTemplates.init!\");                    // 77\n  }                                                                                                            // 78\n  // Only allowed routes can be configured                                                                     // 79\n  if (!(route in this.ROUTE_DEFAULT)) {                                                                        // 80\n    throw new Error(\"Unknown Route!\");                                                                         // 81\n  }                                                                                                            // 82\n  // Allow route configuration only once                                                                       // 83\n  if (route in this.routes) {                                                                                  // 84\n    throw new Error(\"Route already configured!\");                                                              // 85\n  }                                                                                                            // 86\n                                                                                                               // 87\n  // Possibly adds a initial / to the provided path                                                            // 88\n  if (options && options.path && options.path[0] !== \"/\") {                                                    // 89\n    options.path = \"/\" + options.path;                                                                         // 90\n  }                                                                                                            // 91\n                                                                                                               // 92\n  // Updates the current configuration                                                                         // 93\n  options = _.defaults(options || {}, this.ROUTE_DEFAULT[route]);                                              // 94\n                                                                                                               // 95\n  // Store route options                                                                                       // 96\n  this.routes[route] = options;                                                                                // 97\n                                                                                                               // 98\n  // Known routes are used to filter out previous path for redirects...                                        // 99\n  AccountsTemplates.knownRoutes.push(options.name);                                                            // 100\n                                                                                                               // 101\n  if (Meteor.isServer) {                                                                                       // 102\n    // Configures \"reset password\" email link                                                                  // 103\n    if (route === \"resetPwd\") {                                                                                // 104\n      var resetPwdPath = options.path.substr(1);                                                               // 105\n      Accounts.urls.resetPassword = function(token) {                                                          // 106\n        return Meteor.absoluteUrl(resetPwdPath + \"/\" + token);                                                 // 107\n      };                                                                                                       // 108\n    }                                                                                                          // 109\n    // Configures \"enroll account\" email link                                                                  // 110\n    if (route === \"enrollAccount\") {                                                                           // 111\n      var enrollAccountPath = options.path.substr(1);                                                          // 112\n      Accounts.urls.enrollAccount = function(token) {                                                          // 113\n        return Meteor.absoluteUrl(enrollAccountPath + \"/\" + token);                                            // 114\n      };                                                                                                       // 115\n    }                                                                                                          // 116\n    // Configures \"verify email\" email link                                                                    // 117\n    if (route === \"verifyEmail\") {                                                                             // 118\n      var verifyEmailPath = options.path.substr(1);                                                            // 119\n      Accounts.urls.verifyEmail = function(token) {                                                            // 120\n        return Meteor.absoluteUrl(verifyEmailPath + \"/\" + token);                                              // 121\n      };                                                                                                       // 122\n    }                                                                                                          // 123\n  }                                                                                                            // 124\n                                                                                                               // 125\n  if (route === \"ensureSignedIn\") {                                                                            // 126\n    return;                                                                                                    // 127\n  }                                                                                                            // 128\n  if (route === \"changePwd\" && !AccountsTemplates.options.enablePasswordChange) {                              // 129\n    throw new Error(\"changePwd route configured but enablePasswordChange set to false!\");                      // 130\n  }                                                                                                            // 131\n  if (route === \"forgotPwd\" && !AccountsTemplates.options.showForgotPasswordLink) {                            // 132\n    throw new Error(\"forgotPwd route configured but showForgotPasswordLink set to false!\");                    // 133\n  }                                                                                                            // 134\n  if (route === \"signUp\" && AccountsTemplates.options.forbidClientAccountCreation) {                           // 135\n    throw new Error(\"signUp route configured but forbidClientAccountCreation set to true!\");                   // 136\n  }                                                                                                            // 137\n                                                                                                               // 138\n  // fullPageAtForm template unless user specified a different site-wide default                               // 139\n  var defaultTemplate = AccountsTemplates.options.defaultTemplate || \"fullPageAtForm\";                         // 140\n  // Determines the default layout to be used in case no specific one is                                       // 141\n  // specified for single routes                                                                               // 142\n  var defaultLayout = AccountsTemplates.options.defaultLayout;                                                 // 143\n  var defaultLayoutRegions = AccountsTemplates.options.defaultLayoutRegions;                                   // 144\n  var defaultContentRegion = AccountsTemplates.options.defaultContentRegion;                                   // 145\n                                                                                                               // 146\n  var name = options.name; // Default provided...                                                              // 147\n  var path = options.path; // Default provided...                                                              // 148\n  var template = options.template || defaultTemplate;                                                          // 149\n  var layoutTemplate = options.layoutTemplate || defaultLayout;                                                // 150\n  var contentRegion = options.contentRegion || defaultContentRegion;                                           // 151\n  var layoutRegions = _.clone(options.layoutRegions || defaultLayoutRegions || {});                            // 152\n  layoutRegions[contentRegion] = template;                                                                     // 153\n                                                                                                               // 154\n  // Possibly adds token parameter                                                                             // 155\n  if (_.contains([\"enrollAccount\", \"resetPwd\", \"verifyEmail\"], route)) {                                       // 156\n    path += \"/:paramToken\";                                                                                    // 157\n    if (route === \"verifyEmail\") {                                                                             // 158\n      FlowRouter.route(path, {                                                                                 // 159\n        name: name,                                                                                            // 160\n        triggersEnter: [                                                                                       // 161\n          function() {                                                                                         // 162\n            AccountsTemplates.setState(route);                                                                 // 163\n            AccountsTemplates.setDisabled(true);                                                               // 164\n          }                                                                                                    // 165\n        ],                                                                                                     // 166\n        action: function(params) {                                                                             // 167\n          BlazeLayout.render(layoutTemplate, layoutRegions);                                                   // 168\n                                                                                                               // 169\n          var token = params.paramToken;                                                                       // 170\n          Accounts.verifyEmail(token, function(error) {                                                        // 171\n            AccountsTemplates.setDisabled(false);                                                              // 172\n            AccountsTemplates.submitCallback(error, route, function() {                                        // 173\n              AccountsTemplates.state.form.set(\"result\", AccountsTemplates.texts.info.emailVerified);          // 174\n            });                                                                                                // 175\n          });                                                                                                  // 176\n        }                                                                                                      // 177\n      });                                                                                                      // 178\n    } else {                                                                                                   // 179\n      FlowRouter.route(path, {                                                                                 // 180\n        name: name,                                                                                            // 181\n        triggersEnter: [                                                                                       // 182\n          function() {                                                                                         // 183\n            AccountsTemplates.setState(route);                                                                 // 184\n          }                                                                                                    // 185\n        ],                                                                                                     // 186\n        action: function(params) {                                                                             // 187\n          BlazeLayout.render(layoutTemplate, layoutRegions);                                                   // 188\n        }                                                                                                      // 189\n      });                                                                                                      // 190\n    }                                                                                                          // 191\n  } else {                                                                                                     // 192\n    FlowRouter.route(path, {                                                                                   // 193\n      name: name,                                                                                              // 194\n      triggersEnter: [                                                                                         // 195\n        function() {                                                                                           // 196\n          var redirect = false;                                                                                // 197\n          if (route === 'changePwd') {                                                                         // 198\n            if (!Meteor.loggingIn() && !Meteor.userId()) {                                                     // 199\n              redirect = true;                                                                                 // 200\n            }                                                                                                  // 201\n          } else if (Meteor.userId()) {                                                                        // 202\n            redirect = true;                                                                                   // 203\n          }                                                                                                    // 204\n          if (redirect) {                                                                                      // 205\n            AccountsTemplates.postSubmitRedirect(route);                                                       // 206\n          } else {                                                                                             // 207\n            AccountsTemplates.setState(route);                                                                 // 208\n          }                                                                                                    // 209\n        }                                                                                                      // 210\n      ],                                                                                                       // 211\n      action: function() {                                                                                     // 212\n        BlazeLayout.render(layoutTemplate, layoutRegions);                                                     // 213\n      }                                                                                                        // 214\n    });                                                                                                        // 215\n  }                                                                                                            // 216\n};                                                                                                             // 217\n                                                                                                               // 218\n                                                                                                               // 219\nAccountsTemplates.getRouteName = function(route) {                                                             // 220\n  if (route in this.routes) {                                                                                  // 221\n    return this.routes[route].name;                                                                            // 222\n  }                                                                                                            // 223\n  return null;                                                                                                 // 224\n};                                                                                                             // 225\n                                                                                                               // 226\nAccountsTemplates.getRoutePath = function(route) {                                                             // 227\n  if (route in this.routes) {                                                                                  // 228\n    return this.routes[route].path;                                                                            // 229\n  }                                                                                                            // 230\n  return \"#\";                                                                                                  // 231\n};                                                                                                             // 232\n                                                                                                               // 233\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}